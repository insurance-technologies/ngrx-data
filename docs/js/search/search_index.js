var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AddEntityToState.html",[0,0.164,1,1.075]],["body/classes/AddEntityToState.html",[0,0.304,1,1.768,2,0.575,3,0.264,4,0.207,5,0.207,6,0.245,7,0.198,8,1.889,9,0.811,10,1.767,11,1.784,12,0.207,13,0.761,14,1.987,15,1.808,16,2.178,17,0.407,18,1.469,19,1.345,20,2.493,21,0.724,22,0.585,23,4.197,24,0.389,25,0.026,26,0.324,27,0.356,28,4.197,29,0.759,30,0.575,31,1.728,32,0.293,33,0.811,34,0.58,35,0.99,36,0.927,37,1.407,38,2.408,39,1.535,40,1.673,41,2.439,42,1.565,43,1.565,44,1.535,45,1.465,46,1.673,47,1.673,48,1.465,49,1.281,50,1.465,51,1.214,52,1.214,53,1.214,54,1.214,55,1.319,56,1.214,57,0.927,58,1.214,59,1.214,60,1.059,61,1.214,62,1.214,63,0.867,64,0.011,65,0.016,66,0.011]],["title/classes/AddMany.html",[0,0.164,45,0.941]],["body/classes/AddMany.html",[0,0.304,1,1.673,2,0.575,3,0.264,4,0.207,5,0.207,6,0.245,7,0.198,8,1.889,9,0.811,10,1.767,11,1.784,12,0.207,13,0.761,14,1.987,15,1.654,16,2.178,17,0.407,18,1.469,19,1.345,21,0.724,22,0.585,24,0.389,25,0.026,26,0.324,27,0.356,29,0.759,30,0.575,31,1.214,32,0.293,33,0.811,34,0.58,35,0.99,36,0.927,37,1.407,38,2.408,39,1.535,40,1.673,41,2.439,42,1.565,43,1.565,44,1.535,45,1.548,46,1.673,47,1.673,48,1.465,49,1.281,50,1.465,51,1.214,52,1.214,53,1.214,54,1.728,55,1.768,56,1.214,57,0.927,58,1.214,59,1.214,60,1.059,61,1.214,62,1.214,63,0.867,64,0.011,65,0.016,66,0.011,67,2.493,68,4.197,69,4.197]],["title/classes/CreateEntityState.html",[0,0.164,40,1.075]],["body/classes/CreateEntityState.html",[0,0.305,1,1.687,2,0.586,3,0.269,4,0.211,5,0.211,6,0.234,7,0.189,8,1.803,9,0.826,10,1.773,11,1.79,12,0.211,13,0.771,14,1.975,15,1.666,16,2.185,17,0.406,18,1.462,19,1.35,21,0.726,22,0.543,24,0.396,25,0.026,26,0.33,27,0.363,29,0.773,30,0.586,31,1.237,32,0.299,33,0.826,34,0.582,35,1.009,36,0.944,37,1.415,38,2.422,39,1.551,40,1.78,41,2.448,42,1.578,43,1.578,44,1.551,45,1.477,46,1.687,47,1.687,48,1.477,49,1.291,50,1.477,51,1.751,52,1.237,53,1.237,54,1.237,55,1.336,56,1.237,57,0.944,58,1.237,59,1.237,60,1.078,61,1.237,62,1.237,63,0.883,64,0.011,65,0.016,66,0.011,70,2.006,71,4.252,72,3.003]],["title/injectables/DataService.html",[73,1.756,74,2.077]],["body/injectables/DataService.html",[0,0.12,3,0.223,4,0.175,5,0.175,6,0.276,7,0.231,12,0.175,13,0.674,17,0.359,19,0.523,21,0.408,22,0.69,24,0.586,25,0.026,26,0.408,27,0.449,32,0.584,34,0.223,64,0.016,65,0.014,66,0.009,73,1.908,74,2.256,75,1.666,76,5.363,77,2.109,78,1.828,79,3.142,80,4.44,81,3.716,82,3.716,83,3.716,84,3.142,85,3.716,86,2.764,87,3.142,88,3.142,89,2.922,90,4.44,91,4.44,92,4.44,93,4.44,94,3.754,95,3.754,96,1.334,97,1.828,98,2.764,99,3.194,100,2.325,101,3.194,102,2.495,103,4.92,104,4.92,105,2.739,106,3.716,107,2.472,108,3.349,109,3.716,110,4.16,111,3.181,112,3.142,113,2.764,114,3.754,115,2.495,116,2.907,117,2.873,118,2.495,119,2.256,120,2.873,121,3.716,122,3.66,123,3.286,124,2.696,125,1.767,126,3.194,127,3.716,128,3.716,129,3.716,130,2.495,131,2.495,132,2.495,133,2.495,134,2.701,135,2.495,136,2.495,137,2.495,138,2.495,139,2.495,140,2.495,141,2.495,142,2.495,143,2.495,144,3.716,145,1.389,146,1.856,147,3.716,148,2.109,149,1.515,150,1.666,151,1.389,152,2.109,153,2.109,154,1.515,155,2.109,156,2.109,157,1.889,158,3.716,159,3.716,160,3.716,161,3.716,162,2.526,163,1.856,164,1.666,165,4.44,166,2.495,167,5.261,168,2.495,169,1.515,170,2.495,171,2.495,172,2.495,173,3.071,174,2.495,175,2.495,176,2.495,177,2.495,178,2.495]],["title/interfaces/DataWrapper.html",[179,1.006,180,2.285]],["body/interfaces/DataWrapper.html",[0,0.222,3,0.415,4,0.326,5,0.326,6,0.247,7,0.215,10,1.276,17,0.283,18,1.273,21,0.623,22,0.51,25,0.026,32,0.564,34,0.415,37,1.115,45,1.276,48,1.276,50,1.276,63,1.799,64,0.021,65,0.021,66,0.017,179,1.666,180,4.085,181,2.381,182,2.909,183,4.214,184,3.44,185,3.449,186,3.921,187,3.921,188,4.637,189,3.154,190,3.097,191,3.097,192,3.921,193,3.921,194,3.921,195,3.097,196,3.449,197,3.921,198,3.921,199,3.921,200,3.449,201,2.206]],["title/classes/DeleteAll.html",[0,0.164,47,1.075]],["body/classes/DeleteAll.html",[0,0.305,1,1.687,2,0.586,3,0.269,4,0.211,5,0.211,6,0.234,7,0.189,8,1.803,9,0.826,10,1.773,11,1.79,12,0.211,13,0.771,14,1.975,15,1.666,16,2.185,17,0.406,18,1.462,19,1.35,21,0.726,22,0.543,24,0.396,25,0.026,26,0.33,27,0.363,29,0.773,30,0.586,31,1.237,32,0.299,33,0.826,34,0.582,35,1.009,36,0.944,37,1.415,38,2.422,39,1.551,40,1.687,41,2.448,42,1.578,43,1.578,44,1.551,45,1.477,46,1.687,47,1.78,48,1.477,49,1.291,50,1.477,51,1.237,52,1.237,53,1.237,54,1.237,55,1.336,56,1.237,57,0.944,58,1.751,59,1.237,60,1.078,61,1.237,62,1.237,63,0.883,64,0.011,65,0.016,66,0.011,70,2.006,202,4.252,203,3.003]],["title/classes/DeleteAllEntityStates.html",[0,0.164,43,1.006]],["body/classes/DeleteAllEntityStates.html",[0,0.307,1,1.708,2,0.603,3,0.276,4,0.217,5,0.217,6,0.218,7,0.176,8,1.684,9,0.851,10,1.783,11,1.799,12,0.217,13,0.787,14,1.963,15,1.684,16,2.196,17,0.403,18,1.421,19,1.37,21,0.712,22,0.477,25,0.026,29,0.796,30,0.603,31,1.273,32,0.308,33,0.851,34,0.585,35,1.038,36,0.971,37,1.428,38,2.445,39,1.576,40,1.708,41,2.463,42,1.599,43,1.684,44,1.576,45,1.496,46,1.708,47,1.708,48,1.496,49,1.308,50,1.496,51,1.273,52,1.273,53,1.787,54,1.273,55,1.364,56,1.273,57,0.971,58,1.273,59,1.273,60,1.11,61,1.273,62,1.273,63,0.909,64,0.011,65,0.016,66,0.011,204,4.34]],["title/classes/DeleteEntityFromState.html",[0,0.164,46,1.075]],["body/classes/DeleteEntityFromState.html",[0,0.304,1,1.67,2,0.573,3,0.263,4,0.206,5,0.206,6,0.245,7,0.197,8,1.886,9,0.808,10,1.765,11,1.783,12,0.206,13,0.759,14,1.986,15,1.652,16,2.176,17,0.407,18,1.468,19,1.344,21,0.736,22,0.584,24,0.387,25,0.026,26,0.323,27,0.355,29,0.756,30,0.573,31,1.209,32,0.292,33,0.808,34,0.579,35,0.986,36,0.923,37,1.405,38,2.404,39,1.532,40,1.67,41,2.436,42,1.562,43,1.562,44,1.532,45,1.462,46,1.765,47,1.67,48,1.462,49,1.278,50,1.462,51,1.209,52,1.209,53,1.209,54,1.209,55,1.315,56,1.723,57,1.67,58,1.209,59,1.209,60,1.054,61,1.209,62,1.209,63,0.863,64,0.011,65,0.016,66,0.011,205,2.936,206,4.185,207,4.185]],["title/classes/DeleteEntityState.html",[0,0.164,42,1.006]],["body/classes/DeleteEntityState.html",[0,0.305,1,1.687,2,0.586,3,0.269,4,0.211,5,0.211,6,0.234,7,0.189,8,1.803,9,0.826,10,1.773,11,1.79,12,0.211,13,0.771,14,1.975,15,1.666,16,2.185,17,0.406,18,1.462,19,1.35,21,0.726,22,0.543,24,0.396,25,0.026,26,0.33,27,0.363,29,0.773,30,0.586,31,1.237,32,0.299,33,0.826,34,0.582,35,1.009,36,0.944,37,1.415,38,2.422,39,1.551,40,1.687,41,2.448,42,1.666,43,1.578,44,1.551,45,1.477,46,1.687,47,1.687,48,1.477,49,1.291,50,1.477,51,1.237,52,1.751,53,1.237,54,1.237,55,1.336,56,1.237,57,0.944,58,1.237,59,1.237,60,1.078,61,1.237,62,1.237,63,0.883,64,0.011,65,0.016,66,0.011,70,2.006,208,4.252,209,3.003]],["title/classes/DeleteMany.html",[0,0.164,48,0.941]],["body/classes/DeleteMany.html",[0,0.304,1,1.67,2,0.573,3,0.263,4,0.206,5,0.206,6,0.245,7,0.197,8,1.886,9,0.808,10,1.765,11,1.783,12,0.206,13,0.759,14,1.986,15,1.652,16,2.176,17,0.407,18,1.468,19,1.344,21,0.736,22,0.584,24,0.387,25,0.026,26,0.323,27,0.355,29,0.756,30,0.573,31,1.209,32,0.292,33,0.808,34,0.579,35,0.986,36,0.923,37,1.405,38,2.404,39,1.532,40,1.67,41,2.436,42,1.562,43,1.562,44,1.532,45,1.462,46,1.67,47,1.67,48,1.545,49,1.278,50,1.462,51,1.209,52,1.209,53,1.209,54,1.209,55,1.315,56,1.209,57,0.923,58,1.209,59,1.723,60,1.908,61,1.209,62,1.209,63,0.863,64,0.011,65,0.016,66,0.011,210,2.936,211,4.185,212,4.185]],["title/classes/EntityArrayMapper.html",[0,0.164,195,2.285]],["body/classes/EntityArrayMapper.html",[0,0.216,2,0.882,3,0.404,4,0.317,5,0.317,6,0.243,7,0.222,10,1.534,12,0.317,17,0.276,18,1.015,21,0.497,22,0.497,24,0.596,25,0.026,26,0.497,27,0.545,32,0.555,34,0.404,37,1.087,45,1.243,48,1.243,50,1.243,63,1.856,64,0.021,65,0.021,66,0.017,96,2.002,125,1.622,179,1.639,180,3.723,182,2.863,183,4.147,184,3.385,185,3.36,189,3.366,190,3.017,191,3.017,192,3.82,193,3.82,194,3.82,195,3.723,196,4.147,197,3.82,198,3.82,199,3.82,200,3.36,201,2.149,213,3.385,214,4.518]],["title/classes/EntityService.html",[0,0.164,215,2.545]],["body/classes/EntityService.html",[0,0.175,2,0.357,3,0.164,4,0.129,5,0.129,6,0.276,7,0.23,12,0.129,13,0.531,14,1.904,15,1.972,17,0.375,18,0.657,19,0.384,21,0.66,22,0.692,24,0.7,25,0.026,26,0.583,27,0.64,32,0.604,33,0.504,34,0.164,37,0.704,39,1.148,44,0.919,49,1.004,55,1.434,57,1.928,60,1.312,63,0.538,64,0.007,65,0.011,66,0.007,70,1.223,74,2.955,78,2.185,89,2.935,96,1.051,99,1.777,100,2.151,101,1.777,105,2.034,107,1.629,111,1.629,116,2.151,117,1.845,119,3.406,120,2.761,122,2.176,123,1.954,125,2.155,126,3.727,145,1.019,151,1.019,153,1.548,157,1.499,162,2.623,163,1.362,191,1.223,213,2.534,215,2.176,216,1.548,217,2.926,218,3.09,219,2.788,220,4.865,221,3.654,222,4.174,223,4.174,224,3.654,225,2.926,226,2.926,227,2.926,228,2.926,229,4.563,230,2.926,231,2.788,232,4.319,233,2.926,234,1.831,235,1.831,236,1.831,237,1.831,238,1.831,239,1.831,240,1.831,241,1.831,242,3.543,243,1.831,244,2.926,245,1.831,246,2.926,247,1.954,248,2.926,249,2.926,250,4.319,251,1.831,252,2.534,253,2.926,254,1.831,255,4.174,256,2.926,257,1.831,258,2.926,259,1.831,260,1.831,261,1.954,262,1.831,263,4.174,264,3.654,265,2.219,266,1.831,267,4.563,268,3.543,269,1.831,270,1.831,271,1.831,272,2.926,273,1.223,274,1.548,275,1.831,276,1.019,277,1.831,278,1.502,279,1.019,280,2.926,281,1.629,282,1.629,283,2.034,284,1.831,285,1.548,286,1.831,287,1.831,288,1.112,289,1.362,290,2.788,291,1.831,292,2.926,293,1.362,294,1.831,295,1.831,296,1.831,297,1.831,298,1.831,299,1.831,300,1.831,301,1.831,302,2.926,303,1.831,304,1.831,305,1.831,306,1.831,307,1.831,308,1.831,309,1.548,310,1.548,311,1.777,312,1.223,313,1.831,314,1.548,315,1.831,316,1.831,317,1.831,318,1.831,319,1.831,320,1.831,321,1.831,322,1.831,323,2.926,324,1.831,325,1.831,326,1.831,327,1.831,328,1.831,329,1.831,330,1.831,331,2.926,332,1.831,333,1.831,334,1.831,335,1.831,336,1.548,337,1.831,338,1.831,339,1.831,340,1.831]],["title/classes/EntityStateCollectionAdapter.html",[0,0.164,341,1.904]],["body/classes/EntityStateCollectionAdapter.html",[0,0.078,2,0.319,3,0.146,4,0.115,5,0.115,6,0.261,7,0.21,12,0.115,15,1.88,17,0.356,18,1.508,21,0.746,22,0.65,24,0.77,25,0.026,26,0.699,27,0.705,32,0.162,34,0.349,37,0.393,39,0.513,42,0.784,43,0.784,44,0.513,49,0.393,55,1.451,57,1.062,60,0.586,64,0.006,65,0.01,66,0.006,78,1.392,89,1.494,96,0.957,100,2.041,107,1.485,125,2.124,157,2.343,162,2.209,164,1.781,169,0.991,173,0.909,179,0.784,201,0.776,219,3.394,231,1.09,242,1.09,247,1.09,252,2.612,261,1.09,265,0.991,278,3.588,279,1.882,281,3.428,282,3.399,283,1.485,288,0.991,311,4.222,312,1.781,341,1.485,342,3.634,343,0.991,344,2.667,345,2.667,346,2.667,347,2.667,348,2.667,349,2.667,350,2.667,351,2.667,352,2.667,353,2.667,354,2.667,355,2.903,356,2.667,357,1.984,358,1.632,359,3.2,360,1.984,361,1.632,362,1.984,363,1.632,364,1.984,365,1.632,366,1.984,367,1.632,368,1.984,369,1.632,370,1.984,371,1.632,372,1.984,373,1.632,374,1.984,375,1.632,376,1.984,377,1.632,378,1.984,379,1.632,380,1.984,381,1.632,382,1.984,383,1.632,384,1.632,385,1.984,386,1.984,387,1.632,388,1.632,389,1.781,390,1.984,391,1.09,392,1.882,393,1.09,394,2.258,395,1.214,396,1.214,397,1.984,398,1.214,399,1.984,400,1.09,401,2.607,402,1.781,403,0.991,404,1.214,405,1.214,406,1.214,407,1.09,408,1.214,409,1.214,410,1.781,411,3.085,412,1.214,413,1.984,414,1.214,415,1.214,416,1.214,417,1.214,418,1.09,419,4.023,420,4.58,421,1.214,422,1.214,423,1.214,424,1.214,425,1.214,426,1.214,427,1.214,428,1.214,429,1.214,430,1.214,431,1.214,432,1.214,433,1.214,434,1.214,435,1.214,436,1.214,437,1.214]],["title/interfaces/EntityStatesCollection.html",[179,1.006,278,1.756]],["body/interfaces/EntityStatesCollection.html",[0,0.114,3,0.213,4,0.167,5,0.167,6,0.156,7,0.126,15,1.921,18,1.483,21,0.722,22,0.262,25,0.027,26,0.637,32,0.237,34,0.43,37,0.574,39,1.129,44,0.749,49,0.574,55,0.749,57,1.129,64,0.009,65,0.013,66,0.009,78,0.982,89,1.054,100,1.91,107,2,157,2.441,162,2.65,164,2.399,169,1.448,173,1.328,179,1.056,181,1.224,186,2.016,201,1.134,219,3.759,231,1.593,247,1.593,252,2.624,261,1.593,278,3.53,279,2.406,281,2.873,282,2.406,283,2,288,1.448,311,4.218,312,2.399,341,1.328,342,2.181,343,1.448,355,1.774,357,1.774,359,3.578,360,1.774,362,1.774,364,1.774,366,1.774,368,1.774,370,1.774,372,1.774,374,1.774,376,1.774,378,1.774,380,1.774,382,1.774,385,1.774,386,1.774,389,2.399,390,3.215,391,1.593,392,2.406,393,1.593,394,2.886,395,1.774,396,1.774,397,2.672,398,1.774,399,2.672,400,1.593,401,3.213,402,2.399,403,1.448,404,1.774,405,1.774,406,1.774,407,1.593,408,1.774,409,1.774,410,2.399,411,3.517,412,1.774,413,2.672,414,1.774,415,1.774,416,1.774,417,1.774,418,1.593,419,4.492,420,4.886,421,1.774,422,1.774,423,1.774,424,1.774,425,1.774,426,1.774,427,1.774,428,1.774,429,1.774,430,1.774,431,1.774,432,1.774,433,1.774,434,1.774,435,1.774,436,1.774,437,1.774,438,2.385]],["title/interfaces/ExtendedEntityState.html",[179,1.006,279,1.904]],["body/interfaces/ExtendedEntityState.html",[0,0.111,3,0.206,4,0.162,5,0.162,6,0.101,7,0.081,12,0.162,13,0.636,15,1.941,17,0.259,18,1.476,21,0.729,25,0.027,26,0.589,32,0.23,34,0.423,37,0.555,39,0.725,44,0.725,49,0.555,55,0.725,57,1.331,64,0.009,65,0.013,66,0.009,78,0.951,89,1.021,100,1.873,107,1.952,157,2.433,162,2.612,164,2.341,169,2.129,173,1.285,179,1.031,181,1.185,201,1.098,219,3.83,231,1.542,247,1.542,252,2.573,261,1.542,278,3.515,279,2.359,281,2.359,282,1.952,283,1.952,288,1.402,311,4.222,312,2.341,341,1.285,342,1.402,343,1.402,355,1.717,357,1.717,359,3.152,360,1.717,362,1.717,364,1.717,366,1.717,368,1.717,370,1.717,372,1.717,374,1.717,376,1.717,378,1.717,380,1.717,382,1.717,385,1.717,386,1.717,389,2.341,390,3.152,391,2.341,392,3.099,393,2.341,394,3.83,395,2.608,396,2.608,397,3.785,398,2.608,399,3.785,400,1.542,401,3.16,402,2.341,403,1.402,404,1.717,405,1.717,406,1.717,407,1.542,408,1.717,409,1.717,410,2.341,411,3.482,412,1.717,413,2.608,414,1.717,415,1.717,416,1.717,417,1.717,418,1.542,419,4.455,420,4.863,421,1.717,422,1.717,423,1.717,424,1.717,425,1.717,426,1.717,427,1.717,428,1.717,429,1.717,430,1.717,431,1.717,432,1.717,433,1.717,434,1.717,435,1.717,436,1.717,437,1.717]],["title/interfaces/IDataMapper.html",[179,1.006,189,1.904]],["body/interfaces/IDataMapper.html",[3,0.442,4,0.347,5,0.347,6,0.256,7,0.221,12,0.347,17,0.302,22,0.543,24,0.652,25,0.025,26,0.543,27,0.597,32,0.492,34,0.442,37,1.189,63,1.453,64,0.018,65,0.022,66,0.018,96,2.114,125,1.774,179,1.453,181,2.537,182,3.023,189,3.277,191,3.3,196,4.379,213,3.574,439,4.379,440,4.178,441,4.942,442,5.886]],["title/interfaces/IFormatConverter.html",[134,1.756,179,1.006]],["body/interfaces/IFormatConverter.html",[3,0.366,4,0.288,5,0.288,6,0.265,7,0.24,12,0.288,17,0.385,21,0.576,22,0.635,24,0.692,25,0.026,26,0.576,27,0.633,32,0.408,34,0.366,64,0.015,65,0.019,66,0.015,78,2.158,96,1.882,125,2.076,134,2.692,149,3.701,162,2.692,179,1.204,181,2.103,182,3.129,393,3.501,443,2.736,444,4.432,445,4.432,446,5.153,447,4.432,448,4.096,449,4.935,450,6.443,451,5.609,452,4.432,453,4.686,454,4.432,455,4.096,456,4.096,457,5.242,458,3.047,459,3.463]],["title/classes/ImmutableObservable.html",[0,0.164,268,2.285]],["body/classes/ImmutableObservable.html",[0,0.156,2,0.634,3,0.291,4,0.362,5,0.228,6,0.254,7,0.225,12,0.228,13,0.815,17,0.314,19,0.681,21,0.357,22,0.611,24,0.429,25,0.026,26,0.357,27,0.392,30,1.23,32,0.447,34,0.402,64,0.017,65,0.017,66,0.012,78,1.338,89,2.666,96,1.613,108,2.728,119,3.374,125,1.167,126,3.932,151,2.501,157,2.263,184,1.973,200,2.417,201,1.545,213,1.973,242,3.001,250,4.354,265,2.728,268,3.001,289,2.417,290,2.17,309,2.747,310,2.747,391,3.001,394,2.17,402,2.17,410,3.439,411,3.662,449,2.417,451,3.799,460,3.895,461,2.17,462,4.492,463,4.492,464,4.931,465,4.492,466,5.1,467,4.492,468,5.556,469,5.149,470,4.492,471,4.492,472,4.698,473,3.249,474,3.249,475,3.249,476,2.747,477,3.249,478,3.249,479,5.149,480,3.249,481,4.492,482,3.249,483,3.249,484,3.249,485,4.492,486,4.492,487,3.249,488,3.249,489,3.249,490,3.249,491,3.249,492,3.249,493,3.249,494,3.249,495,3.249,496,4.492,497,3.249,498,3.249,499,2.747,500,2.747,501,4.492,502,3.249,503,3.799,504,3.249,505,4.492,506,3.249,507,3.249,508,3.249,509,3.249,510,2.417,511,3.249,512,3.249]],["title/classes/JsonFormatConverter.html",[0,0.164,513,2.545]],["body/classes/JsonFormatConverter.html",[0,0.192,2,0.784,3,0.359,4,0.282,5,0.282,6,0.263,7,0.22,10,1.424,12,0.282,17,0.35,21,0.63,22,0.63,24,0.683,25,0.026,26,0.569,27,0.625,32,0.515,34,0.359,64,0.015,65,0.019,66,0.015,96,1.859,125,2.057,134,2.941,150,2.683,157,2.057,182,3.107,201,1.911,265,2.44,443,2.683,444,4.378,445,4.378,446,5.116,447,4.378,452,3.397,453,4.851,454,4.378,458,2.989,459,3.397,513,3.851,514,4.501,515,4.182,516,4.018,517,4.018,518,4.018,519,4.018,520,4.018,521,5.177,522,5.728,523,4.018,524,4.018,525,4.018,526,4.018,527,4.018,528,4.018,529,4.018,530,4.018,531,4.018,532,4.018,533,4.018,534,3.397,535,5.177,536,4.018,537,4.018,538,4.018,539,3.397]],["title/classes/MakeRequest.html",[0,0.164,97,1.409]],["body/classes/MakeRequest.html",[0,0.265,2,0.728,3,0.334,4,0.262,5,0.262,6,0.274,7,0.225,9,1.027,10,1.618,11,1.683,12,0.262,13,0.895,14,1.994,16,2.054,17,0.406,18,1.44,19,1.232,21,0.752,22,0.672,24,0.492,25,0.026,26,0.41,27,0.451,29,0.961,30,0.728,32,0.491,33,1.027,34,0.547,35,1.253,36,1.173,64,0.014,65,0.018,66,0.014,97,2.518,116,1.65,117,1.65,120,2.443,124,3.714,145,2.078,276,2.078,392,2.078,540,3.498,541,4.375,542,3.733,543,4.935,544,5.528,545,3.671,546,3.02,547,3.02,548,2.777,549,2.777]],["title/classes/NameValue.html",[0,0.164,550,2.285]],["body/classes/NameValue.html",[0,0.221,2,0.901,3,0.413,4,0.324,5,0.324,6,0.277,7,0.224,12,0.324,13,1.025,14,1.919,17,0.373,19,0.967,21,0.746,22,0.671,24,0.609,25,0.026,26,0.73,27,0.557,30,1.296,34,0.413,64,0.017,65,0.021,66,0.017,78,1.901,550,3.773,551,5.379,552,3.904,553,4.617,554,4.617,555,4.617,556,4.617,557,5.649,558,4.617]],["title/interfaces/NgrxDataConfiguration.html",[179,1.006,559,2.077]],["body/interfaces/NgrxDataConfiguration.html",[3,0.418,4,0.329,5,0.329,6,0.204,7,0.216,12,0.329,13,1.033,17,0.39,21,0.675,25,0.026,27,0.688,32,0.567,34,0.418,64,0.017,65,0.021,66,0.017,94,5.403,95,5.403,134,3.462,149,2.841,150,3.124,179,1.675,181,2.402,189,3.558,190,4.268,439,3.48,559,3.458,560,3.956,561,6.39]],["title/injectables/NgrxDataConfigurationService.html",[73,1.756,105,1.904]],["body/injectables/NgrxDataConfigurationService.html",[0,0.175,3,0.327,4,0.257,5,0.257,6,0.278,7,0.224,12,0.257,13,0.883,17,0.381,19,0.766,21,0.728,22,0.687,24,0.769,25,0.026,26,0.641,27,0.704,29,1.408,30,0.713,32,0.58,34,0.327,64,0.014,65,0.018,66,0.014,73,2.499,75,2.441,89,2.578,96,1.747,98,3.62,105,2.709,114,5.136,116,2.685,117,2.685,125,2.094,145,2.035,151,2.035,154,2.219,155,3.091,156,3.091,157,1.747,187,3.091,242,3.25,293,4.069,336,3.091,418,2.441,559,3.793,562,3.091,563,5.47,564,4.866,565,4.866,566,4.866,567,3.655,568,3.655,569,4.626,570,4.866,571,3.655,572,4.866,573,3.655,574,4.866,575,3.655,576,3.655,577,3.655,578,3.655,579,3.655,580,3.091,581,3.655,582,5.47,583,3.655]],["title/injectables/NgrxDataEffects.html",[73,1.756,584,2.285]],["body/injectables/NgrxDataEffects.html",[0,0.18,3,0.336,4,0.264,5,0.264,6,0.241,7,0.195,11,1.363,12,0.264,13,0.898,17,0.229,19,0.786,22,0.544,24,0.495,25,0.026,26,0.413,27,0.453,29,0.966,30,0.732,32,0.639,34,0.336,37,1.544,64,0.014,65,0.018,66,0.014,73,2.543,74,3.897,75,2.506,89,2.189,97,2.282,100,2.189,105,3.281,110,4.984,111,2.757,116,2.941,119,3.007,120,2.45,151,2.089,154,2.279,157,2.26,163,2.792,190,3.307,213,2.279,218,4.687,276,2.089,285,3.173,289,2.792,584,3.307,585,3.173,586,3.753,587,3.753,588,4.952,589,4.952,590,4.952,591,4.952,592,4.952,593,4.952,594,4.952,595,4.952,596,4.952,597,4.952,598,4.952,599,4.952,600,4.952,601,4.952,602,4.952,603,4.952,604,3.753,605,5.542,606,3.753,607,3.753,608,3.753,609,2.792,610,3.753,611,3.753,612,3.753]],["title/modules/NgrxDataLibModule.html",[273,2.285,613,2.892]],["body/modules/NgrxDataLibModule.html",[0,0.198,3,0.37,4,0.29,5,0.29,6,0.23,7,0.215,17,0.253,22,0.455,24,0.546,25,0.026,26,0.455,27,0.499,32,0.653,33,1.138,34,0.37,64,0.015,65,0.02,66,0.015,79,3.497,96,1.485,125,1.485,152,3.497,154,2.512,157,1.485,173,2.303,273,3.879,559,3.714,569,4.46,580,3.497,584,2.762,609,3.077,614,3.077,615,5.274,616,4.136,617,6.116,618,4.136,619,5.274,620,4.136,621,5.807,622,5.807,623,4.136,624,6.318,625,4.136,626,4.55,627,3.077,628,4.136,629,4.136,630,4.136,631,5.274,632,3.497,633,4.46,634,4.136,635,4.136,636,4.136,637,3.497,638,4.136,639,4.136,640,4.136,641,4.136]],["title/classes/RequestError.html",[0,0.164,547,1.756]],["body/classes/RequestError.html",[0,0.269,2,0.75,3,0.344,4,0.27,5,0.27,6,0.269,7,0.223,9,1.057,10,1.637,11,1.699,12,0.27,13,0.912,14,1.979,16,2.073,17,0.404,18,1.45,19,1.246,21,0.745,22,0.654,24,0.507,25,0.026,26,0.422,27,0.464,29,0.989,30,0.75,32,0.5,33,1.057,34,0.552,35,1.29,36,1.207,64,0.014,65,0.019,66,0.014,97,2.449,116,1.698,117,1.698,120,2.478,124,2.333,145,2.139,276,2.139,392,3.311,540,3.437,541,2.858,545,2.858,546,3.054,547,3.17,548,2.858,549,3.741,642,3.842,643,5.029,644,5.029]],["title/classes/RequestProvider.html",[0,0.164,117,1.512]],["body/classes/RequestProvider.html",[0,0.095,2,0.387,3,0.177,4,0.139,5,0.139,6,0.276,7,0.224,12,0.139,13,0.565,17,0.377,19,0.415,21,0.701,22,0.691,24,0.626,25,0.026,26,0.617,27,0.572,29,0.801,30,1.12,32,0.383,34,0.177,64,0.007,65,0.012,66,0.007,78,1.796,86,3.245,87,1.675,88,1.675,89,2.854,96,1.118,98,2.316,99,3.312,100,1.928,101,3.312,107,1.103,108,2.649,111,2.142,116,1.928,117,2.538,120,2.78,123,4.165,125,2.015,134,3.254,146,4.057,148,1.675,149,1.203,150,2.57,157,2.015,162,3.056,169,3.198,173,2.932,252,3.487,515,3.167,550,3.362,645,5.358,646,1.675,647,3.114,648,3.848,649,3.848,650,3.848,651,3.848,652,3.848,653,5.455,654,4.742,655,3.114,656,3.114,657,3.114,658,5.266,659,4.453,660,5.266,661,5.459,662,3.114,663,1.981,664,1.981,665,1.981,666,1.981,667,1.981,668,1.981,669,1.981,670,1.981,671,3.114,672,1.981,673,3.114,674,3.114,675,1.981,676,3.114,677,1.981,678,5.266,679,3.114,680,1.981,681,3.848,682,4.362,683,1.981,684,1.981,685,3.245,686,3.688,687,1.981,688,1.981,689,3.114,690,1.981,691,1.981,692,3.114,693,1.981,694,1.981,695,2.633,696,1.981,697,1.981,698,3.114,699,1.981,700,1.981,701,1.981,702,5.034,703,4.742,704,5.952,705,5.034,706,3.848,707,1.981,708,1.981,709,1.981,710,1.981,711,1.981,712,1.981,713,1.981,714,1.981,715,1.981,716,1.981,717,1.981,718,4.362,719,1.981,720,1.981,721,1.981,722,4.362,723,3.848,724,1.981,725,1.981,726,1.981,727,1.981,728,1.981]],["title/classes/RequestSuccess.html",[0,0.164,546,1.756]],["body/classes/RequestSuccess.html",[0,0.269,2,0.754,3,0.345,4,0.271,5,0.271,6,0.269,7,0.233,9,1.063,10,1.64,11,1.702,12,0.271,13,0.915,14,1.981,16,2.077,17,0.405,18,1.452,19,1.249,21,0.729,22,0.655,24,0.51,25,0.026,26,0.425,27,0.466,29,0.994,30,0.754,32,0.502,33,1.063,34,0.553,35,1.297,36,1.214,64,0.014,65,0.019,66,0.014,97,2.454,116,1.708,117,1.708,120,2.485,124,2.346,145,2.151,276,2.151,392,2.151,540,3.443,541,2.873,545,2.873,546,3.176,547,3.061,548,3.754,549,2.873,729,3.863,730,5.047,731,5.047]],["title/classes/Update.html",[0,0.164,49,0.823]],["body/classes/Update.html",[0,0.304,1,1.673,2,0.575,3,0.264,4,0.207,5,0.207,6,0.245,7,0.198,8,1.889,9,0.811,10,1.767,11,1.784,12,0.207,13,0.761,14,1.987,15,1.808,16,2.178,17,0.407,18,1.469,19,1.345,20,2.493,21,0.724,22,0.585,24,0.389,25,0.026,26,0.324,27,0.356,29,0.759,30,0.575,31,1.214,32,0.293,33,0.811,34,0.58,35,0.99,36,0.927,37,1.407,38,2.408,39,1.535,40,1.673,41,2.439,42,1.565,43,1.565,44,1.535,45,1.465,46,1.673,47,1.673,48,1.465,49,1.353,50,1.465,51,1.214,52,1.214,53,1.214,54,1.214,55,1.319,56,1.214,57,0.927,58,1.214,59,1.214,60,1.059,61,1.728,62,1.214,63,0.867,64,0.011,65,0.016,66,0.011,732,4.197,733,4.197]],["title/classes/UpdateMany.html",[0,0.164,50,0.941]],["body/classes/UpdateMany.html",[0,0.304,1,1.673,2,0.575,3,0.264,4,0.207,5,0.207,6,0.245,7,0.198,8,1.889,9,0.811,10,1.767,11,1.784,12,0.207,13,0.761,14,1.987,15,1.654,16,2.178,17,0.407,18,1.469,19,1.345,21,0.724,22,0.585,24,0.389,25,0.026,26,0.324,27,0.356,29,0.759,30,0.575,31,1.214,32,0.293,33,0.811,34,0.58,35,0.99,36,0.927,37,1.407,38,2.408,39,1.535,40,1.673,41,2.439,42,1.565,43,1.565,44,1.535,45,1.465,46,1.673,47,1.673,48,1.465,49,1.281,50,1.548,51,1.214,52,1.214,53,1.214,54,1.214,55,1.768,56,1.214,57,0.927,58,1.214,59,1.214,60,1.059,61,1.214,62,1.728,63,0.867,64,0.011,65,0.016,66,0.011,67,2.493,734,4.197,735,4.197]],["title/coverage.html",[736,3.935]],["body/coverage.html",[0,0.32,1,0.817,5,0.183,6,0.305,7,0.246,8,2.071,9,1.759,17,0.159,25,0.026,40,0.817,42,0.764,43,0.764,45,0.715,46,0.817,47,0.817,48,0.715,49,0.625,50,0.715,64,0.01,65,0.014,66,0.01,73,2.336,74,1.578,76,2.198,77,2.198,97,1.577,105,1.447,108,1.578,117,1.149,134,1.335,149,1.578,179,1.646,180,1.736,182,2.973,183,2.849,184,2.326,185,2.849,189,1.447,195,1.736,201,3.259,215,1.934,216,2.198,265,3.798,268,1.736,278,1.335,279,1.447,281,2.979,282,2.979,283,1.447,290,1.736,341,1.447,342,3.25,343,3.25,403,1.578,439,1.934,440,2.198,443,3.352,460,3.352,461,3.352,513,1.934,514,3.384,515,3.038,540,2.533,546,1.335,547,1.335,550,1.736,551,2.198,552,2.198,559,1.578,560,2.198,562,2.198,584,1.736,585,2.198,626,1.934,627,1.934,645,2.198,646,2.198,736,2.198,737,2.198,738,2.599,739,2.599,740,2.599,741,2.599,742,5.019,743,2.198,744,6.168,745,2.198,746,3.831,747,2.198,748,2.599,749,2.198,750,2.198,751,5.351,752,6.065,753,5.941,754,2.198,755,2.198,756,2.198,757,3.981,758,4.525,759,2.198,760,2.198,761,2.198,762,2.198,763,2.599,764,2.599,765,6.065,766,3.831,767,2.599,768,3.831,769,2.599,770,2.599,771,2.599,772,2.599,773,3.831,774,2.599,775,2.599,776,3.384,777,2.599,778,2.599]],["title/dependencies.html",[779,2.864,780,3.057]],["body/dependencies.html",[0,0.226,25,0.026,33,1.576,64,0.018,65,0.021,66,0.018,151,2.628,154,2.866,288,2.866,293,3.511,609,3.511,780,3.511,781,4.72,782,6.816,783,4.72,784,4.72,785,4.72,786,5.726,787,5.726,788,4.72,789,4.72,790,6.409,791,4.72,792,4.72,793,4.72,794,4.72,795,4.72,796,4.72,797,4.72,798,4.72,799,4.72,800,4.72,801,4.72,802,4.72,803,4.72,804,4.72]],["title/miscellaneous/enumerations.html",[805,1.362,806,3.475]],["body/miscellaneous/enumerations.html",[1,1.629,6,0.264,7,0.213,8,1.352,9,1.666,12,0.283,17,0.246,25,0.026,30,1.37,36,1.902,40,1.629,41,2.588,42,1.524,43,1.524,45,1.426,46,1.629,47,1.629,48,1.426,49,1.247,50,1.426,64,0.015,65,0.019,66,0.015,84,3.404,96,1.445,97,2.134,99,3.148,100,2.291,101,3.148,111,2.241,120,2.534,146,3.856,453,3.856,458,3.856,540,2.241,546,2.662,547,2.662,685,2.994,757,2.994,805,1.915,806,3.404,807,3.404,808,3.404,809,4.025,810,5.184,811,3.404,812,5.184,813,4.025,814,4.025,815,5.184,816,5.184,817,5.184,818,5.184,819,4.025]],["title/miscellaneous/functions.html",[510,3.057,805,1.362]],["body/miscellaneous/functions.html",[6,0.253,7,0.204,11,1.226,12,0.225,17,0.338,21,0.353,24,0.861,25,0.025,26,0.717,27,0.788,30,0.869,64,0.012,65,0.017,66,0.012,78,2.391,86,4.111,97,1.834,99,1.949,100,1.419,101,1.949,111,3.665,112,4.909,113,4.111,116,2.443,119,3.526,120,2.931,122,2.387,123,4.429,124,2.705,125,2.256,126,3.526,182,1.648,184,3.356,232,4.673,278,1.648,311,1.949,314,2.714,443,3.417,460,2.144,461,3.417,500,2.714,503,2.714,510,2.387,514,2.387,515,3.878,534,2.714,539,2.714,626,3.314,659,4.673,661,5.312,685,4.111,686,5.081,743,3.767,745,3.767,749,3.767,750,3.767,754,2.714,755,3.767,756,3.767,757,2.387,758,5.081,759,3.767,760,3.767,761,3.767,762,3.767,776,2.387,805,1.527,811,4.909,820,3.767,821,2.714,822,3.209,823,4.454,824,3.209,825,6.282,826,5.526,827,3.209,828,3.209,829,3.209,830,3.209,831,3.209,832,3.209,833,3.209,834,3.209]],["title/index.html",[12,0.201,835,2.422,836,2.422]],["body/index.html",[4,0.361,5,0.361,7,0.181,25,0.022,64,0.019,65,0.022,66,0.019,274,4.352,837,5.147,838,5.147,839,6.395,840,6.395,841,6.595,842,5.147,843,5.147,844,5.147,845,5.147,846,5.147,847,5.147,848,6.03,849,5.147,850,5.147,851,5.147]],["title/license.html",[835,2.422,836,2.422,852,2.422]],["body/license.html",[11,1.219,25,0.02,64,0.016,65,0.02,66,0.016,113,4.098,411,3.345,472,3.748,476,3.748,737,3.748,852,3.748,853,4.432,854,5.995,855,4.432,856,4.432,857,4.432,858,4.432,859,5.509,860,4.432,861,4.432,862,4.432,863,4.432,864,4.432,865,4.432,866,6.793,867,4.432,868,4.432,869,4.432,870,5.995,871,4.432,872,5.509,873,4.432,874,4.432,875,4.432,876,4.432,877,4.432,878,4.432,879,4.432,880,4.432,881,5.509,882,4.432,883,4.432,884,4.432,885,4.432,886,4.432,887,4.432,888,5.509,889,5.509,890,4.432,891,4.432,892,4.432,893,4.432,894,4.432,895,4.432,896,4.432,897,4.432,898,4.432,899,4.432,900,4.432,901,4.432,902,4.432,903,4.432,904,4.432,905,4.432,906,4.432,907,4.432,908,4.432,909,4.432,910,4.432,911,4.432,912,4.432,913,4.432,914,4.432,915,4.432,916,4.432,917,3.748,918,4.432,919,4.432]],["title/modules.html",[614,3.462]],["body/modules.html",[25,0.023,64,0.02,65,0.023,66,0.02,273,3.633,614,4.046,695,4.599,920,5.439,921,5.439]],["title/overview.html",[922,3.935]],["body/overview.html",[2,1.022,25,0.023,64,0.019,65,0.023,66,0.019,75,3.497,181,2.689,466,4.428,613,5.15,632,4.428,633,4.428,637,4.428,747,4.428,780,3.895,917,4.428,922,4.428,923,5.236,924,5.236,925,6.091,926,5.236,927,5.236,928,5.236]],["title/miscellaneous/typealiases.html",[805,1.362,929,4.11]],["body/miscellaneous/typealiases.html",[1,1.514,6,0.271,7,0.219,8,1.618,9,1.845,12,0.338,17,0.294,25,0.026,40,1.514,42,1.416,43,1.416,45,1.325,46,1.514,47,1.514,48,1.325,49,1.159,50,1.325,63,1.829,64,0.018,65,0.022,66,0.018,97,1.984,276,3.462,540,2.682,546,2.474,547,2.474,805,2.291,807,4.073,808,4.073,930,4.817,931,5.797,932,4.817,933,4.817]],["title/miscellaneous/variables.html",[805,1.362,934,3.475]],["body/miscellaneous/variables.html",[4,0.325,6,0.266,7,0.215,12,0.325,15,1.36,25,0.026,29,1.68,30,1.274,64,0.017,65,0.021,66,0.017,108,3.435,126,3.435,157,1.661,281,3.402,282,3.402,283,3.402,290,3.778,341,2.576,342,2.81,343,3.711,389,3.09,400,3.09,401,3.09,403,3.435,407,3.09,449,3.442,460,3.09,461,3.778,464,3.912,499,3.912,627,4.208,776,3.442,805,2.201,820,3.912,821,4.784,934,3.912,935,5.657,936,4.627]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":201,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"coverage.html":{}}}],["0.2.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":926,"title":{},"body":{"overview.html":{}}}],["1.9.0",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["10/20",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["2.5.4",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":747,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2019",{"_index":856,"title":{},"body":{"license.html":{}}}],["25",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":927,"title":{},"body":{"overview.html":{}}}],["3.3.2",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":928,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":521,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["_body",{"_index":648,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_deleteprovider",{"_index":90,"title":{},"body":{"injectables/DataService.html":{}}}],["_getprovider",{"_index":91,"title":{},"body":{"injectables/DataService.html":{}}}],["_postprovider",{"_index":92,"title":{},"body":{"injectables/DataService.html":{}}}],["_putprovider",{"_index":93,"title":{},"body":{"injectables/DataService.html":{}}}],["_requestformat",{"_index":649,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_requesttype",{"_index":650,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_responseformats",{"_index":651,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_url",{"_index":652,"title":{},"body":{"classes/RequestProvider.html":{}}}],["above",{"_index":887,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":294,"title":{},"body":{"classes/EntityService.html":{}}}],["accessors",{"_index":98,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestProvider.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["actions",{"_index":37,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"injectables/NgrxDataEffects.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actions.ts",{"_index":9,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["actions.ts:14",{"_index":543,"title":{},"body":{"classes/MakeRequest.html":{}}}],["actions.ts:15",{"_index":544,"title":{},"body":{"classes/MakeRequest.html":{}}}],["actions.ts:20",{"_index":730,"title":{},"body":{"classes/RequestSuccess.html":{}}}],["actions.ts:21",{"_index":731,"title":{},"body":{"classes/RequestSuccess.html":{}}}],["actions.ts:23",{"_index":71,"title":{},"body":{"classes/CreateEntityState.html":{}}}],["actions.ts:24",{"_index":72,"title":{},"body":{"classes/CreateEntityState.html":{}}}],["actions.ts:27",{"_index":643,"title":{},"body":{"classes/RequestError.html":{}}}],["actions.ts:28",{"_index":644,"title":{},"body":{"classes/RequestError.html":{}}}],["actions.ts:29",{"_index":208,"title":{},"body":{"classes/DeleteEntityState.html":{}}}],["actions.ts:30",{"_index":209,"title":{},"body":{"classes/DeleteEntityState.html":{}}}],["actions.ts:35",{"_index":204,"title":{},"body":{"classes/DeleteAllEntityStates.html":{}}}],["actions.ts:43",{"_index":23,"title":{},"body":{"classes/AddEntityToState.html":{}}}],["actions.ts:44",{"_index":28,"title":{},"body":{"classes/AddEntityToState.html":{}}}],["actions.ts:50",{"_index":68,"title":{},"body":{"classes/AddMany.html":{}}}],["actions.ts:51",{"_index":69,"title":{},"body":{"classes/AddMany.html":{}}}],["actions.ts:57",{"_index":206,"title":{},"body":{"classes/DeleteEntityFromState.html":{}}}],["actions.ts:58",{"_index":207,"title":{},"body":{"classes/DeleteEntityFromState.html":{}}}],["actions.ts:64",{"_index":202,"title":{},"body":{"classes/DeleteAll.html":{}}}],["actions.ts:65",{"_index":203,"title":{},"body":{"classes/DeleteAll.html":{}}}],["actions.ts:71",{"_index":211,"title":{},"body":{"classes/DeleteMany.html":{}}}],["actions.ts:72",{"_index":212,"title":{},"body":{"classes/DeleteMany.html":{}}}],["actions.ts:78",{"_index":732,"title":{},"body":{"classes/Update.html":{}}}],["actions.ts:79",{"_index":733,"title":{},"body":{"classes/Update.html":{}}}],["actions.ts:85",{"_index":734,"title":{},"body":{"classes/UpdateMany.html":{}}}],["actions.ts:86",{"_index":735,"title":{},"body":{"classes/UpdateMany.html":{}}}],["actiontypes",{"_index":36,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{}}}],["actiontypes.addentitytostate",{"_index":31,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.addmany",{"_index":54,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.createentitystate",{"_index":51,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteall",{"_index":58,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteallentitystates",{"_index":53,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteentityfromstate",{"_index":56,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteentitystate",{"_index":52,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deletemany",{"_index":59,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.makerequest",{"_index":545,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["actiontypes.requesterror",{"_index":549,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["actiontypes.requestsuccess",{"_index":548,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["actiontypes.update",{"_index":61,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.updatemany",{"_index":62,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["adapter",{"_index":283,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.getinitialstate",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adapter.ts",{"_index":343,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.ts:103",{"_index":361,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:111",{"_index":369,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:122",{"_index":367,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:134",{"_index":365,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:146",{"_index":375,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:158",{"_index":373,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:170",{"_index":371,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:182",{"_index":379,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:194",{"_index":377,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:206",{"_index":383,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:218",{"_index":381,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:229",{"_index":387,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:50",{"_index":384,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:60",{"_index":358,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:7",{"_index":438,"title":{},"body":{"interfaces/EntityStatesCollection.html":{}}}],["adapter.ts:84",{"_index":363,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["add",{"_index":252,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{}}}],["add:any",{"_index":192,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["addentitystate",{"_index":344,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["addentitystate(name",{"_index":357,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["addentitytostate",{"_index":1,"title":{"classes/AddEntityToState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addmany",{"_index":45,"title":{"classes/AddMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["affect",{"_index":38,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["aliases",{"_index":930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allactions",{"_index":931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":408,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["always",{"_index":465,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["and/or",{"_index":879,"title":{},"body":{"license.html":{}}}],["angular",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular/animations",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":152,"title":{},"body":{"injectables/DataService.html":{},"modules/NgrxDataLibModule.html":{}}}],["angular/compiler",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":154,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":88,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{}}}],["application/json",{"_index":519,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["arising",{"_index":916,"title":{},"body":{"license.html":{}}}],["array",{"_index":184,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["arraybuffer",{"_index":453,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"miscellaneous/enumerations.html":{}}}],["arrays",{"_index":715,"title":{},"body":{"classes/RequestProvider.html":{}}}],["asociated",{"_index":692,"title":{},"body":{"classes/RequestProvider.html":{}}}],["assigned",{"_index":726,"title":{},"body":{"classes/RequestProvider.html":{}}}],["associated",{"_index":867,"title":{},"body":{"license.html":{}}}],["at(param",{"_index":671,"title":{},"body":{"classes/RequestProvider.html":{}}}],["authors",{"_index":906,"title":{},"body":{"license.html":{}}}],["available",{"_index":695,"title":{},"body":{"classes/RequestProvider.html":{},"modules.html":{}}}],["base",{"_index":122,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["baseurl",{"_index":124,"title":{},"body":{"injectables/DataService.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"miscellaneous/functions.html":{}}}],["between",{"_index":532,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["blob",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":661,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":924,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":921,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["btoa(unescape(encodeuricomponent(string",{"_index":536,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["build",{"_index":838,"title":{},"body":{"index.html":{}}}],["build_lib",{"_index":842,"title":{},"body":{"index.html":{}}}],["building",{"_index":837,"title":{},"body":{"index.html":{}}}],["c",{"_index":855,"title":{},"body":{"license.html":{}}}],["case",{"_index":689,"title":{},"body":{"classes/RequestProvider.html":{}}}],["catcherror",{"_index":611,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["catcherror(err",{"_index":600,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["change",{"_index":247,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["changes",{"_index":401,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":863,"title":{},"body":{"license.html":{}}}],["charlist",{"_index":537,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["charset=utf",{"_index":520,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["claim",{"_index":909,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"overview.html":{}}}],["click",{"_index":849,"title":{},"body":{"index.html":{}}}],["client",{"_index":112,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":714,"title":{},"body":{"classes/RequestProvider.html":{}}}],["collection",{"_index":282,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":475,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["communication",{"_index":80,"title":{},"body":{"injectables/DataService.html":{}}}],["communication.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["complete",{"_index":491,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["conditions",{"_index":886,"title":{},"body":{"license.html":{}}}],["config",{"_index":569,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{}}}],["configservice",{"_index":218,"title":{},"body":{"classes/EntityService.html":{},"injectables/NgrxDataEffects.html":{}}}],["configuaration.service",{"_index":153,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{}}}],["configuration",{"_index":114,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["configurationservice",{"_index":104,"title":{},"body":{"injectables/DataService.html":{}}}],["connection",{"_index":918,"title":{},"body":{"license.html":{}}}],["const",{"_index":402,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["constructed",{"_index":701,"title":{},"body":{"classes/RequestProvider.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["constructor(@inject('ngrxdataconfig",{"_index":583,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["constructor(actions",{"_index":586,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["constructor(config",{"_index":567,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["constructor(data",{"_index":729,"title":{},"body":{"classes/RequestSuccess.html":{}}}],["constructor(entities",{"_index":67,"title":{},"body":{"classes/AddMany.html":{},"classes/UpdateMany.html":{}}}],["constructor(entity",{"_index":20,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/Update.html":{}}}],["constructor(errors",{"_index":642,"title":{},"body":{"classes/RequestError.html":{}}}],["constructor(http",{"_index":102,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(id",{"_index":205,"title":{},"body":{"classes/DeleteEntityFromState.html":{}}}],["constructor(ids",{"_index":210,"title":{},"body":{"classes/DeleteMany.html":{}}}],["constructor(injector",{"_index":640,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["constructor(name",{"_index":555,"title":{},"body":{"classes/NameValue.html":{}}}],["constructor(private",{"_index":163,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"injectables/NgrxDataEffects.html":{}}}],["constructor(provideruid",{"_index":542,"title":{},"body":{"classes/MakeRequest.html":{}}}],["constructor(public",{"_index":558,"title":{},"body":{"classes/NameValue.html":{}}}],["constructor(route",{"_index":662,"title":{},"body":{"classes/RequestProvider.html":{}}}],["constructor(source",{"_index":470,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["constructor(uniquename",{"_index":70,"title":{},"body":{"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityState.html":{},"classes/EntityService.html":{}}}],["constructor.decorator.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["containing",{"_index":127,"title":{},"body":{"injectables/DataService.html":{}}}],["content",{"_index":457,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["contract",{"_index":913,"title":{},"body":{"license.html":{}}}],["convert",{"_index":449,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"miscellaneous/variables.html":{}}}],["converter",{"_index":150,"title":{},"body":{"injectables/DataService.html":{},"classes/JsonFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{}}}],["converter.ts",{"_index":443,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["converter.ts:11",{"_index":517,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["converter.ts:15",{"_index":455,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converter.ts:16",{"_index":516,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["converter.ts:21",{"_index":448,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converter.ts:7",{"_index":518,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["converter.ts:9",{"_index":456,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converttodata",{"_index":444,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["converttodata(obj",{"_index":447,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["converttoobject",{"_index":445,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["converttoobject(data",{"_index":454,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["copied",{"_index":528,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["copies",{"_index":881,"title":{},"body":{"license.html":{}}}],["copy",{"_index":411,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"license.html":{}}}],["copy[name",{"_index":413,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["copy[uniquename",{"_index":437,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["copyright",{"_index":854,"title":{},"body":{"license.html":{}}}],["core",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":736,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":107,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{}}}],["createentityadapter",{"_index":389,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["createentityindb",{"_index":222,"title":{},"body":{"classes/EntityService.html":{}}}],["createentitystate",{"_index":40,"title":{"classes/CreateEntityState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createobservables",{"_index":223,"title":{},"body":{"classes/EntityService.html":{}}}],["customs",{"_index":495,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["damages",{"_index":910,"title":{},"body":{"license.html":{}}}],["data",{"_index":7,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":285,"title":{},"body":{"classes/EntityService.html":{},"injectables/NgrxDataEffects.html":{}}}],["data.service.ts",{"_index":77,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["data.service.ts:18",{"_index":131,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:19",{"_index":132,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:20",{"_index":130,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:21",{"_index":133,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:23",{"_index":135,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:24",{"_index":136,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:29",{"_index":138,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:34",{"_index":140,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:39",{"_index":142,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:44",{"_index":106,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:70",{"_index":118,"title":{},"body":{"injectables/DataService.html":{}}}],["database",{"_index":39,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["dataentitiesdb",{"_index":41,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{}}}],["datamapper",{"_index":190,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataEffects.html":{}}}],["datamapper.map(response",{"_index":599,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["dataservice",{"_index":74,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["datawrapper",{"_index":180,"title":{"interfaces/DataWrapper.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"coverage.html":{}}}],["dbactions",{"_index":63,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"interfaces/IDataMapper.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/typealiases.html":{}}}],["dbactions.createentitystate(this.uniquename",{"_index":303,"title":{},"body":{"classes/EntityService.html":{}}}],["dbactions.dbactions",{"_index":442,"title":{},"body":{"interfaces/IDataMapper.html":{}}}],["dbadapter",{"_index":286,"title":{},"body":{"classes/EntityService.html":{}}}],["dbname",{"_index":561,"title":{},"body":{"interfaces/NgrxDataConfiguration.html":{}}}],["deafaultrequestformat",{"_index":94,"title":{},"body":{"injectables/DataService.html":{},"interfaces/NgrxDataConfiguration.html":{}}}],["deafaultresponseformats",{"_index":95,"title":{},"body":{"injectables/DataService.html":{},"interfaces/NgrxDataConfiguration.html":{}}}],["deal",{"_index":869,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":919,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":632,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["decorators",{"_index":604,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["default",{"_index":29,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["delete",{"_index":100,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["delete:string",{"_index":194,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["deleteall",{"_index":47,"title":{"classes/DeleteAll.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteallentitystates",{"_index":43,"title":{"classes/DeleteAllEntityStates.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteallentitystates(state",{"_index":360,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["deleteentityfromstate",{"_index":46,"title":{"classes/DeleteEntityFromState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteentitystate",{"_index":42,"title":{"classes/DeleteEntityState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteentitystate(name",{"_index":362,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["deletemany",{"_index":48,"title":{"classes/DeleteMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleterequest",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deleterequest(http",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deleterequestprovider",{"_index":564,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["deleterequestprovider(uuid",{"_index":570,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["dependencies",{"_index":780,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":78,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/NameValue.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["devtools",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["dictionary",{"_index":287,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatch",{"_index":224,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatch(provider",{"_index":244,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchaddentity",{"_index":225,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchaddentity(entity",{"_index":249,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchdeleteentity",{"_index":226,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchdeleteentity(id",{"_index":253,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchgetbyid",{"_index":227,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchgetbyid(id",{"_index":256,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchupdateentity",{"_index":228,"title":{},"body":{"classes/EntityService.html":{}}}],["dispatchupdateentity(entity",{"_index":258,"title":{},"body":{"classes/EntityService.html":{}}}],["distribute",{"_index":877,"title":{},"body":{"license.html":{}}}],["docs",{"_index":844,"title":{},"body":{"index.html":{}}}],["document",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":737,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dynamic",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":261,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["e.id",{"_index":430,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["e=>e.filter(f",{"_index":332,"title":{},"body":{"classes/EntityService.html":{}}}],["each",{"_index":512,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["effect",{"_index":605,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["effectsmodule",{"_index":629,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["effectsmodule.forroot([ngrxdataeffects",{"_index":635,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["encodeuri(url",{"_index":712,"title":{},"body":{"classes/RequestProvider.html":{}}}],["endpoint",{"_index":232,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["endpoint}/{id",{"_index":255,"title":{},"body":{"classes/EntityService.html":{}}}],["entites",{"_index":316,"title":{},"body":{"classes/EntityService.html":{}}}],["entities",{"_index":55,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["entity",{"_index":15,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/variables.html":{}}}],["entity.id",{"_index":428,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter",{"_index":403,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityadapter.addall(entities",{"_index":423,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.addmany(entities",{"_index":422,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.addone(entity",{"_index":421,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.getinitialstate",{"_index":414,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.getselectors",{"_index":407,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["entityadapter.removeall(es",{"_index":426,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.removemany(ids",{"_index":425,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.removeone(id",{"_index":424,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.updatemany(entities.map(e=>{return{id",{"_index":429,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.updateone",{"_index":427,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.upsertmany(entities",{"_index":432,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.upsertone(entity",{"_index":431,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityarraymapper",{"_index":195,"title":{"classes/EntityArrayMapper.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"coverage.html":{}}}],["entityservice",{"_index":215,"title":{"classes/EntityService.html":{}},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["entitystate",{"_index":219,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddall",{"_index":345,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddall(entities",{"_index":364,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddmany",{"_index":346,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddmany(entities",{"_index":366,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddone",{"_index":347,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddone(entity",{"_index":368,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystatecollectionadapter",{"_index":341,"title":{"classes/EntityStateCollectionAdapter.html":{}},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitystateremoveall",{"_index":348,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremoveall(uniquename",{"_index":370,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateremovemany",{"_index":349,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremovemany(ids",{"_index":372,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateremoveone",{"_index":350,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremoveone(id",{"_index":374,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystatescollection",{"_index":278,"title":{"interfaces/EntityStatesCollection.html":{}},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["entitystateupdatemany",{"_index":351,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupdatemany(entities",{"_index":376,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupdateone",{"_index":352,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupdateone(entity",{"_index":378,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupsertmany",{"_index":353,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupsertmany(entities",{"_index":380,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupsertone",{"_index":354,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupsertone(entity",{"_index":382,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["enum",{"_index":35,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["enumerations",{"_index":806,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":489,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["errors",{"_index":392,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["es",{"_index":420,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["event",{"_index":905,"title":{},"body":{"license.html":{}}}],["example",{"_index":498,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["execute",{"_index":248,"title":{},"body":{"classes/EntityService.html":{}}}],["exist",{"_index":312,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["exports",{"_index":637,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["express",{"_index":896,"title":{},"body":{"license.html":{}}}],["extendedentitystate",{"_index":279,"title":{"interfaces/ExtendedEntityState.html":{}},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{}}}],["extendedentitystate)=>extendedentitystate",{"_index":433,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["extends",{"_index":391,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["extern",{"_index":81,"title":{},"body":{"injectables/DataService.html":{}}}],["external",{"_index":395,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["f",{"_index":264,"title":{},"body":{"classes/EntityService.html":{}}}],["false",{"_index":310,"title":{},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":868,"title":{},"body":{"license.html":{}}}],["filter",{"_index":267,"title":{},"body":{"classes/EntityService.html":{}}}],["filter(db=>db[this.uniquename",{"_index":308,"title":{},"body":{"classes/EntityService.html":{}}}],["fitness",{"_index":901,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":87,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{}}}],["following",{"_index":885,"title":{},"body":{"license.html":{}}}],["for(let",{"_index":200,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"classes/ImmutableObservable.html":{}}}],["format",{"_index":515,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/RequestProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["format/format",{"_index":149,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["format/json",{"_index":514,"title":{},"body":{"classes/JsonFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdatatype",{"_index":458,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"miscellaneous/enumerations.html":{}}}],["formats",{"_index":86,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["formatsacepted",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forroot",{"_index":618,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["forroot(config",{"_index":619,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["free",{"_index":862,"title":{},"body":{"license.html":{}}}],["func",{"_index":388,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["func(entitystate",{"_index":436,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["function",{"_index":265,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"coverage.html":{}}}],["functions",{"_index":510,"title":{"miscellaneous/functions.html":{}},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":884,"title":{},"body":{"license.html":{}}}],["g_docs",{"_index":845,"title":{},"body":{"index.html":{}}}],["generate",{"_index":843,"title":{},"body":{"index.html":{}}}],["generated",{"_index":698,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getbody",{"_index":693,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getconfiguration",{"_index":577,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getcontenttype",{"_index":446,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["getdelete",{"_index":141,"title":{},"body":{"injectables/DataService.html":{}}}],["getget",{"_index":137,"title":{},"body":{"injectables/DataService.html":{}}}],["getinitialstate",{"_index":355,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["getpost",{"_index":139,"title":{},"body":{"injectables/DataService.html":{}}}],["getput",{"_index":143,"title":{},"body":{"injectables/DataService.html":{}}}],["getrequest",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrequest(http",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrequestformat",{"_index":687,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getrequestprovider",{"_index":565,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getrequestprovider(uuid",{"_index":572,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getrequesttype",{"_index":690,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getresponseformats",{"_index":683,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getting",{"_index":835,"title":{"index.html":{},"license.html":{}},"body":{}}],["geturl",{"_index":696,"title":{},"body":{"classes/RequestProvider.html":{}}}],["given",{"_index":121,"title":{},"body":{"injectables/DataService.html":{}}}],["granted",{"_index":861,"title":{},"body":{"license.html":{}}}],["graph",{"_index":920,"title":{},"body":{"modules.html":{}}}],["help",{"_index":412,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["helpers/immutable",{"_index":291,"title":{},"body":{"classes/EntityService.html":{}}}],["here",{"_index":850,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":860,"title":{},"body":{"license.html":{}}}],["holders",{"_index":907,"title":{},"body":{"license.html":{}}}],["ht",{"_index":144,"title":{},"body":{"injectables/DataService.html":{}}}],["http",{"_index":111,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["http/http",{"_index":147,"title":{},"body":{"injectables/DataService.html":{}}}],["http/request",{"_index":145,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["http/response",{"_index":459,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["httpclient",{"_index":103,"title":{},"body":{"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":631,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["httpmethod",{"_index":146,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{}}}],["httpmethod.delete",{"_index":175,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.get",{"_index":172,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.post",{"_index":174,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.put",{"_index":176,"title":{},"body":{"injectables/DataService.html":{}}}],["httprequest",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://angularfirebase.com/lessons/custom",{"_index":497,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["https://stackoverflow.com/questions/17191945/conversion",{"_index":531,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["id",{"_index":57,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["idatamapper",{"_index":189,"title":{"interfaces/IDataMapper.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"interfaces/IDataMapper.html":{},"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["identifier",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":60,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["if(!entityadapter",{"_index":435,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(!next.lastvalue",{"_index":484,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(!state[name",{"_index":415,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(array.isarray(value",{"_index":502,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(f",{"_index":330,"title":{},"body":{"classes/EntityService.html":{}}}],["if(state[name",{"_index":409,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(this.lastvalue",{"_index":493,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(typeof",{"_index":504,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["iformatconverter",{"_index":134,"title":{"interfaces/IFormatConverter.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["immutableobservable",{"_index":268,"title":{"classes/ImmutableObservable.html":{}},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{}}}],["immutableobservable(source",{"_index":499,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":10,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["implied",{"_index":897,"title":{},"body":{"license.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["important",{"_index":594,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["imports",{"_index":634,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["include",{"_index":700,"title":{},"body":{"classes/RequestProvider.html":{}}}],["included",{"_index":890,"title":{},"body":{"license.html":{}}}],["including",{"_index":872,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":186,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["initial",{"_index":385,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["initialstate",{"_index":627,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":579,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["injectable",{"_index":73,"title":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{}},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"overview.html":{}}}],["injector",{"_index":624,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["injectrequestprovider",{"_index":566,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["injectrequestprovider(uuid",{"_index":574,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["inmutable",{"_index":464,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/variables.html":{}}}],["inmutableobservable",{"_index":263,"title":{},"body":{"classes/EntityService.html":{}}}],["instance",{"_index":109,"title":{},"body":{"injectables/DataService.html":{}}}],["insurance",{"_index":857,"title":{},"body":{"license.html":{}}}],["interface",{"_index":179,"title":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["interface.ts",{"_index":440,"title":{},"body":{"interfaces/IDataMapper.html":{},"coverage.html":{}}}],["interface.ts:7",{"_index":441,"title":{},"body":{"interfaces/IDataMapper.html":{}}}],["interfaces",{"_index":181,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"overview.html":{}}}],["item",{"_index":501,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["javascript",{"_index":450,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["js",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(str",{"_index":525,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["json.stringify(obj",{"_index":526,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["jsonformatconverter",{"_index":513,"title":{"classes/JsonFormatConverter.html":{}},"body":{"classes/JsonFormatConverter.html":{},"coverage.html":{}}}],["kind",{"_index":895,"title":{},"body":{"license.html":{}}}],["lastvalue",{"_index":468,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["legend",{"_index":923,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":911,"title":{},"body":{"license.html":{}}}],["liable",{"_index":908,"title":{},"body":{"license.html":{}}}],["lib.module",{"_index":275,"title":{},"body":{"classes/EntityService.html":{}}}],["lib.module.ts",{"_index":616,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib.module.ts:30",{"_index":620,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib/src/lib/data",{"_index":182,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/helpers/immutable",{"_index":460,"title":{},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/helpers/static",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/http/http",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/http/request",{"_index":645,"title":{},"body":{"classes/RequestProvider.html":{},"coverage.html":{}}}],["lib/src/lib/http/response",{"_index":813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/src/lib/models/configuration.ts",{"_index":560,"title":{},"body":{"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["lib/src/lib/models/name",{"_index":551,"title":{},"body":{"classes/NameValue.html":{},"coverage.html":{}}}],["lib/src/lib/ngrx",{"_index":615,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib/src/lib/services/configuaration.service.ts",{"_index":562,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"coverage.html":{}}}],["lib/src/lib/services/configuaration.service.ts:11",{"_index":576,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:16",{"_index":578,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:21",{"_index":575,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:26",{"_index":571,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:31",{"_index":573,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:34",{"_index":568,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/entity",{"_index":76,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["lib/src/lib/services/entity.service.ts",{"_index":216,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["lib/src/lib/services/entity.service.ts:104",{"_index":262,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:116",{"_index":270,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:124",{"_index":271,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:133",{"_index":245,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:22",{"_index":240,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:23",{"_index":235,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:24",{"_index":236,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:26",{"_index":238,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:28",{"_index":234,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:29",{"_index":237,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:30",{"_index":239,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:31",{"_index":233,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:44",{"_index":241,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:50",{"_index":243,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:68",{"_index":257,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:77",{"_index":251,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:86",{"_index":259,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/services/entity.service.ts:95",{"_index":254,"title":{},"body":{"classes/EntityService.html":{}}}],["lib/src/lib/state/all",{"_index":933,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/db",{"_index":8,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/effects.ts",{"_index":585,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["lib/src/lib/state/effects.ts:11",{"_index":587,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["lib/src/lib/state/effects.ts:17",{"_index":606,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["lib/src/lib/state/entity",{"_index":342,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/state/request",{"_index":540,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/state.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":839,"title":{},"body":{"index.html":{}}}],["license",{"_index":852,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":873,"title":{},"body":{"license.html":{}}}],["limited",{"_index":898,"title":{},"body":{"license.html":{}}}],["literal",{"_index":187,"title":{},"body":{"interfaces/DataWrapper.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["loadingtasks",{"_index":397,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["make",{"_index":119,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{},"miscellaneous/functions.html":{}}}],["makearraycopy",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makearraycopy(value",{"_index":503,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{}}}],["makeimmutable",{"_index":290,"title":{},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":97,"title":{"classes/MakeRequest.html":{}},"body":{"injectables/DataService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["makerequest(baseurl",{"_index":115,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequest(baseurl:string",{"_index":177,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequest(http",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makerequest(this.http",{"_index":178,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequestaction",{"_index":590,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["makerequestaction.uniquename",{"_index":603,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["makeshadowcopy",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makeshadowcopy(val",{"_index":487,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["makeshadowcopy(value",{"_index":500,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{}}}],["manage",{"_index":400,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["mantains",{"_index":463,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["map",{"_index":213,"title":{},"body":{"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"interfaces/IDataMapper.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{}}}],["map(data",{"_index":196,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"interfaces/IDataMapper.html":{}}}],["map(db=>db[this.uniquename",{"_index":313,"title":{},"body":{"classes/EntityService.html":{}}}],["map(e=>e[id",{"_index":335,"title":{},"body":{"classes/EntityService.html":{}}}],["map(state=>state.entitydb",{"_index":307,"title":{},"body":{"classes/EntityService.html":{}}}],["mapper.ts",{"_index":185,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"coverage.html":{}}}],["mapper.ts:24",{"_index":188,"title":{},"body":{"interfaces/DataWrapper.html":{}}}],["mapper.ts:30",{"_index":214,"title":{},"body":{"classes/EntityArrayMapper.html":{}}}],["mapping/datamapper",{"_index":439,"title":{},"body":{"interfaces/IDataMapper.html":{},"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["mapping/entity",{"_index":183,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"coverage.html":{}}}],["matching",{"_index":65,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":900,"title":{},"body":{"license.html":{}}}],["merge",{"_index":476,"title":{},"body":{"classes/ImmutableObservable.html":{},"license.html":{}}}],["merge(source.pipe(map(v",{"_index":478,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["mergemap",{"_index":610,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["mergemap((action",{"_index":589,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["method",{"_index":148,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{}}}],["method.ts",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":96,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":805,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":853,"title":{},"body":{"license.html":{}}}],["models/configuration",{"_index":580,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{}}}],["models/name",{"_index":699,"title":{},"body":{"classes/RequestProvider.html":{}}}],["modify",{"_index":875,"title":{},"body":{"license.html":{}}}],["module",{"_index":613,"title":{"modules/NgrxDataLibModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":614,"title":{"modules.html":{}},"body":{"modules/NgrxDataLibModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":621,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["multiple",{"_index":85,"title":{},"body":{"injectables/DataService.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["namevalue",{"_index":550,"title":{"classes/NameValue.html":{}},"body":{"classes/NameValue.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["namevalue(name",{"_index":725,"title":{},"body":{"classes/RequestProvider.html":{}}}],["needed",{"_index":164,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["new",{"_index":108,"title":{},"body":{"injectables/DataService.html":{},"classes/ImmutableObservable.html":{},"classes/RequestProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":483,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["next.val",{"_index":486,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["ngmodule",{"_index":622,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngrx",{"_index":274,"title":{},"body":{"classes/EntityService.html":{},"index.html":{}}}],["ngrx/effects",{"_index":609,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":288,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":33,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"dependencies.html":{}}}],["ngrxdataconfig",{"_index":638,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngrxdataconfiguration",{"_index":559,"title":{"interfaces/NgrxDataConfiguration.html":{}},"body":{"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"coverage.html":{}}}],["ngrxdataconfigurationservice",{"_index":105,"title":{"injectables/NgrxDataConfigurationService.html":{}},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["ngrxdataeffects",{"_index":584,"title":{"injectables/NgrxDataEffects.html":{}},"body":{"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"coverage.html":{}}}],["ngrxdatalibmodule",{"_index":273,"title":{"modules/NgrxDataLibModule.html":{}},"body":{"classes/EntityService.html":{},"modules/NgrxDataLibModule.html":{},"modules.html":{}}}],["ngrxdatalibmodule.injector",{"_index":641,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngrxdatalibmodule.injector.get(dataservice",{"_index":300,"title":{},"body":{"classes/EntityService.html":{}}}],["ngrxdatalibmodule.injector.get(ngrxdataconfigurationservice",{"_index":298,"title":{},"body":{"classes/EntityService.html":{}}}],["ngrxdatalibmodule.injector.get(store",{"_index":296,"title":{},"body":{"classes/EntityService.html":{}}}],["noninfringement",{"_index":904,"title":{},"body":{"license.html":{}}}],["notice",{"_index":888,"title":{},"body":{"license.html":{}}}],["npm",{"_index":840,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{}}}],["number",{"_index":394,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["obj",{"_index":452,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{}}}],["object",{"_index":451,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{}}}],["object.keys(responsedata",{"_index":199,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["objval",{"_index":505,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable",{"_index":126,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable.ts",{"_index":461,"title":{},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable.ts:10",{"_index":473,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable.ts:11",{"_index":471,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable.ts:46",{"_index":474,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.complete",{"_index":492,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.error(error",{"_index":490,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.next",{"_index":488,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["obtaining",{"_index":865,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":601,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["oftype",{"_index":608,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["ondestroy",{"_index":623,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["one",{"_index":727,"title":{},"body":{"classes/RequestProvider.html":{}}}],["operators",{"_index":496,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["orginal",{"_index":467,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["otherwise",{"_index":915,"title":{},"body":{"license.html":{}}}],["out",{"_index":917,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overflow",{"_index":530,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["overview",{"_index":922,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":779,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":554,"title":{},"body":{"classes/NameValue.html":{}}}],["param",{"_index":162,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/RequestProvider.html":{}}}],["parameter",{"_index":682,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":653,"title":{},"body":{"classes/RequestProvider.html":{}}}],["params.slice(0",{"_index":719,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parse",{"_index":686,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["parsedparams",{"_index":708,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parsedparams.join",{"_index":713,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parsedparams.push([v.name",{"_index":710,"title":{},"body":{"classes/RequestProvider.html":{}}}],["particular",{"_index":902,"title":{},"body":{"license.html":{}}}],["passed",{"_index":507,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["path",{"_index":673,"title":{},"body":{"classes/RequestProvider.html":{}}}],["permission",{"_index":859,"title":{},"body":{"license.html":{}}}],["permit",{"_index":882,"title":{},"body":{"license.html":{}}}],["person",{"_index":864,"title":{},"body":{"license.html":{}}}],["persons",{"_index":883,"title":{},"body":{"license.html":{}}}],["pipe(mergemap(response",{"_index":597,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["points",{"_index":171,"title":{},"body":{"injectables/DataService.html":{}}}],["portions",{"_index":892,"title":{},"body":{"license.html":{}}}],["post",{"_index":99,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["postrequest",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["postrequest(http",{"_index":829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["private",{"_index":89,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{}}}],["processentitystate",{"_index":356,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["processentitystate(func",{"_index":386,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["projects/.../all",{"_index":932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../db",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../entity",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../http",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../immutable",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../json",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../request",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../response",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../state.ts",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../static",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngrx",{"_index":6,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["provide",{"_index":79,"title":{},"body":{"injectables/DataService.html":{},"modules/NgrxDataLibModule.html":{}}}],["provided",{"_index":893,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":155,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["provider",{"_index":116,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"miscellaneous/functions.html":{}}}],["provider.ts",{"_index":646,"title":{},"body":{"classes/RequestProvider.html":{},"coverage.html":{}}}],["provider.ts:101",{"_index":672,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:11",{"_index":670,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:110",{"_index":680,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:121",{"_index":677,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:131",{"_index":675,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:14",{"_index":669,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:17",{"_index":664,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:20",{"_index":668,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:23",{"_index":666,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:26",{"_index":667,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:29",{"_index":665,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:34",{"_index":684,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:42",{"_index":688,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:50",{"_index":691,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:57",{"_index":694,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:64",{"_index":697,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:80",{"_index":663,"title":{},"body":{"classes/RequestProvider.html":{}}}],["providers",{"_index":633,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["provideruid",{"_index":541,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{}}}],["providing",{"_index":83,"title":{},"body":{"injectables/DataService.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["publish",{"_index":876,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":903,"title":{},"body":{"license.html":{}}}],["put",{"_index":101,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["putrequest",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["putrequest(http",{"_index":830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantity",{"_index":272,"title":{},"body":{"classes/EntityService.html":{}}}],["query",{"_index":681,"title":{},"body":{"classes/RequestProvider.html":{}}}],["readme",{"_index":848,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["reducer",{"_index":626,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":508,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["related",{"_index":393,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{}}}],["represent",{"_index":647,"title":{},"body":{"classes/RequestProvider.html":{}}}],["represents",{"_index":553,"title":{},"body":{"classes/NameValue.html":{}}}],["request",{"_index":120,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["requestactions",{"_index":276,"title":{},"body":{"classes/EntityService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["requestactions.makerequest",{"_index":591,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.makerequest(uid",{"_index":338,"title":{},"body":{"classes/EntityService.html":{}}}],["requestactions.requesterror([err",{"_index":602,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requesterror",{"_index":547,"title":{"classes/RequestError.html":{}},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["requestformat",{"_index":659,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["requestprovider",{"_index":117,"title":{"classes/RequestProvider.html":{}},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"coverage.html":{}}}],["requestprovider(this.route",{"_index":723,"title":{},"body":{"classes/RequestProvider.html":{}}}],["requestprovider(this.route.concat(param",{"_index":721,"title":{},"body":{"classes/RequestProvider.html":{}}}],["requestproviders",{"_index":563,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["requests",{"_index":169,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{}}}],["requestsuccess",{"_index":546,"title":{"classes/RequestSuccess.html":{}},"body":{"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["requesttype",{"_index":660,"title":{},"body":{"classes/RequestProvider.html":{}}}],["reset",{"_index":466,"title":{},"body":{"classes/ImmutableObservable.html":{},"overview.html":{}}}],["resetobservable",{"_index":469,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["resources",{"_index":82,"title":{},"body":{"injectables/DataService.html":{}}}],["response",{"_index":685,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["responsedata",{"_index":197,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["responseformats",{"_index":658,"title":{},"body":{"classes/RequestProvider.html":{}}}],["restriction",{"_index":871,"title":{},"body":{"license.html":{}}}],["result",{"_index":64,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":128,"title":{},"body":{"injectables/DataService.html":{}}}],["returns",{"_index":125,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":874,"title":{},"body":{"license.html":{}}}],["root",{"_index":156,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["route",{"_index":654,"title":{},"body":{"classes/RequestProvider.html":{}}}],["route.slice(0",{"_index":717,"title":{},"body":{"classes/RequestProvider.html":{}}}],["run",{"_index":841,"title":{},"body":{"index.html":{}}}],["running",{"_index":396,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["rxjs",{"_index":151,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/pairs",{"_index":284,"title":{},"body":{"classes/EntityService.html":{}}}],["rxjs/operators",{"_index":289,"title":{},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{}}}],["safe",{"_index":509,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["see",{"_index":851,"title":{},"body":{"index.html":{}}}],["select",{"_index":229,"title":{},"body":{"classes/EntityService.html":{}}}],["select(f",{"_index":260,"title":{},"body":{"classes/EntityService.html":{}}}],["selectall",{"_index":404,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectbyid",{"_index":230,"title":{},"body":{"classes/EntityService.html":{}}}],["selectbyid(id",{"_index":269,"title":{},"body":{"classes/EntityService.html":{}}}],["selectbyid(id:string",{"_index":333,"title":{},"body":{"classes/EntityService.html":{}}}],["selected",{"_index":398,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectedid",{"_index":399,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectentities",{"_index":405,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectids",{"_index":406,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectors",{"_index":315,"title":{},"body":{"classes/EntityService.html":{}}}],["selecttotal",{"_index":231,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["sell",{"_index":880,"title":{},"body":{"license.html":{}}}],["server",{"_index":129,"title":{},"body":{"injectables/DataService.html":{}}}],["service",{"_index":110,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataEffects.html":{}}}],["services",{"_index":217,"title":{},"body":{"classes/EntityService.html":{}}}],["services/configuaration.service",{"_index":612,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["services/entity",{"_index":607,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["set",{"_index":416,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["shadow",{"_index":410,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["shall",{"_index":889,"title":{},"body":{"license.html":{}}}],["software",{"_index":866,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":462,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["specific",{"_index":44,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["stack",{"_index":529,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["start",{"_index":720,"title":{},"body":{"classes/RequestProvider.html":{}}}],["started",{"_index":836,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":170,"title":{},"body":{"injectables/DataService.html":{}}}],["state",{"_index":311,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/functions.html":{}}}],["state/db",{"_index":191,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"interfaces/IDataMapper.html":{}}}],["state/effects",{"_index":630,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["state/entity",{"_index":280,"title":{},"body":{"classes/EntityService.html":{}}}],["state/request",{"_index":277,"title":{},"body":{"classes/EntityService.html":{}}}],["state/state",{"_index":628,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["state[uniquename",{"_index":434,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["statements",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":281,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":617,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["staticconstructed",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["staticconstructed(target",{"_index":832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":220,"title":{},"body":{"classes/EntityService.html":{}}}],["storemodule",{"_index":625,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["storemodule.forfeature('entitydb",{"_index":636,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["str",{"_index":522,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["string.split",{"_index":538,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["stringtouint",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtouint(str).buffer",{"_index":527,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["stringtouint(string",{"_index":534,"title":{},"body":{"classes/JsonFormatConverter.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":390,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["subject",{"_index":472,"title":{},"body":{"classes/ImmutableObservable.html":{},"license.html":{}}}],["sublicense",{"_index":878,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":482,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["substantial",{"_index":891,"title":{},"body":{"license.html":{}}}],["super((observer",{"_index":477,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["support",{"_index":84,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/enumerations.html":{}}}],["supported",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":250,"title":{},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{}}}],["t)=>boolean",{"_index":329,"title":{},"body":{"classes/EntityService.html":{}}}],["table",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["technologies",{"_index":858,"title":{},"body":{"license.html":{}}}],["test_lib",{"_index":847,"title":{},"body":{"index.html":{}}}],["tests",{"_index":846,"title":{},"body":{"index.html":{}}}],["text",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this._body",{"_index":705,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._deleteprovider",{"_index":160,"title":{},"body":{"injectables/DataService.html":{}}}],["this._getprovider",{"_index":158,"title":{},"body":{"injectables/DataService.html":{}}}],["this._postprovider",{"_index":159,"title":{},"body":{"injectables/DataService.html":{}}}],["this._putprovider",{"_index":161,"title":{},"body":{"injectables/DataService.html":{}}}],["this._requestformat",{"_index":703,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._requesttype",{"_index":704,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._responseformats",{"_index":702,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._url",{"_index":706,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.actions$.pipe(oftype(requestactions.actiontypes.makerequest",{"_index":588,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.all",{"_index":317,"title":{},"body":{"classes/EntityService.html":{}}}],["this.all$.pipe",{"_index":331,"title":{},"body":{"classes/EntityService.html":{}}}],["this.config",{"_index":581,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["this.configservice",{"_index":297,"title":{},"body":{"classes/EntityService.html":{}}}],["this.configservice.configuration.datamapper",{"_index":598,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.deleterequestprovider(makerequestaction.provideruid",{"_index":595,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.getrequestprovider(makerequestaction.provideruid",{"_index":592,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.injectrequestprovider(uid",{"_index":337,"title":{},"body":{"classes/EntityService.html":{}}}],["this.configurationservice.configuration.deafaultrequestformat",{"_index":166,"title":{},"body":{"injectables/DataService.html":{}}}],["this.configurationservice.configuration.deafaultresponseformats",{"_index":168,"title":{},"body":{"injectables/DataService.html":{}}}],["this.createentityindb",{"_index":301,"title":{},"body":{"classes/EntityService.html":{}}}],["this.createobservables",{"_index":304,"title":{},"body":{"classes/EntityService.html":{}}}],["this.dataservice",{"_index":299,"title":{},"body":{"classes/EntityService.html":{}}}],["this.dataservice.makerequest(makerequestaction.baseurl",{"_index":596,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.deafaultrequestformat",{"_index":165,"title":{},"body":{"injectables/DataService.html":{}}}],["this.deafaultresponseformats",{"_index":167,"title":{},"body":{"injectables/DataService.html":{}}}],["this.dispatch(this.dataservice.delete.at(id",{"_index":328,"title":{},"body":{"classes/EntityService.html":{}}}],["this.dispatch(this.dataservice.get.at(id",{"_index":325,"title":{},"body":{"classes/EntityService.html":{}}}],["this.dispatch(this.dataservice.post",{"_index":326,"title":{},"body":{"classes/EntityService.html":{}}}],["this.dispatch(this.dataservice.put",{"_index":327,"title":{},"body":{"classes/EntityService.html":{}}}],["this.endpoint",{"_index":339,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entities",{"_index":319,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entities$.pipe",{"_index":334,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entitystate",{"_index":305,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entitystate$.pipe(map(dbadapter.selectall",{"_index":318,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entitystate$.pipe(map(dbadapter.selectentities",{"_index":320,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entitystate$.pipe(map(dbadapter.selectids",{"_index":322,"title":{},"body":{"classes/EntityService.html":{}}}],["this.entitystate$.pipe(map(dbadapter.selecttotal",{"_index":324,"title":{},"body":{"classes/EntityService.html":{}}}],["this.ids",{"_index":321,"title":{},"body":{"classes/EntityService.html":{}}}],["this.lastvalue",{"_index":485,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.params",{"_index":718,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.params.concat(new",{"_index":724,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.params.foreach((v",{"_index":709,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.processentitystate",{"_index":419,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["this.requestproviders[uuid",{"_index":582,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["this.resetobservable",{"_index":481,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.resetobservable$.next({lastvalue",{"_index":494,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.route",{"_index":716,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.route.join",{"_index":707,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.store",{"_index":295,"title":{},"body":{"classes/EntityService.html":{}}}],["this.store.dispatch(new",{"_index":302,"title":{},"body":{"classes/EntityService.html":{}}}],["this.store.pipe",{"_index":306,"title":{},"body":{"classes/EntityService.html":{}}}],["this.total",{"_index":323,"title":{},"body":{"classes/EntityService.html":{}}}],["this.uniquename",{"_index":340,"title":{},"body":{"classes/EntityService.html":{}}}],["throw",{"_index":722,"title":{},"body":{"classes/RequestProvider.html":{}}}],["time",{"_index":728,"title":{},"body":{"classes/RequestProvider.html":{}}}],["tort",{"_index":914,"title":{},"body":{"license.html":{}}}],["total",{"_index":221,"title":{},"body":{"classes/EntityService.html":{}}}],["transformer",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":309,"title":{},"body":{"classes/EntityService.html":{},"classes/ImmutableObservable.html":{}}}],["tslib",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":929,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/uuid",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":336,"title":{},"body":{"classes/EntityService.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["uint8array(data",{"_index":524,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["uintarray",{"_index":539,"title":{},"body":{"classes/JsonFormatConverter.html":{},"miscellaneous/functions.html":{}}}],["uinttostring",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["uinttostring(new",{"_index":523,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["uinttostring(uintarray",{"_index":834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefine",{"_index":417,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["undefined",{"_index":418,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["unique",{"_index":359,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["uniquename",{"_index":18,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["uniquenames",{"_index":198,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["update",{"_index":49,"title":{"classes/Update.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["update:any",{"_index":193,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityArrayMapper.html":{}}}],["updatemany",{"_index":50,"title":{"classes/UpdateMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityArrayMapper.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":123,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityService.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":113,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["userequestformat",{"_index":655,"title":{},"body":{"classes/RequestProvider.html":{}}}],["userequestformat(format",{"_index":674,"title":{},"body":{"classes/RequestProvider.html":{}}}],["usevalue",{"_index":639,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["using",{"_index":314,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["utf",{"_index":533,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["uuid",{"_index":293,"title":{},"body":{"classes/EntityService.html":{},"injectables/NgrxDataConfigurationService.html":{},"dependencies.html":{}}}],["v",{"_index":480,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["v.value].join",{"_index":711,"title":{},"body":{"classes/RequestProvider.html":{}}}],["v1",{"_index":292,"title":{},"body":{"classes/EntityService.html":{}}}],["val",{"_index":479,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["valid",{"_index":678,"title":{},"body":{"classes/RequestProvider.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":552,"title":{},"body":{"classes/NameValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":556,"title":{},"body":{"classes/NameValue.html":{}}}],["value.ts:6",{"_index":557,"title":{},"body":{"classes/NameValue.html":{}}}],["values",{"_index":506,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["var",{"_index":535,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["variable",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":934,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":593,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["via",{"_index":246,"title":{},"body":{"classes/EntityService.html":{}}}],["void",{"_index":242,"title":{},"body":{"classes/EntityService.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["warranties",{"_index":899,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":894,"title":{},"body":{"license.html":{}}}],["well",{"_index":511,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["whether",{"_index":912,"title":{},"body":{"license.html":{}}}],["withbody",{"_index":656,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withbody(body",{"_index":676,"title":{},"body":{"classes/RequestProvider.html":{}}}],["without",{"_index":870,"title":{},"body":{"license.html":{}}}],["withparam",{"_index":657,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withparam(name",{"_index":679,"title":{},"body":{"classes/RequestProvider.html":{}}}],["yes",{"_index":266,"title":{},"body":{"classes/EntityService.html":{}}}],["zone.js",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":925,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddEntityToState.html":{"url":"classes/AddEntityToState.html","title":"class - AddEntityToState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntityToState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.AddEntityToState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany.html":{"url":"classes/AddMany.html","title":"class - AddMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entities: any[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entities\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.AddMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEntityState.html":{"url":"classes/CreateEntityState.html","title":"class - CreateEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.CreateEntityState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/services/entity-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide communication with extern resources providing support for multiple formats and a fluent api.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _deleteProvider\n                            \n                            \n                                    Private\n                                _getProvider\n                            \n                            \n                                    Private\n                                _postProvider\n                            \n                            \n                                    Private\n                                _putProvider\n                            \n                            \n                                    Private\n                                deafaultRequestFormat\n                            \n                            \n                                    Private\n                                deafaultResponseFormats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    GET\n                                \n                                \n                                    POST\n                                \n                                \n                                    DELETE\n                                \n                                \n                                    PUT\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configurationService: NgrxDataConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:44\n                            \n                        \n\n                \n                    \n                            create a new instance of data service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client to use.\n\n                                                        \n                                                \n                                                \n                                                        configurationService\n                                                  \n                                                        \n                                                                        NgrxDataConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the configuration service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \nmakeRequest(baseUrl: string, provider: RequestProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:70\n                \n            \n\n\n            \n                \n                    make a http request with a given base url and a request provider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base url of the request.\n\n                                    \n                                \n                                \n                                    provider\n                                    \n                                                RequestProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request provider.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        returns an observable containing the data returned by the server.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _deleteProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _postProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _putProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deafaultRequestFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deafaultResponseFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        GET\n                    \n                \n\n                \n                    \n                        getGET()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:29\n                                \n                            \n                    \n                        \n                                get the get request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        POST\n                    \n                \n\n                \n                    \n                        getPOST()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:34\n                                \n                            \n                    \n                        \n                                get the post request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        DELETE\n                    \n                \n\n                \n                    \n                        getDELETE()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:39\n                                \n                            \n                    \n                        \n                                get the delete request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        PUT\n                    \n                \n\n                \n                    \n                        getPUT()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:44\n                                \n                            \n                    \n                        \n                                get ht put request provider.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\nimport { IFormatConverter } from '../data-format/format-converter';\nimport { Observable } from 'rxjs';\nimport { makeRequest } from '../http/http-communication';\nimport { HttpClient } from '@angular/common/http';\nimport { NgrxDataConfigurationService } from './configuaration.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Provide communication with extern resources providing support for multiple formats and a fluent api.\n */\n@Injectable({\n   providedIn: 'root'\n})\nexport class DataService\n{\n    private _getProvider : RequestProvider;\n    private _postProvider : RequestProvider;\n    private _deleteProvider : RequestProvider;\n    private _putProvider : RequestProvider;\n\n    private deafaultRequestFormat: IFormatConverter;\n    private deafaultResponseFormats: IFormatConverter[];\n\n    /**\n     * get the get request provider.\n     */\n    get GET(){ return this._getProvider; }\n    \n    /**\n     * get the post request provider.\n     */\n    get POST(){ return this._postProvider; } \n\n    /**\n     * get the delete request provider.\n     */\n    get DELETE(){ return this._deleteProvider; } \n\n    /**\n     * get ht put request provider.\n     */\n    get PUT(){ return this._putProvider; } \n        \n    /**\n     * create a new instance of data service.\n     * @param http the http client to use.\n     * @param configurationService the configuration service.\n     */\n    constructor(private http: HttpClient, private configurationService: NgrxDataConfigurationService)\n    {\n       //Get the configuration parameters needed\n       this.deafaultRequestFormat = this.configurationService.configuration.deafaultRequestFormat;\n       this.deafaultResponseFormats = this.configurationService.configuration.deafaultResponseFormats;\n\n       //create the requests starting points\n       this._getProvider = new RequestProvider([], [], HttpMethod.get, null, this.deafaultResponseFormats, null);\n       this._postProvider = new RequestProvider([], [], HttpMethod.post, null, this.deafaultResponseFormats, this.deafaultRequestFormat);\n       this._deleteProvider = new RequestProvider([], [], HttpMethod.delete, null, this.deafaultResponseFormats, null);\n       this._putProvider = new RequestProvider([], [], HttpMethod.put, null, this.deafaultResponseFormats, this.deafaultRequestFormat);           \n    }\n\n    /**\n     * make a http request with a given base url and a request provider.\n     * @param baseUrl the base url of the request.\n     * @param provider the request provider.\n     * @returns returns an observable containing the data returned by the server.\n     */\n    makeRequest(baseUrl:string, provider: RequestProvider) : Observable\n    {\n       let result = makeRequest(this.http, baseUrl, provider);\n       return result;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataWrapper.html":{"url":"interfaces/DataWrapper.html","title":"interface - DataWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [uniqueName: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts:24\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { IDataMapper } from './datamapper-interface';\nimport { DBActions, UpdateMany, AddMany, DeleteMany } from '../state/db-actions';\n\ninterface DataWrapper\n{\n    [uniqueName: string]: { add:any[], update:any[], delete:string[] }\n}\n\nexport class EntityArrayMapper implements IDataMapper\n{\n    map(data: any): DBActions[] {\n        \n        let result: DBActions[] = [];\n\n        let responseData = data as DataWrapper;\n        let uniqueNames = Object.keys(responseData);\n        for(let i = 0; i \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAll.html":{"url":"classes/DeleteAll.html","title":"class - DeleteAll","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAll\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteAll\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAllEntityStates.html":{"url":"classes/DeleteAllEntityStates.html","title":"class - DeleteAllEntityStates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAllEntityStates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteAllEntityStates\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteEntityFromState.html":{"url":"classes/DeleteEntityFromState.html","title":"class - DeleteEntityFromState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteEntityFromState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteEntityFromState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteEntityState.html":{"url":"classes/DeleteEntityState.html","title":"class - DeleteEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteEntityState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMany.html":{"url":"classes/DeleteMany.html","title":"class - DeleteMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ids\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ids: string[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ids\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ids\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityArrayMapper.html":{"url":"classes/EntityArrayMapper.html","title":"class - EntityArrayMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityArrayMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IDataMapper\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            map\n                        \n                        \n                    \n                \n            \n            \n                \nmap(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DBActions[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDataMapper } from './datamapper-interface';\nimport { DBActions, UpdateMany, AddMany, DeleteMany } from '../state/db-actions';\n\ninterface DataWrapper\n{\n    [uniqueName: string]: { add:any[], update:any[], delete:string[] }\n}\n\nexport class EntityArrayMapper implements IDataMapper\n{\n    map(data: any): DBActions[] {\n        \n        let result: DBActions[] = [];\n\n        let responseData = data as DataWrapper;\n        let uniqueNames = Object.keys(responseData);\n        for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityService.html":{"url":"classes/EntityService.html","title":"class - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/services/entity.service.ts\n        \n\n            \n                Description\n            \n            \n                base class for entity services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                all$\n                            \n                            \n                                    Private\n                                configService\n                            \n                            \n                                    Private\n                                dataService\n                            \n                            \n                                    Private\n                                entities$\n                            \n                            \n                                    Private\n                                entityState$\n                            \n                            \n                                    Private\n                                ids$\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                    Private\n                                total$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEntityInDb\n                            \n                            \n                                    Private\n                                createObservables\n                            \n                            \n                                    Public\n                                dispatch\n                            \n                            \n                                    Public\n                                dispatchAddEntity\n                            \n                            \n                                    Public\n                                dispatchDeleteEntity\n                            \n                            \n                                    Public\n                                dispatchGetById\n                            \n                            \n                                    Public\n                                dispatchUpdateEntity\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                selectById\n                            \n                            \n                                    Public\n                                selectTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string, endpoint: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpoint\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            all$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgrxDataConfigurationService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entityState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ids$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            total$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createEntityInDb\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntityInDb()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:44\n                \n            \n\n\n            \n                \n                    Create the entity in the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createObservables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createObservables()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(provider: RequestProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:133\n                \n            \n\n\n            \n                \n                    Make a request via http that change or get the data of this entity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                RequestProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request provider to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dispatchAddEntity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatchAddEntity(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:77\n                \n            \n\n\n            \n                \n                    Make request to add entity. POST request at {endpoint}\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the entity to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dispatchDeleteEntity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatchDeleteEntity(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:95\n                \n            \n\n\n            \n                \n                    Make a request to delete entity. DELETE request at {endpoint}/{id}\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the entity to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dispatchGetById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatchGetById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:68\n                \n            \n\n\n            \n                \n                    Make request to get entity by id. url: {endpoint}/{id}\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dispatchUpdateEntity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatchUpdateEntity(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:86\n                \n            \n\n\n            \n                \n                    Make a request to update entity. PUT request at {endpoint}\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the entity to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(f?: (e?: T) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:104\n                \n            \n\n\n            \n                \n                    returns as InmutableObservable of the data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filter function to filter the data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImmutableObservable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:116\n                \n            \n\n\n            \n                \n                    returns InmutableObservable of an entity with specific id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the entity\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImmutableObservable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTotal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTotal()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity.service.ts:124\n                \n            \n\n\n            \n                \n                    get Observable of the quantity of entities.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Store, select } from '@ngrx/store';\nimport { NgrxDataLibModule } from '../ngrx-data-lib.module';\nimport * as DbActions from '../state/db-actions';\nimport * as RequestActions from '../state/request-actions';\nimport { RequestProvider } from '../http/request-provider';\nimport { EntityStatesCollection, ExtendedEntityState } from '../state/entity-states-collection-adapter';\nimport { NgrxDataConfigurationService } from './configuaration.service';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { DataService } from './entity-data.service';\nimport { Observable } from 'rxjs';\nimport * as dbAdapter from '../state/entity-states-collection-adapter';\nimport { Dictionary, EntityState } from '@ngrx/entity';\nimport { map, filter } from 'rxjs/operators';\nimport { makeImmutable, ImmutableObservable } from '../helpers/immutable-observable';\nimport { v1 } from 'uuid';\n\n/**\n * base class for entity services.\n */\nexport abstract class EntityService\n{\n   private store: Store;\n   private configService: NgrxDataConfigurationService;\n   private dataService: DataService;\n   \n   private entityState$: Observable;\n\n   private all$ : Observable;\n   private entities$ : Observable>;\n   private ids$ : Observable;\n   private total$ : Observable;\n        \n   constructor(private uniqueName: string, private endpoint: string)\n   {\n      this.store = NgrxDataLibModule.injector.get(Store);\n      this.configService = NgrxDataLibModule.injector.get(NgrxDataConfigurationService);\n      this.dataService = NgrxDataLibModule.injector.get(DataService);\n      this.createEntityInDb();\n   }\n\n   /**\n    * Create the entity in the database\n    */\n   private createEntityInDb()\n   {\n      this.store.dispatch(new DbActions.CreateEntityState(this.uniqueName));\n      this.createObservables();\n   }\n\n   private createObservables()\n   {\n      this.entityState$ = this.store.pipe(\n          map(state=>state.entityDb as EntityStatesCollection), //map to the entity database\n          filter(db=>db[this.uniqueName] ? true : false), //only if this entity state exist\n          map(db=>db[this.uniqueName])); //map by this entity state.\n\n      //using the Entity adapter selectors to select the entites\n      this.all$ = this.entityState$.pipe(map(dbAdapter.selectAll));\n      this.entities$ = this.entityState$.pipe(map(dbAdapter.selectEntities));\n      this.ids$ = this.entityState$.pipe(map(dbAdapter.selectIds));\n      this.total$ = this.entityState$.pipe(map(dbAdapter.selectTotal));\n   }\n\n   /**\n    * Make request to get entity by id. url: {endpoint}/{id}\n    * @param id id of the entity\n    */\n   public dispatchGetById(id: string)\n   {\n      this.dispatch(this.dataService.GET.at(id));\n   }\n\n   /**\n    * Make request to add entity. POST request at {endpoint}\n    * @param entity the entity to add\n    */\n   public dispatchAddEntity(entity: T)\n   {\n      this.dispatch(this.dataService.POST);\n   }\n\n   /**\n    * Make a request to update entity. PUT request at {endpoint}\n    * @param entity the entity to update\n    */\n   public dispatchUpdateEntity(entity: T)\n   {\n      this.dispatch(this.dataService.PUT);\n   }\n\n   /**\n    * Make a request to delete entity. DELETE request at {endpoint}/{id}\n    * @param id the id of the entity to delete\n    */\n   public dispatchDeleteEntity(id: string)\n   {\n      this.dispatch(this.dataService.DELETE.at(id));\n   }\n\n   /**\n    * returns as InmutableObservable of the data.\n    * @param f filter function to filter the data.\n    */\n   public select( f?: (e: T)=>boolean ) : ImmutableObservable\n   {\n      if(f)\n       return this.all$.pipe( map( e=>e.filter(f) ), makeImmutable() ) as ImmutableObservable;\n      else\n       return this.all$.pipe( makeImmutable() ) as ImmutableObservable;\n   }\n   \n   /**\n    * returns InmutableObservable of an entity with specific id\n    * @param id the id of the entity\n    */\n   public selectById(id:string) : ImmutableObservable\n   {\n      return this.entities$.pipe( map(e=>e[id]), makeImmutable() ) as ImmutableObservable;\n   }\n   \n   /**\n    * get Observable of the quantity of entities.\n    */\n   public selectTotal() : Observable\n   {\n      return this.total$;\n   }\n\n   /**\n    * Make a request via http that change or get the data of this entity.\n    * @param provider The request provider to execute\n    */\n   public dispatch(provider: RequestProvider)\n   {\n      let uid = v1();\n      this.configService.injectRequestProvider(uid, provider);\n      this.store.dispatch(new RequestActions.MakeRequest(uid, this.endpoint, this.uniqueName));\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityStateCollectionAdapter.html":{"url":"classes/EntityStateCollectionAdapter.html","title":"class - EntityStateCollectionAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityStateCollectionAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntityState\n                            \n                            \n                                deleteAllEntityStates\n                            \n                            \n                                deleteEntityState\n                            \n                            \n                                entityStateAddAll\n                            \n                            \n                                entityStateAddMany\n                            \n                            \n                                entityStateAddOne\n                            \n                            \n                                entityStateRemoveAll\n                            \n                            \n                                entityStateRemoveMany\n                            \n                            \n                                entityStateRemoveOne\n                            \n                            \n                                entityStateUpdateMany\n                            \n                            \n                                entityStateUpdateOne\n                            \n                            \n                                entityStateUpsertMany\n                            \n                            \n                                entityStateUpsertOne\n                            \n                            \n                                getInitialState\n                            \n                            \n                                    Private\n                                processEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEntityState\n                        \n                        \n                    \n                \n            \n            \n                \naddEntityState(name: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:60\n                \n            \n\n\n            \n                \n                    add an entity state to the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the unique name of the entity state to add.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllEntityStates\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllEntityStates(state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:103\n                \n            \n\n\n            \n                \n                    delete all the entity states for the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEntityState\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEntityState(name: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:84\n                \n            \n\n\n            \n                \n                    delete entity state from the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the unique name of the entity to delete.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddAll\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveAll\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveAll(uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpdateMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpdateOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpsertMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpsertOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:50\n                \n            \n\n\n            \n                \n                    return the initial state of the collection of entities\n\n\n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processEntityState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processEntityState(func: (entityState: ExtendedEntityState) => void, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityStatesCollection.html":{"url":"interfaces/EntityStatesCollection.html","title":"interface - EntityStatesCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityStatesCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n            \n                Description\n            \n            \n                Database structure.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        ExtendedEntityState\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:7\n                            \n                        \n                \n                    \n                        The entity states by unique name\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedEntityState.html":{"url":"interfaces/ExtendedEntityState.html","title":"interface - ExtendedEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendedEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n            \n                Description\n            \n            \n                entity state structure.\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        loadingTasks\n                                \n                                \n                                        selectedId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the errors related with this entity state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingTasks\n                                    \n                                \n                                \n                                    \n                                        loadingTasks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the number of external requests running.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                    \n                                \n                                \n                                    \n                                        selectedId:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of the selected entity of this entity state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataMapper.html":{"url":"interfaces/IDataMapper.html","title":"interface - IDataMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-mapping/datamapper-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            map\n                        \n                        \n                    \n                \n            \n            \n                \nmap(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-mapping/datamapper-interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DbActions.DBActions[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as DbActions from '../state/db-actions';\n\n\n\nexport interface IDataMapper\n{\n    map(data: any) : DbActions.DBActions[];\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormatConverter.html":{"url":"interfaces/IFormatConverter.html","title":"interface - IFormatConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFormatConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-format/format-converter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    convertToData\n                                \n                                \n                                    convertToObject\n                                \n                                \n                                    getContentType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToData\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToData(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:21\n                \n            \n\n\n            \n                \n                    convert javascript object to data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the javascript object to convert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ArrayBuffer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToObject\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToObject(data: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:15\n                \n            \n\n\n            \n                \n                    convert the data to a javascript object. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data to convert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetContentType()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:9\n                \n            \n\n\n            \n                \n                    get the content type related to this object.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FormatDataType } from '../http/response-type';\n\n\nexport interface IFormatConverter\n{\n    /**\n     * get the content type related to this object.\n     */\n    getContentType(): string;\n\n    /**\n     * convert the data to a javascript object. \n     * @param data the data to convert.\n     */\n    convertToObject(data: ArrayBuffer) : any;\n\n    /**\n     * convert javascript object to data.\n     * @param obj the javascript object to convert.\n     */\n    convertToData(obj: any) : ArrayBuffer;   \n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImmutableObservable.html":{"url":"classes/ImmutableObservable.html","title":"class - ImmutableObservable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImmutableObservable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n        \n\n            \n                Description\n            \n            \n                an special observable that mantains the data inmutable\nand you can always reset the data to the orginal value\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastValue\n                            \n                            \n                                    Private\n                                resetObservable$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: Observable)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetObservable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, combineLatest, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * an special observable that mantains the data inmutable\n * and you can always reset the data to the orginal value\n */\nexport class ImmutableObservable extends Observable\n{\n    private resetObservable$ : Subject;\n    private lastValue: T;\n\n    constructor(source: Observable)\n    {        \n        super((observer)=>{\n          \n           merge(source.pipe(map(v=> {return{ lastValue: false, val: v as T }} )), this.resetObservable$)\n           .subscribe(\n               (next)=>{\n                  \n                if(!next.lastValue)                \n                   this.lastValue = next.val;                \n                \n                let val = next.val;   \n                let copy = makeShadowCopy(val);\n                \n                //shadow copy of the value\n                observer.next( copy );\n               },\n               \n               (error)=>{\n                  observer.error(error);\n               },\n\n               //complete\n               ()=>{\n                  observer.complete();\n               }               \n           );\n\n       });\n\n       this.resetObservable$ = new Subject();\n    }\n    \n    reset() : void\n    {\n        if(this.lastValue)\n          this.resetObservable$.next({lastValue: true, val: this.lastValue});\n    }\n}\n\n//How to make customs operators https://angularfirebase.com/lessons/custom-rxjs-operators-by-example/\n/**\n * convert to an inmutable observable.\n */\nexport const makeImmutable = () => (source: Observable) => \n    {     \n       return new ImmutableObservable(source);\n    };\n\nfunction makeShadowCopy(value: any) : any\n{\n   //make copy of every item if it is array\n   if(Array.isArray(value))   \n      return makeArrayCopy(value as []);\n   \n   //make shadow copy of the object\n   if(typeof value == 'object')\n   {\n      let objVal = value as {};\n      return { ...objVal };\n   }\n   \n   //we can return string because they are inmutable.\n   //for values like number they are passed by value and not by reference, so is safe to return them.\n   //for functions just return the value because they are inmutable as well.\n   return value;\n}\n\nfunction makeArrayCopy(value: []) : any[]\n{\n   let result = [];\n\n   //for each item make a shadow copy\n   for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JsonFormatConverter.html":{"url":"classes/JsonFormatConverter.html","title":"class - JsonFormatConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JsonFormatConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IFormatConverter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToData\n                            \n                            \n                                convertToObject\n                            \n                            \n                                getContentType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToData\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToData(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ArrayBuffer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToObject\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToObject(data: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetContentType()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IFormatConverter } from './format-converter';\nimport { FormatDataType } from '../http/response-type';\n\n\nexport class JsonFormatConverter implements IFormatConverter\n{\n    getContentType(): string {\n        return 'application/json; charset=utf-8';\n    }\n\n    convertToObject(data: ArrayBuffer) : any {\n        let str = uintToString(new Uint8Array(data));\n        return JSON.parse(str);\n    }\n\n    convertToData(obj: any) : ArrayBuffer {\n        let str = JSON.stringify(obj);\n        return stringToUint(str).buffer as ArrayBuffer;\n    }\n}\n\n//copied from stack overflow https://stackoverflow.com/questions/17191945/conversion-between-utf-8-arraybuffer-and-string\nfunction stringToUint(string) {\n    var str = btoa(unescape(encodeURIComponent(string))),\n        charList = string.split(''),\n        uintArray = [];\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequest.html":{"url":"classes/MakeRequest.html","title":"class - MakeRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                providerUid\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providerUid: string, baseUrl: string, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providerUid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            providerUid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.MakeRequest\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError'\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public data: any, public uniqueName: string ){}\n}\n\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NameValue.html":{"url":"classes/NameValue.html","title":"class - NameValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NameValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/models/name-value.ts\n        \n\n            \n                Description\n            \n            \n                represents a name = value pair.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NameValue { \n    constructor(public name: string, public value: string) { }\n}\n  \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgrxDataConfiguration.html":{"url":"interfaces/NgrxDataConfiguration.html","title":"interface - NgrxDataConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgrxDataConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/models/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataMapper\n                                \n                                \n                                            Optional\n                                        dbName\n                                \n                                \n                                        deafaultRequestFormat\n                                \n                                \n                                        deafaultResponseFormats\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataMapper\n                                    \n                                \n                                \n                                    \n                                        dataMapper:         IDataMapper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDataMapper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbName\n                                    \n                                \n                                \n                                    \n                                        dbName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deafaultRequestFormat\n                                    \n                                \n                                \n                                    \n                                        deafaultRequestFormat:         IFormatConverter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFormatConverter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deafaultResponseFormats\n                                    \n                                \n                                \n                                    \n                                        deafaultResponseFormats:         IFormatConverter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFormatConverter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormatConverter } from '../data-format/format-converter';\nimport { IDataMapper } from '../data-mapping/datamapper-interface';\n\n\n\nexport interface NgrxDataConfiguration\n{\n    deafaultRequestFormat: IFormatConverter;\n    deafaultResponseFormats: IFormatConverter[];\n    dataMapper: IDataMapper;\n    dbName?: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgrxDataConfigurationService.html":{"url":"injectables/NgrxDataConfigurationService.html","title":"injectable - NgrxDataConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgrxDataConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/services/configuaration.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requestProviders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteRequestProvider\n                            \n                            \n                                getRequestProvider\n                            \n                            \n                                injectRequestProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configuration\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgrxDataConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgrxDataConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteRequestProvider(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestProvider(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            injectRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ninjectRequestProvider(uuid: string, provider: RequestProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                RequestProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n\n                \n                    \n                        getconfiguration()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:16\n                                \n                            \n                    \n                        \n                                get the default configuration.\n\n\n                                \n                                    Returns :         NgrxDataConfiguration\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { NgrxDataConfiguration } from '../models/configuration';\nimport { config } from 'rxjs';\nimport { RequestProvider } from '../http/request-provider';\n\n@Injectable({\n    providedIn: 'root'\n })\nexport class NgrxDataConfigurationService\n{\n    private requestProviders: { [uid: string]: RequestProvider } = {};\n\n    /**\n     * get the default configuration.\n     */\n    get configuration(): NgrxDataConfiguration\n    {\n        return this.config;\n    }\n\n    injectRequestProvider(uuid: string, provider: RequestProvider)\n    {\n       this.requestProviders[uuid] = provider;\n    }\n\n    deleteRequestProvider(uuid: string)\n    {\n        this.requestProviders[uuid] = undefined;\n    }\n\n    getRequestProvider(uuid: string)\n    {\n        return this.requestProviders[uuid];\n    }\n\n    constructor(@Inject('ngrxdataConfig') private config: NgrxDataConfiguration )\n    {\n        \n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgrxDataEffects.html":{"url":"injectables/NgrxDataEffects.html","title":"injectable - NgrxDataEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgrxDataEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                makeRequest$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, dataService: DataService, configService: NgrxDataConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/effects.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        NgrxDataConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(RequestActions.ActionTypes.MakeRequest), \n    mergeMap((action)=>{\n\n       let makeRequestAction = action as RequestActions.MakeRequest;\n\n       //get the provider from the service\n       let provider = this.configService.getRequestProvider(makeRequestAction.providerUid);\n\n       //delete the provider from the service very important\n       this.configService.deleteRequestProvider(makeRequestAction.providerUid);\n\n       //make the http request with the provider\n       return this.dataService.makeRequest(makeRequestAction.baseUrl, provider)\n\n       .pipe(mergeMap(response=>{\n          let dataMapper = this.configService.configuration.dataMapper;        \n          return dataMapper.map(response);\n       }), catchError(err=>{\n         return of(new RequestActions.RequestError([err], makeRequestAction.uniqueName));\n       }));\n       \n\n    }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataService } from '../services/entity-data.service';\nimport * as RequestActions from './request-actions';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\nimport { NgrxDataConfigurationService } from '../services/configuaration.service';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class NgrxDataEffects\n{    \n    constructor(private actions$: Actions, private dataService: DataService, private configService: NgrxDataConfigurationService){\n      \n    }\n\n    @Effect()\n    makeRequest$ = this.actions$.pipe(ofType(RequestActions.ActionTypes.MakeRequest), \n    mergeMap((action)=>{\n\n       let makeRequestAction = action as RequestActions.MakeRequest;\n\n       //get the provider from the service\n       let provider = this.configService.getRequestProvider(makeRequestAction.providerUid);\n\n       //delete the provider from the service very important\n       this.configService.deleteRequestProvider(makeRequestAction.providerUid);\n\n       //make the http request with the provider\n       return this.dataService.makeRequest(makeRequestAction.baseUrl, provider)\n\n       .pipe(mergeMap(response=>{\n          let dataMapper = this.configService.configuration.dataMapper;        \n          return dataMapper.map(response);\n       }), catchError(err=>{\n         return of(new RequestActions.RequestError([err], makeRequestAction.uniqueName));\n       }));\n       \n\n    }))\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgrxDataLibModule.html":{"url":"modules/NgrxDataLibModule.html","title":"module - NgrxDataLibModule","body":"\n                   \n\n\n\n\n    Modules\n    NgrxDataLibModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/ngrx-data-lib.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgrxDataConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/ngrx-data-lib.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgrxDataConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, OnDestroy, ModuleWithProviders, Injector } from '@angular/core';\nimport { NgrxDataConfiguration } from './models/configuration';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer, initialState } from './state/state';\nimport { EffectsModule } from '@ngrx/effects'\nimport { NgrxDataEffects } from './state/effects';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    \n  ],\n  providers: [\n         \n  ],\n  imports: [\n    EffectsModule.forRoot([NgrxDataEffects]),   \n    HttpClientModule,\n    StoreModule.forFeature('entityDb', reducer),    \n  ],\n  exports: [    \n    \n  ]\n})\nexport class NgrxDataLibModule {  \n\n   static Reducer = reducer;\n   static injector: Injector = null;\n   \n   static forRoot(config: NgrxDataConfiguration): ModuleWithProviders {    \n\n     return {\n      ngModule: NgrxDataLibModule,\n\n      providers: [\n        {provide: 'ngrxdataConfig', useValue: config}\n      ]\n     }\n   }\n\n   constructor(injector: Injector)\n   {\n      NgrxDataLibModule.injector = injector;      \n   }\n\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestError.html":{"url":"classes/RequestError.html","title":"class - RequestError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: string[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.RequestError\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError'\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public data: any, public uniqueName: string ){}\n}\n\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestProvider.html":{"url":"classes/RequestProvider.html","title":"class - RequestProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/http/request-provider.ts\n        \n\n            \n                Description\n            \n            \n                represent an http request.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _body\n                            \n                            \n                                    Private\n                                _requestFormat\n                            \n                            \n                                    Private\n                                _requestType\n                            \n                            \n                                    Private\n                                _responseFormats\n                            \n                            \n                                    Private\n                                _url\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                at\n                            \n                            \n                                useRequestFormat\n                            \n                            \n                                withBody\n                            \n                            \n                                withParam\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    responseFormats\n                                \n                                \n                                    requestFormat\n                                \n                                \n                                    requestType\n                                \n                                \n                                    body\n                                \n                                \n                                    url\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(route: string[], params: NameValue[], requestType: HttpMethod, body: any, responseFormats: IFormatConverter[], requestFormat: IFormatConverter)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        NameValue[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestType\n                                                  \n                                                        \n                                                                        HttpMethod\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseFormats\n                                                  \n                                                        \n                                                                        IFormatConverter[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestFormat\n                                                  \n                                                        \n                                                                        IFormatConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _requestFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _responseFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NameValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(param: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:101\n                \n            \n\n\n            \n                \n                    add a path param to the url.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the param to add to the url.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useRequestFormat\n                        \n                        \n                    \n                \n            \n            \n                \nuseRequestFormat(format: IFormatConverter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                IFormatConverter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withBody\n                        \n                        \n                    \n                \n            \n            \n                \nwithBody(body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:121\n                \n            \n\n\n            \n                \n                    add body to the request (only valid for POST and PUT requests)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withParam\n                        \n                        \n                    \n                \n            \n            \n                \nwithParam(name: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:110\n                \n            \n\n\n            \n                \n                    Add a query param to the url (only valid for GET and DELETE requests)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the name of the parameter.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the value of the parameter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        responseFormats\n                    \n                \n\n                \n                    \n                        getresponseFormats()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:34\n                                \n                            \n                    \n                        \n                                get the response formats that this request can parse.\n\n\n                                \n                                    Returns :         IFormatConverter[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        requestFormat\n                    \n                \n\n                \n                    \n                        getrequestFormat()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:42\n                                \n                            \n                    \n                        \n                                get the format converter to parse the request body in the case of POST and PUT.\n\n\n                                \n                                    Returns :         IFormatConverter\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        requestType\n                    \n                \n\n                \n                    \n                        getrequestType()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:50\n                                \n                            \n                    \n                        \n                                get the request type asociated with this provider.\n\n\n                                \n                                    Returns :         HttpMethod\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:57\n                                \n                            \n                    \n                        \n                                get the request body or null if is not available.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:64\n                                \n                            \n                    \n                        \n                                get the url generated by this provider\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { NameValue } from '../models/name-value';\nimport { HttpMethod } from './http-method';\nimport { IFormatConverter } from '../data-format/format-converter';\n\n/**\n * represent an http request.\n */\nexport class RequestProvider {\n    \n    //the route of the url  \n    private route: string[];\n  \n    //the params to include in the url\n    private params: NameValue[];\n  \n    //the request body\n    private _body: any = null;\n  \n    //the constructed url\n    private _url: string = null;\n  \n    //the request type\n    private _requestType: HttpMethod;\n  \n    //response formats\n    private _responseFormats: IFormatConverter[];\n\n    //response formats\n    private _requestFormat: IFormatConverter;\n\n    /**\n     * get the response formats that this request can parse.\n     */\n    get responseFormats() : IFormatConverter[]\n    {\n       return this._responseFormats;\n    }\n\n    /**\n     * get the format converter to parse the request body in the case of POST and PUT.\n     */\n    get requestFormat() : IFormatConverter\n    {\n       return this._requestFormat;\n    }\n\n    /**\n     * get the request type asociated with this provider.\n     */\n    get requestType(): HttpMethod {\n      return this._requestType;\n    }\n  \n    /**\n     * get the request body or null if is not available.\n     */\n    get body(): any {\n      return this._body;\n    }\n  \n    /**\n    * get the url generated by this provider\n    */\n    get url(): string {\n  \n      if (!this._url) {\n        //create the url\n        let url = this.route.join('/');\n        let parsedParams: string[] = [];\n  \n        this.params.forEach((v) => {\n          parsedParams.push([v.name, v.value].join('='));\n        });\n  \n        this._url = encodeURI(url + '?' + parsedParams.join('&'));\n      }\n      \n      return this._url;\n  \n    }\n  \n    constructor(route: string[], params: NameValue[], requestType: HttpMethod, body: any, responseFormats: IFormatConverter[], requestFormat: IFormatConverter) {\n  \n      //clone arrays\n      this.route = route.slice(0);\n      this.params = params.slice(0);\n      \n      this._requestType = requestType;\n      this._body = body;\n      this._responseFormats = responseFormats;\n      this._requestFormat = requestFormat;\n    }\n\n    //Start of the fluent api\n    //-------------------------------------------------------------------------------------------------------\n  \n    /**\n     * add a path param to the url.\n     * @param param the param to add to the url.\n     */\n    at(param: string): RequestProvider {\n      return new RequestProvider(this.route.concat(param), this.params, this._requestType, this._body, this._responseFormats, this._requestFormat);\n    }\n  \n    /**\n     * Add a query param to the url (only valid for GET and DELETE requests)\n     * @param name the name of the parameter.\n     * @param value the value of the parameter.\n     */\n    withParam(name: string, value: string): RequestProvider {\n      if (this._requestType != 'GET' && this._requestType != 'DELETE' )\n        throw \"query params are only valid for GET and DELETE requests.\";\n  \n      return new RequestProvider(this.route, this.params.concat(new NameValue(name, value)), this._requestType, this._body, this._responseFormats, this._requestFormat);\n    }\n  \n    /**\n     * add body to the request (only valid for POST and PUT requests)\n     * @param body the body to add\n     */\n    withBody(body: any): RequestProvider {\n      if (this._requestType != 'POST' && this._requestType != 'PUT')\n        throw \"request body is only valid for POST and PUT requests.\";\n  \n      if (this._body != null)\n        throw \"request body can only be assigned one time.\";\n  \n      return new RequestProvider(this.route, this.params, this._requestType, body, this._responseFormats, this._requestFormat);\n    }\n\n    useRequestFormat(format: IFormatConverter) : RequestProvider\n    {\n      if (this._requestType != 'POST' && this._requestType != 'PUT')\n        throw \"request format is only valid for POST and PUT requests.\";\n\n      return new RequestProvider(this.route, this.params, this._requestType, this._body, this._responseFormats, format); \n    }\n   \n  \n  }\n  \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestSuccess.html":{"url":"classes/RequestSuccess.html","title":"class - RequestSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.RequestSuccess\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError'\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public data: any, public uniqueName: string ){}\n}\n\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Update.html":{"url":"classes/Update.html","title":"class - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.Update\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMany.html":{"url":"classes/UpdateMany.html","title":"class - UpdateMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entities: any[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entities\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UpdateMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:86\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/format-converter.ts\n            \n            interface\n            IFormatConverter\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n            \n            class\n            JsonFormatConverter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n            \n            function\n            stringToUint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n            \n            function\n            uintToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/datamapper-interface.ts\n            \n            interface\n            IDataMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n            \n            class\n            EntityArrayMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n            \n            interface\n            DataWrapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            class\n            ImmutableObservable\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            function\n            makeArrayCopy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            function\n            makeShadowCopy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            variable\n            makeImmutable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/static-constructor.decorator.ts\n            \n            function\n            StaticConstructed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            deleteRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            getRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            makeRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            postRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            putRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/request-provider.ts\n            \n            class\n            RequestProvider\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/models/configuration.ts\n            \n            interface\n            NgrxDataConfiguration\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/models/name-value.ts\n            \n            class\n            NameValue\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/configuaration.service.ts\n            \n            injectable\n            NgrxDataConfigurationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity-data.service.ts\n            \n            injectable\n            DataService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity.service.ts\n            \n            class\n            EntityService\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            AddEntityToState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            AddMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            CreateEntityState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteAll\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteAllEntityStates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteEntityFromState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteEntityState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            Update\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            UpdateMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/effects.ts\n            \n            injectable\n            NgrxDataEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            class\n            EntityStateCollectionAdapter\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            interface\n            EntityStatesCollection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            interface\n            ExtendedEntityState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            variable\n            entityAdapter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            MakeRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            RequestError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            RequestSuccess\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            @ngrx/effects : ^7.3.0\n        \n            @ngrx/entity : ^7.3.0\n        \n            @ngrx/store : ^7.3.0\n        \n            @ngrx/store-devtools : ^7.3.0\n        \n            @types/uuid : ^3.4.4\n        \n            class-transformer : ^0.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            uuid : ^3.3.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionTypes   (projects/.../db-actions.ts)\n                        \n                        \n                            ActionTypes   (projects/.../request-actions.ts)\n                        \n                        \n                            FormatDataType   (projects/.../response-type.ts)\n                        \n                        \n                            HttpMethod   (projects/.../http-method.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/db-actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionTypes\n                    \n                \n                        \n                            \n                                 CreateEntityState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] CreateEntityState\n                            \n                        \n                        \n                            \n                                 DeleteEntityState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteEntityState\n                            \n                        \n                        \n                            \n                                 DeleteAllEntityStates\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteAllEntityStates\n                            \n                        \n                        \n                            \n                                 AddEntityToState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] AddEntityToState\n                            \n                        \n                        \n                            \n                                 AddMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] AddMany\n                            \n                        \n                        \n                            \n                                 DeleteEntityFromState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteEntityFromState\n                            \n                        \n                        \n                            \n                                 DeleteAll\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteAll\n                            \n                        \n                        \n                            \n                                 DeleteMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteMany\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] Update\n                            \n                        \n                        \n                            \n                                 UpdateMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] UpdateMany\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/state/request-actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionTypes\n                    \n                \n                        \n                            \n                                 MakeRequest\n                            \n                        \n                        \n                            \n                                Value : [Request] MakeRequest\n                            \n                        \n                        \n                            \n                                 RequestSuccess\n                            \n                        \n                        \n                            \n                                Value : [Request] RequestSuccess\n                            \n                        \n                        \n                            \n                                 RequestError\n                            \n                        \n                        \n                            \n                                Value : [Request] RequestError\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/http/response-type.ts\n    \n        \n            \n                \n                    \n                        \n                        FormatDataType\n                    \n                \n                    \n                        \n                            The response type that HttpRequest support.\n\n                        \n                    \n                        \n                            \n                                 ArrayBuffer\n                            \n                        \n                        \n                            \n                                Value : arraybuffer\n                            \n                        \n                        \n                            \n                                 Blob\n                            \n                        \n                        \n                            \n                                Value : blob\n                            \n                        \n                        \n                            \n                                 Document\n                            \n                        \n                        \n                            \n                                Value : document\n                            \n                        \n                        \n                            \n                                 Json\n                            \n                        \n                        \n                            \n                                Value : json\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/http/http-method.ts\n    \n        \n            \n                \n                    \n                        \n                        HttpMethod\n                    \n                \n                    \n                        \n                            Supported http methods\n\n                        \n                    \n                        \n                            \n                                 get\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 delete\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 post\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 put\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deleteRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            getRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            makeArrayCopy   (projects/.../immutable-observable.ts)\n                        \n                        \n                            makeRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            makeShadowCopy   (projects/.../immutable-observable.ts)\n                        \n                        \n                            postRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            putRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            reducer   (projects/.../state.ts)\n                        \n                        \n                            StaticConstructed   (projects/.../static-constructor.decorator.ts)\n                        \n                        \n                            stringToUint   (projects/.../json-format-converter.ts)\n                        \n                        \n                            uintToString   (projects/.../json-format-converter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/http/http-communication.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deleteRequest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteRequest(http, url, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a delete request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(http, url, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a get request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \nmakeRequest(http, baseUrl, provider)\n                \n            \n\n\n\n\n            \n                \n                    make http request using a request provider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the http client to be use.\n\n                                    \n                                \n                                \n                                    baseUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base url for this request.\n\n                                    \n                                \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request provider to be use for this http request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postRequest\n                        \n                        \n                    \n                \n            \n            \n                \npostRequest(http, url, body: any, requestFormat, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a post request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body of the request.\n\n                                    \n                                \n                                \n                                    requestFormat\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the format to use to parse the body request.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \nputRequest(http, url, body: any, requestFormat, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a put request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body of the request.\n\n                                    \n                                \n                                \n                                    requestFormat\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the format to use to parse the body request.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeArrayCopy\n                        \n                        \n                    \n                \n            \n            \n                \nmakeArrayCopy(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeShadowCopy\n                        \n                        \n                    \n                \n            \n            \n                \nmakeShadowCopy(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/helpers/static-constructor.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StaticConstructed\n                        \n                        \n                    \n                \n            \n            \n                \nStaticConstructed(target: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            stringToUint\n                        \n                        \n                    \n                \n            \n            \n                \nstringToUint(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uintToString\n                        \n                        \n                    \n                \n            \n            \n                \nuintToString(uintArray)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uintArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngrx-data\nBuilding from source:\nBuild the library: npm run build_lib\nGenerate the docs: npm run g_docs\nRun library tests: npm run test_lib\nReadme:\nClick here to see the readme file of the library\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Insurance Technologies\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgrxDataLibModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllActions   (projects/.../all-actions.ts)\n                        \n                        \n                            DBActions   (projects/.../db-actions.ts)\n                        \n                        \n                            RequestActions   (projects/.../request-actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/all-actions.ts\n    \n    \n        \n            \n                \n                    \n                    AllActions\n                \n            \n            \n                \n                        DBActions | RequestActions\n\n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/db-actions.ts\n    \n    \n        \n            \n                \n                    \n                    DBActions\n                \n            \n            \n                \n                        CreateEntityState | DeleteEntityState | DeleteAllEntityStates | AddEntityToState | AddMany | DeleteEntityFromState | DeleteAll | DeleteMany | Update | UpdateMany\n\n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/request-actions.ts\n    \n    \n        \n            \n                \n                    \n                    RequestActions\n                \n            \n            \n                \n                        MakeRequest | RequestSuccess | RequestError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adapter   (projects/.../state.ts)\n                        \n                        \n                            entityAdapter   (projects/.../entity-states-collection-adapter.ts)\n                        \n                        \n                            initialState   (projects/.../state.ts)\n                        \n                        \n                            makeImmutable   (projects/.../immutable-observable.ts)\n                        \n                        \n                               (projects/.../entity-states-collection-adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EntityStateCollectionAdapter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : adapter.getInitialState()\n                        \n                    \n\n\n            \n        \n\n    projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            entityAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEntityAdapter()\n                        \n                    \n\n                \n                    \n                        the adapter to manage the entity changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : entityAdapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            makeImmutable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => (source: Observable) => \n    {     \n       return new ImmutableObservable(source);\n    }\n                        \n                    \n\n                \n                    \n                        convert to an inmutable observable.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
