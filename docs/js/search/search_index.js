var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AddEntityToState.html",[0,0.185,1,0.989]],["body/classes/AddEntityToState.html",[0,0.349,1,1.64,2,0.548,3,0.254,4,0.226,5,0.2,6,0.234,7,0.189,8,1.861,9,0.717,10,1.555,11,1.469,12,0.2,13,0.671,14,1.738,15,1.788,16,1.782,17,0.389,18,1.123,19,1.188,20,2.58,21,0.566,22,0.611,23,4.31,24,0.405,25,0.025,26,0.311,27,0.373,28,4.31,29,0.587,30,0.51,31,1.587,32,0.254,33,0.717,34,0.495,35,0.869,36,0.815,37,1.406,38,2.344,39,1.621,40,1.655,41,2.406,42,1.553,43,1.553,44,1.621,45,1.458,46,1.553,47,1.553,48,1.458,49,1.201,50,1.458,51,1.655,52,1.196,53,1.196,54,1.196,55,1.12,56,1.31,57,1.12,58,1.31,59,1.12,60,1.12,61,1.051,62,1.12,63,1.12,64,1.196,65,0.925,66,0.869,67,0.011,68,0.015,69,0.011]],["title/classes/AddMany.html",[0,0.185,45,0.928]],["body/classes/AddMany.html",[0,0.349,1,1.553,2,0.548,3,0.254,4,0.226,5,0.2,6,0.234,7,0.189,8,1.861,9,0.717,10,1.555,11,1.469,12,0.2,13,0.671,14,1.738,15,1.64,16,1.782,17,0.389,18,1.123,19,1.188,21,0.566,22,0.611,24,0.405,25,0.025,26,0.311,27,0.373,29,0.587,30,0.51,31,1.12,32,0.254,33,0.717,34,0.495,35,0.869,36,0.815,37,1.406,38,2.344,39,1.621,40,1.655,41,2.406,42,1.553,43,1.553,44,1.621,45,1.539,46,1.553,47,1.553,48,1.458,49,1.201,50,1.458,51,1.655,52,1.196,53,1.196,54,1.196,55,1.587,56,1.747,57,1.12,58,1.31,59,1.12,60,1.12,61,1.051,62,1.12,63,1.12,64,1.196,65,0.925,66,0.869,67,0.011,68,0.015,69,0.011,70,2.58,71,4.31,72,4.31]],["title/classes/CreateEntityState.html",[0,0.185,40,1.054]],["body/classes/CreateEntityState.html",[0,0.35,1,1.565,2,0.557,3,0.258,4,0.23,5,0.203,6,0.224,7,0.181,8,1.776,9,0.729,10,1.56,11,1.473,12,0.203,13,0.679,14,1.729,15,1.65,16,1.787,17,0.388,18,1.118,19,1.192,21,0.567,22,0.567,24,0.412,25,0.025,26,0.317,27,0.379,29,0.597,30,0.519,31,1.139,32,0.258,33,0.729,34,0.496,35,0.883,36,0.829,37,1.413,38,2.357,39,1.636,40,1.758,41,2.414,42,1.565,43,1.565,44,1.636,45,1.469,46,1.565,47,1.565,48,1.469,49,1.21,50,1.469,51,1.667,52,1.714,53,1.216,54,1.216,55,1.139,56,1.326,57,1.139,58,1.326,59,1.139,60,1.139,61,1.068,62,1.139,63,1.139,64,1.216,65,0.941,66,0.883,67,0.011,68,0.015,69,0.011,73,1.896,74,3.697,75,3.094]],["title/injectables/DataService.html",[76,1.674,77,2.33]],["body/injectables/DataService.html",[0,0.142,3,0.222,4,0.198,5,0.175,6,0.265,7,0.222,12,0.175,13,0.609,17,0.345,19,0.479,21,0.326,22,0.722,24,0.618,25,0.025,26,0.4,27,0.479,29,0.514,32,0.504,34,0.198,67,0.016,68,0.014,69,0.009,76,1.89,77,2.631,78,1.79,79,5.507,80,2.256,81,2.087,82,2.924,83,4.639,84,3.912,85,3.316,86,3.912,87,2.924,88,3.316,89,2.631,90,2.924,91,2.924,92,3.262,93,4.639,94,4.639,95,4.639,96,4.639,97,3.468,98,3.468,99,1.643,100,1.708,101,2.924,102,3.665,103,2.289,104,3.339,105,2.661,106,5.114,107,5.114,108,3.134,109,3.912,110,2.612,111,2.965,112,3.912,113,3.823,114,3.316,115,2.924,116,2.631,117,3.468,118,2.661,119,2.823,120,2.792,121,2.661,122,2.397,123,2.612,124,3.912,125,4.335,126,3.823,127,2.414,128,2.01,129,3.665,130,3.912,131,3.912,132,3.316,133,2.661,134,2.661,135,2.661,136,2.661,137,2.632,138,2.661,139,2.661,140,2.661,141,2.661,142,2.661,143,2.661,144,2.661,145,2.661,146,2.661,147,3.912,148,1.385,149,1.118,150,1.89,151,1.046,152,1.631,153,1.385,154,1.631,155,2.256,156,2.661,157,1.631,158,1.989,159,1.989,160,1.765,161,3.912,162,3.912,163,3.912,164,3.912,165,2.879,166,1.989,167,1.79,168,4.639,169,2.661,170,5.449,171,2.661,172,1.989,173,5.449,174,2.661,175,1.498,176,2.661,177,2.661,178,2.661,179,3.208,180,2.661,181,2.661,182,2.661,183,2.661,184,2.661]],["title/interfaces/DataWrapper.html",[185,1.122,186,2.59]],["body/interfaces/DataWrapper.html",[3,0.388,4,0.346,5,0.305,6,0.233,7,0.203,17,0.266,18,1.035,21,0.537,22,0.522,25,0.025,32,0.537,34,0.346,37,1.096,45,1.246,48,1.246,49,1.027,50,1.246,66,1.762,67,0.02,68,0.02,69,0.016,103,1.955,149,2.398,150,2.247,151,1.828,185,1.507,186,4.616,187,2.421,188,2.97,189,4.267,190,3.498,191,3.478,192,3.944,193,3.944,194,4.652,195,2.619,196,2.851,197,3.944,198,2.757,199,3.944,200,2.421,201,2.421,202,2.421,203,2.619,204,2.851,205,3.944,206,3.129,207,3.478,208,4.652,209,4.652,210,4.652,211,2.247]],["title/classes/DeleteAll.html",[0,0.185,47,0.989]],["body/classes/DeleteAll.html",[0,0.35,1,1.565,2,0.557,3,0.258,4,0.23,5,0.203,6,0.224,7,0.181,8,1.776,9,0.729,10,1.56,11,1.473,12,0.203,13,0.679,14,1.729,15,1.65,16,1.787,17,0.388,18,1.118,19,1.192,21,0.567,22,0.567,24,0.412,25,0.025,26,0.317,27,0.379,29,0.597,30,0.519,31,1.139,32,0.258,33,0.729,34,0.496,35,0.883,36,0.829,37,1.413,38,2.357,39,1.636,40,1.667,41,2.414,42,1.565,43,1.565,44,1.636,45,1.469,46,1.565,47,1.65,48,1.469,49,1.21,50,1.469,51,1.667,52,1.216,53,1.216,54,1.216,55,1.139,56,1.326,57,1.139,58,1.326,59,1.606,60,1.139,61,1.068,62,1.139,63,1.139,64,1.216,65,0.941,66,0.883,67,0.011,68,0.015,69,0.011,73,1.896,212,4.361,213,3.094]],["title/classes/DeleteAllEntityStates.html",[0,0.185,43,0.989]],["body/classes/DeleteAllEntityStates.html",[0,0.352,1,1.583,2,0.572,3,0.265,4,0.236,5,0.208,6,0.209,7,0.169,8,1.659,9,0.749,10,1.567,11,1.479,12,0.208,13,0.692,14,1.721,15,1.666,16,1.795,17,0.385,18,1.093,19,1.206,21,0.559,22,0.499,25,0.025,29,0.613,30,0.532,31,1.169,32,0.265,33,0.749,34,0.498,35,0.907,36,0.851,37,1.425,38,2.377,39,1.659,40,1.687,41,2.426,42,1.583,43,1.666,44,1.659,45,1.486,46,1.583,47,1.583,48,1.486,49,1.224,50,1.486,51,1.687,52,1.248,53,1.248,54,1.746,55,1.169,56,1.351,57,1.169,58,1.351,59,1.169,60,1.169,61,1.097,62,1.169,63,1.169,64,1.248,65,0.966,66,0.907,67,0.011,68,0.015,69,0.011,214,3.766]],["title/classes/DeleteEntityFromState.html",[0,0.185,46,0.989]],["body/classes/DeleteEntityFromState.html",[0,0.349,1,1.551,2,0.546,3,0.253,4,0.226,5,0.199,6,0.234,7,0.189,8,1.858,9,0.714,10,1.554,11,1.468,12,0.199,13,0.669,14,1.737,15,1.637,16,1.781,17,0.389,18,1.122,19,1.187,21,0.573,22,0.61,24,0.404,25,0.025,26,0.31,27,0.372,29,0.585,30,0.508,31,1.116,32,0.253,33,0.714,34,0.495,35,0.865,36,0.812,37,1.404,38,2.341,39,1.618,40,1.652,41,2.404,42,1.551,43,1.551,44,1.618,45,1.456,46,1.637,47,1.551,48,1.456,49,1.199,50,1.456,51,1.652,52,1.191,53,1.191,54,1.191,55,1.116,56,1.307,57,1.582,58,1.744,59,1.116,60,1.116,61,1.047,62,1.116,63,1.116,64,1.191,65,0.922,66,0.865,67,0.011,68,0.015,69,0.011,215,2.57,216,4.298,217,4.298]],["title/classes/DeleteEntityState.html",[0,0.185,42,0.989]],["body/classes/DeleteEntityState.html",[0,0.35,1,1.565,2,0.557,3,0.258,4,0.23,5,0.203,6,0.224,7,0.181,8,1.776,9,0.729,10,1.56,11,1.473,12,0.203,13,0.679,14,1.729,15,1.65,16,1.787,17,0.388,18,1.118,19,1.192,21,0.567,22,0.567,24,0.412,25,0.025,26,0.317,27,0.379,29,0.597,30,0.519,31,1.139,32,0.258,33,0.729,34,0.496,35,0.883,36,0.829,37,1.413,38,2.357,39,1.636,40,1.667,41,2.414,42,1.65,43,1.565,44,1.636,45,1.469,46,1.565,47,1.565,48,1.469,49,1.21,50,1.469,51,1.667,52,1.216,53,1.714,54,1.216,55,1.139,56,1.326,57,1.139,58,1.326,59,1.139,60,1.139,61,1.068,62,1.139,63,1.139,64,1.216,65,0.941,66,0.883,67,0.011,68,0.015,69,0.011,73,1.896,218,3.697,219,3.094]],["title/classes/DeleteMany.html",[0,0.185,48,0.928]],["body/classes/DeleteMany.html",[0,0.349,1,1.551,2,0.546,3,0.253,4,0.226,5,0.199,6,0.234,7,0.189,8,1.858,9,0.714,10,1.554,11,1.468,12,0.199,13,0.669,14,1.737,15,1.637,16,1.781,17,0.389,18,1.122,19,1.187,21,0.573,22,0.61,24,0.404,25,0.025,26,0.31,27,0.372,29,0.585,30,0.508,31,1.116,32,0.253,33,0.714,34,0.495,35,0.865,36,0.812,37,1.404,38,2.341,39,1.618,40,1.652,41,2.404,42,1.551,43,1.551,44,1.618,45,1.456,46,1.551,47,1.551,48,1.537,49,1.199,50,1.456,51,1.652,52,1.191,53,1.191,54,1.191,55,1.116,56,1.307,57,1.116,58,1.307,59,1.116,60,1.582,61,1.876,62,1.116,63,1.116,64,1.191,65,0.922,66,0.865,67,0.011,68,0.015,69,0.011,220,3.032,221,4.298,222,4.298]],["title/classes/EndRequest.html",[0,0.185,223,1.559]],["body/classes/EndRequest.html",[0,0.332,2,0.688,3,0.319,4,0.284,5,0.251,6,0.244,7,0.205,9,0.9,10,1.506,11,1.438,12,0.251,13,0.784,14,1.697,16,1.745,17,0.386,18,1.108,19,1.078,21,0.572,22,0.632,24,0.509,25,0.025,26,0.391,27,0.468,29,0.737,30,0.64,32,0.47,33,0.9,34,0.485,35,1.091,36,1.024,67,0.013,68,0.018,69,0.013,73,2.341,100,2.204,119,1.605,120,1.605,123,2.445,127,1.988,148,1.988,149,1.605,150,1.846,151,1.502,223,2.8,224,2.892,225,5.035,226,3.086,227,3.821,228,2.515,229,2.694,230,2.694,231,2.341,232,2.835,233,2.341,234,2.341,235,1.605,236,2.341,237,2.835,238,1.988]],["title/classes/EntityStateCollectionAdapter.html",[0,0.185,239,1.951]],["body/classes/EntityStateCollectionAdapter.html",[0,0.092,2,0.31,3,0.143,4,0.128,5,0.113,6,0.252,7,0.204,12,0.113,15,1.862,17,0.346,18,1.153,21,0.581,22,0.688,24,0.806,25,0.025,26,0.668,27,0.742,32,0.143,34,0.301,37,0.405,39,0.557,42,0.796,43,0.796,44,0.557,49,0.38,56,1.449,58,1.354,61,0.594,65,1.449,67,0.006,68,0.01,69,0.006,81,1.584,92,1.7,99,1.172,103,2.003,110,1.571,128,2.406,160,2.168,165,2.506,167,1.877,175,0.968,179,0.968,185,0.904,198,3.436,200,3.299,201,3.274,202,1.452,203,2.506,204,1.054,211,0.831,235,1.479,239,1.571,240,3.79,241,1.054,242,2.79,243,2.79,244,2.79,245,2.79,246,2.79,247,2.79,248,2.79,249,2.79,250,2.79,251,2.79,252,2.79,253,3.027,254,2.79,255,2.79,256,2.086,257,3.686,258,1.72,259,2.994,260,2.086,261,1.72,262,2.086,263,1.72,264,2.086,265,1.72,266,2.086,267,1.72,268,2.086,269,1.72,270,2.086,271,1.72,272,2.086,273,1.72,274,2.086,275,1.72,276,2.086,277,1.72,278,2.086,279,1.72,280,2.086,281,1.72,282,2.086,283,1.72,284,1.72,285,2.086,286,2.086,287,3.91,288,1.982,289,1.157,290,1.72,291,1.72,292,2.086,293,1.72,294,1.877,295,1.157,296,2.086,297,1.054,298,1.157,299,1.157,300,1.157,301,2.086,302,1.286,303,2.157,304,1.054,305,2.724,306,1.877,307,1.054,308,1.286,309,1.286,310,1.286,311,1.286,312,1.157,313,1.286,314,2.086,315,1.286,316,1.877,317,2.945,318,1.286,319,2.086,320,1.286,321,1.286,322,1.286,323,1.157,324,1.286,325,1.157,326,4.247,327,4.771,328,1.286,329,1.286,330,1.286,331,1.286,332,1.286,333,1.286,334,1.286,335,1.286,336,1.286,337,1.286,338,1.286,339,1.286,340,1.286,341,1.286,342,1.286,343,1.286,344,1.286,345,1.286]],["title/interfaces/EntityStatesCollection.html",[185,1.122,198,1.674]],["body/interfaces/EntityStatesCollection.html",[0,0.134,3,0.21,4,0.187,5,0.165,6,0.153,7,0.124,15,1.903,18,1.138,21,0.564,22,0.282,25,0.025,26,0.608,32,0.21,34,0.37,37,0.593,39,1.216,44,0.815,49,0.555,56,0.765,58,1.365,65,1.513,67,0.009,68,0.013,69,0.009,81,1.132,92,1.215,103,1.886,110,2.113,160,2.251,165,2.997,167,2.524,175,1.416,179,1.416,185,1.216,187,1.309,192,2.133,198,3.385,200,2.77,201,2.336,202,1.953,203,2.527,211,1.215,235,1.886,239,1.416,240,2.3,241,1.542,253,1.88,256,1.88,257,3.683,259,3.347,260,1.88,262,1.88,264,1.88,266,1.88,268,1.88,270,1.88,272,1.88,274,1.88,276,1.88,278,1.88,280,1.88,282,1.88,285,1.88,286,1.88,287,4.323,288,2.527,292,1.88,294,2.524,295,1.692,296,3.355,297,1.542,298,1.692,299,1.692,300,1.692,301,2.805,302,1.88,303,2.75,304,1.542,305,3.347,306,2.524,307,1.542,308,1.88,309,1.88,310,1.88,311,1.88,312,1.692,313,1.88,314,2.805,315,1.88,316,2.524,317,3.347,318,1.88,319,2.805,320,1.88,321,1.88,322,1.88,323,1.692,324,1.88,325,1.692,326,4.693,327,5.053,328,1.88,329,1.88,330,1.88,331,1.88,332,1.88,333,1.88,334,1.88,335,1.88,336,1.88,337,1.88,338,1.88,339,1.88,340,1.88,341,1.88,342,1.88,343,1.88,344,1.88,345,1.88,346,2.515]],["title/interfaces/ExtendedEntityState.html",[185,1.122,288,1.951]],["body/interfaces/ExtendedEntityState.html",[0,0.13,3,0.204,4,0.182,5,0.16,6,0.1,7,0.08,12,0.16,13,0.571,15,1.922,17,0.252,18,1.133,21,0.568,25,0.025,26,0.565,32,0.204,34,0.365,37,0.575,39,0.791,44,0.791,49,0.539,56,0.742,58,1.49,65,1.833,67,0.009,68,0.013,69,0.009,81,1.098,92,1.179,103,1.852,110,2.066,160,2.245,165,2.959,167,2.468,175,2.066,179,1.374,185,1.189,187,1.27,198,3.371,200,2.294,201,1.909,202,1.909,203,2.482,211,1.179,235,2.406,239,1.374,240,1.496,241,1.496,253,1.825,256,1.825,257,3.686,259,2.965,260,1.825,262,1.825,264,1.825,266,1.825,268,1.825,270,1.825,272,1.825,274,1.825,276,1.825,278,1.825,280,1.825,282,1.825,285,1.825,286,1.825,287,4.404,288,2.482,292,1.825,294,2.468,295,1.642,296,3.295,297,2.248,298,2.468,299,2.468,300,2.468,301,3.928,302,2.743,303,3.383,304,1.496,305,3.297,306,2.468,307,1.496,308,1.825,309,1.825,310,1.825,311,1.825,312,1.642,313,1.825,314,2.743,315,1.825,316,2.468,317,3.317,318,1.825,319,2.743,320,1.825,321,1.825,322,1.825,323,1.642,324,1.825,325,1.642,326,4.661,327,5.033,328,1.825,329,1.825,330,1.825,331,1.825,332,1.825,333,1.825,334,1.825,335,1.825,336,1.825,337,1.825,338,1.825,339,1.825,340,1.825,341,1.825,342,1.825,343,1.825,344,1.825,345,1.825]],["title/interfaces/IDataMapper.html",[185,1.122,195,1.951]],["body/interfaces/IDataMapper.html",[3,0.41,4,0.366,5,0.323,6,0.201,7,0.208,12,0.323,13,0.919,18,0.99,21,0.493,25,0.025,32,0.528,34,0.366,37,1.159,66,1.404,67,0.017,68,0.021,69,0.017,128,1.934,149,2.658,150,2.377,151,1.934,185,1.594,187,2.56,188,2.56,195,3.325,197,4.171,198,3.057,199,4.171,200,2.56,201,2.56,202,2.56,206,3.972,207,4.414,347,4.171,348,4.92,349,4.171,350,4.171,351,5.905]],["title/interfaces/IFormatConverter.html",[137,1.674,185,1.122]],["body/interfaces/IFormatConverter.html",[3,0.339,4,0.303,5,0.267,6,0.259,7,0.229,12,0.267,17,0.363,21,0.512,22,0.689,24,0.699,25,0.025,26,0.537,27,0.643,32,0.339,34,0.303,67,0.014,68,0.018,69,0.014,81,2.36,99,2.204,128,2.41,137,2.534,152,3.89,153,2.729,160,1.987,165,2.953,185,1.318,187,2.117,188,3.303,352,2.736,353,3.921,354,3.921,355,4.584,356,4.584,357,3.921,358,4.067,359,4.506,360,5.51,361,4.858,362,3.921,363,4.27,364,3.921,365,4.067,366,4.067,367,5.245,368,4.584,369,3.453,370,4.067,371,5.245,372,2.736,373,3.04]],["title/classes/ImmutableObservable.html",[0,0.185,374,2.33]],["body/classes/ImmutableObservable.html",[0,0.184,2,0.621,3,0.288,4,0.398,5,0.227,6,0.245,7,0.216,12,0.227,13,0.732,17,0.306,19,0.621,21,0.288,22,0.645,24,0.46,25,0.025,26,0.353,27,0.423,30,1.083,32,0.392,34,0.35,65,1.049,67,0.016,68,0.016,69,0.012,81,1.553,92,2.997,99,1.976,111,2.448,122,3.521,128,1.356,129,4.458,154,2.883,160,2.093,190,2.115,204,2.883,211,1.667,289,3.164,297,2.883,306,2.321,316,3.599,317,3.493,359,2.321,361,3.516,374,3.164,375,4.044,376,2.321,377,4.704,378,4.704,379,5.098,380,4.704,381,5.26,382,4.704,383,5.746,384,5.351,385,4.704,386,4.704,387,5.351,388,4.872,389,3.451,390,3.451,391,3.451,392,2.926,393,2.321,394,2.926,395,3.451,396,3.451,397,3.451,398,5.351,399,3.451,400,4.704,401,3.451,402,3.451,403,3.451,404,4.704,405,4.704,406,3.451,407,3.451,408,3.451,409,3.451,410,3.451,411,3.451,412,3.451,413,3.451,414,3.451,415,3.451,416,4.704,417,3.451,418,2.926,419,2.58,420,2.926,421,2.926,422,4.704,423,3.451,424,3.988,425,3.451,426,4.704,427,3.451,428,3.451,429,3.451,430,3.451,431,2.321,432,3.451,433,3.451,434,3.451]],["title/classes/JsonFormatConverter.html",[0,0.185,435,2.33]],["body/classes/JsonFormatConverter.html",[0,0.225,2,0.758,3,0.351,4,0.313,5,0.276,6,0.262,7,0.216,10,1.264,12,0.276,17,0.337,21,0.518,22,0.698,24,0.714,25,0.025,26,0.549,27,0.657,32,0.492,34,0.313,67,0.015,68,0.019,69,0.015,99,2.253,128,2.442,137,2.851,153,2.191,160,2.012,188,3.339,352,2.832,353,4.008,354,4.008,355,4.644,356,4.644,357,4.008,362,3.147,363,4.412,364,4.008,369,3.693,372,2.832,373,3.147,435,3.607,436,5.439,437,3.569,438,3.569,439,3.569,440,3.569,441,2.832,442,2.832,443,3.569,444,4.21,445,3.569,446,3.569,447,4.546,448,3.569,449,3.569,450,3.569,451,3.569,452,3.569]],["title/classes/MakeRequest.html",[0,0.185,100,1.276]],["body/classes/MakeRequest.html",[0,0.327,2,0.654,3,0.303,4,0.27,5,0.239,6,0.257,7,0.212,9,0.857,10,1.485,11,1.42,12,0.239,13,0.759,14,1.728,16,1.724,17,0.388,18,1.11,19,1.057,21,0.583,22,0.687,24,0.484,25,0.025,26,0.372,27,0.446,29,0.702,30,0.609,32,0.458,33,0.857,34,0.479,35,1.038,36,0.974,67,0.013,68,0.017,69,0.013,100,2.253,119,1.527,120,1.527,123,2.405,127,3.185,148,1.892,149,1.527,150,1.756,151,1.429,223,2.641,224,3.043,226,2.227,228,2.466,229,2.641,230,2.641,231,2.985,232,3.446,233,2.227,234,2.227,235,1.527,236,2.227,237,2.743,238,1.892,453,3.082,454,4.871,455,5.494]],["title/classes/NameValue.html",[0,0.185,456,2.33]],["body/classes/NameValue.html",[0,0.255,2,0.859,3,0.398,4,0.355,5,0.313,6,0.265,7,0.214,12,0.313,13,0.903,14,1.673,17,0.357,19,0.859,21,0.577,22,0.701,24,0.636,25,0.024,26,0.693,27,0.585,30,1.134,34,0.355,67,0.017,68,0.02,69,0.017,81,2.148,237,2.687,456,3.9,457,5.506,458,4.046,459,4.773,460,4.773,461,4.773,462,4.773,463,5.798]],["title/interfaces/NgrxDataConfiguration.html",[185,1.122,464,2.123]],["body/interfaces/NgrxDataConfiguration.html",[3,0.404,4,0.36,5,0.318,6,0.197,7,0.207,12,0.318,13,0.91,17,0.373,21,0.524,25,0.025,27,0.717,32,0.488,34,0.36,67,0.017,68,0.02,69,0.017,97,4.878,98,4.878,137,3.318,152,2.966,153,2.519,185,1.568,187,2.519,195,3.674,196,3.999,464,3.583,465,4.104,466,6.526,467,4.104]],["title/injectables/NgrxDataConfigurationService.html",[76,1.674,108,2.123]],["body/injectables/NgrxDataConfigurationService.html",[0,0.206,3,0.321,4,0.287,5,0.253,6,0.266,7,0.215,12,0.253,13,0.788,17,0.366,19,0.693,21,0.564,22,0.719,24,0.8,25,0.025,26,0.615,27,0.736,29,1.091,30,0.646,32,0.501,34,0.287,67,0.013,68,0.018,69,0.013,76,2.445,78,2.59,92,2.901,99,2.127,101,3.784,108,3.102,117,4.663,119,2.621,120,2.621,128,2.36,148,2.004,154,2.36,157,2.36,158,2.879,159,2.879,160,1.64,193,3.265,289,3.405,325,2.59,464,3.924,468,3.265,469,5.654,470,5.062,471,5.062,472,5.062,473,3.851,474,3.851,475,4.794,476,5.062,477,3.851,478,4.794,479,5.062,480,3.851,481,5.062,482,3.851,483,3.851,484,3.851,485,3.851,486,3.851,487,3.265,488,3.851,489,3.851,490,5.654,491,3.851]],["title/injectables/NgrxDataEffects.html",[76,1.674,492,2.33]],["body/injectables/NgrxDataEffects.html",[0,0.168,3,0.262,4,0.234,5,0.206,6,0.225,7,0.199,11,1.366,12,0.206,13,0.687,17,0.18,18,1.113,19,0.566,22,0.572,24,0.419,25,0.025,26,0.322,27,0.385,29,0.851,30,0.739,32,0.527,33,0.741,34,0.234,37,1.459,67,0.018,68,0.015,69,0.011,76,2.13,77,4.163,78,2.114,92,2.46,100,1.875,103,2.319,108,3.383,111,2.873,113,4.722,114,2.482,119,2.86,122,2.702,123,2.002,151,2.17,154,1.926,157,1.926,160,2.107,166,2.35,196,2.702,228,2.14,232,2.482,238,1.636,257,2.294,393,2.114,394,2.665,492,2.966,493,2.665,494,3.143,495,5.093,496,5.248,497,3.143,498,4.409,499,4.409,500,4.409,501,4.409,502,4.409,503,4.409,504,4.409,505,4.409,506,4.409,507,4.409,508,2.966,509,4.409,510,4.681,511,5.521,512,4.409,513,4.409,514,4.409,515,4.409,516,5.814,517,3.143,518,4.409,519,4.409,520,4.409,521,4.409,522,4.409,523,4.409,524,4.409,525,4.409,526,4.409,527,4.409,528,4.409,529,4.409,530,6.028,531,4.409,532,4.409,533,4.409,534,4.409,535,4.409,536,4.409,537,3.143,538,3.143,539,3.143,540,3.143,541,2.35,542,3.143,543,3.143,544,3.143,545,3.143]],["title/modules/NgrxDataLibModule.html",[546,2.59,547,2.33]],["body/modules/NgrxDataLibModule.html",[0,0.231,3,0.36,4,0.321,5,0.283,6,0.222,7,0.207,17,0.247,22,0.485,24,0.575,25,0.025,26,0.442,27,0.529,32,0.559,33,1.017,34,0.321,67,0.015,68,0.019,69,0.015,82,3.227,99,1.814,128,1.697,155,3.66,157,2.645,160,1.398,179,2.43,464,3.842,475,4.619,487,3.66,492,2.903,541,3.227,547,4.015,548,3.227,549,5.448,550,4.317,551,6.269,552,3.66,553,5.448,554,4.317,555,5.969,556,5.969,557,4.317,558,6.464,559,4.317,560,4.686,561,3.227,562,4.317,563,4.317,564,4.317,565,5.448,566,3.66,567,4.619,568,3.66,569,4.317,570,4.317,571,3.66,572,4.317,573,4.317,574,4.317,575,4.317]],["title/classes/RequestError.html",[0,0.185,229,1.559]],["body/classes/RequestError.html",[0,0.33,2,0.671,3,0.311,4,0.277,5,0.244,6,0.252,7,0.209,9,0.878,10,1.495,11,1.429,12,0.244,13,0.771,14,1.715,16,1.735,17,0.387,18,1.116,19,1.067,21,0.578,22,0.666,24,0.496,25,0.025,26,0.381,27,0.457,29,0.719,30,0.624,32,0.464,33,0.878,34,0.482,35,1.063,36,0.998,67,0.013,68,0.017,69,0.013,100,2.182,119,1.565,120,1.565,123,2.425,127,1.939,148,1.939,149,1.565,150,1.8,151,1.464,218,4.198,223,2.667,224,2.981,226,2.283,228,2.49,229,2.777,230,2.667,231,2.283,232,2.788,233,2.283,234,3.035,235,2.49,236,2.283,237,2.788,238,1.939,576,3.725,577,4.952]],["title/classes/RequestProvider.html",[0,0.185,120,1.456]],["body/classes/RequestProvider.html",[0,0.104,2,0.349,3,0.162,4,0.144,5,0.127,6,0.266,7,0.222,12,0.127,13,0.479,17,0.362,19,0.349,21,0.537,22,0.727,24,0.67,25,0.025,26,0.59,27,0.617,29,0.593,30,0.966,32,0.362,34,0.144,37,0.457,67,0.007,68,0.011,69,0.007,81,2.128,89,2.919,90,1.45,91,1.45,92,3.193,99,1.291,101,2.297,102,3.677,103,1.823,104,3.35,110,1.092,111,2.461,114,2.148,119,1.823,120,2.471,123,2.56,126,4.695,128,2.312,137,3.086,149,2.296,151,0.763,152,1.189,153,1.986,160,1.906,165,3.419,172,4.31,175,2.968,179,2.968,195,3.312,196,3.23,203,3.246,206,3.545,323,2.067,369,2.663,393,1.305,456,3.384,467,1.645,508,3.181,578,5.521,579,1.645,580,3.073,581,3.815,582,3.815,583,3.815,584,3.815,585,3.815,586,3.815,587,5.466,588,4.73,589,3.073,590,3.073,591,3.073,592,3.073,593,5.271,594,4.468,595,4.868,596,3.073,597,1.94,598,1.94,599,1.94,600,1.94,601,1.94,602,1.94,603,1.94,604,1.94,605,1.94,606,3.073,607,1.94,608,3.073,609,3.073,610,1.94,611,4.468,612,3.073,613,1.94,614,4.01,615,3.073,616,1.94,617,3.815,618,4.34,619,3.073,620,1.94,621,1.94,622,1.94,623,3.679,624,1.94,625,1.94,626,2.605,627,1.94,628,1.94,629,4.34,630,1.94,631,1.94,632,2.605,633,1.94,634,1.94,635,1.94,636,1.94,637,3.073,638,1.94,639,1.94,640,1.645,641,1.94,642,5.271,643,4.73,644,6.072,645,5.271,646,5.031,647,3.815,648,1.94,649,1.94,650,1.94,651,1.94,652,1.94,653,1.94,654,1.94,655,1.94,656,1.94,657,1.94,658,1.94,659,4.73,660,1.94,661,1.645,662,1.94,663,4.34,664,4.34,665,1.94,666,1.94,667,1.94,668,1.645,669,1.94,670,1.94]],["title/classes/RequestSuccess.html",[0,0.185,228,1.456]],["body/classes/RequestSuccess.html",[0,0.327,2,0.657,3,0.305,4,0.272,5,0.24,6,0.257,7,0.223,9,0.86,10,1.487,11,1.422,12,0.24,13,0.761,14,1.729,16,1.726,17,0.389,18,1.111,19,1.059,21,0.577,22,0.688,24,0.486,25,0.025,26,0.374,27,0.448,29,0.705,30,0.612,32,0.459,33,0.86,34,0.479,35,1.042,36,0.978,67,0.013,68,0.017,69,0.013,74,4.669,100,2.165,119,1.534,120,1.534,123,2.409,127,1.9,148,1.9,149,1.534,150,1.764,151,1.435,223,2.646,224,3.047,226,2.238,228,2.575,229,2.646,230,2.646,231,2.238,232,3.451,233,2.994,234,2.238,235,1.534,236,2.238,237,2.751,238,1.9,453,3.096,671,4.886]],["title/classes/SelectEntity.html",[0,0.185,51,1.054]],["body/classes/SelectEntity.html",[0,0.348,1,1.546,2,0.542,3,0.251,4,0.224,5,0.197,6,0.233,7,0.188,8,1.853,9,0.709,10,1.552,11,1.466,12,0.197,13,0.666,14,1.735,15,1.633,16,1.779,17,0.388,18,1.121,19,1.186,21,0.572,22,0.608,24,0.401,25,0.025,26,0.308,27,0.369,29,0.581,30,0.504,31,1.108,32,0.251,33,0.709,34,0.494,35,0.859,36,0.806,37,1.4,38,2.336,39,1.611,40,1.646,41,2.401,42,1.546,43,1.546,44,1.611,45,1.451,46,1.546,47,1.546,48,1.451,49,1.195,50,1.451,51,1.739,52,1.182,53,1.182,54,1.182,55,1.108,56,1.3,57,1.108,58,1.739,59,1.108,60,1.108,61,1.039,62,1.108,63,1.108,64,1.68,65,1.646,66,0.859,67,0.01,68,0.015,69,0.01,215,2.551,672,4.275,673,4.275]],["title/classes/SuccessMapping.html",[0,0.185,230,1.559]],["body/classes/SuccessMapping.html",[0,0.332,2,0.688,3,0.319,4,0.284,5,0.251,6,0.244,7,0.205,9,0.9,10,1.506,11,1.438,12,0.251,13,0.784,14,1.697,16,1.745,17,0.386,18,1.108,19,1.078,21,0.572,22,0.632,24,0.509,25,0.025,26,0.391,27,0.468,29,0.737,30,0.64,32,0.47,33,0.9,34,0.485,35,1.091,36,1.024,67,0.013,68,0.018,69,0.013,73,2.341,100,2.204,119,1.605,120,1.605,123,2.445,127,1.988,148,1.988,149,1.605,150,1.846,151,1.502,214,3.239,223,2.694,224,2.892,226,2.341,228,2.515,229,2.694,230,2.8,231,2.341,232,2.835,233,2.341,234,2.341,235,1.605,236,3.086,237,2.835,238,1.988,674,5.035]],["title/classes/TextFormatConverter.html",[0,0.185,675,2.59]],["body/classes/TextFormatConverter.html",[0,0.225,2,0.758,3,0.351,4,0.313,5,0.276,6,0.262,7,0.216,10,1.264,12,0.276,17,0.337,21,0.518,22,0.698,24,0.714,25,0.025,26,0.549,27,0.657,32,0.492,34,0.313,67,0.015,68,0.019,69,0.015,99,2.253,128,2.442,137,2.851,153,2.191,160,2.012,188,3.339,352,2.832,353,4.008,354,4.008,355,4.644,356,4.644,357,4.008,362,3.147,363,4.412,364,4.008,369,3.693,372,2.832,373,3.147,437,3.569,438,3.569,439,3.569,440,3.569,441,2.832,442,2.832,443,3.569,445,3.569,446,3.569,447,4.546,448,3.569,449,3.569,450,3.569,451,3.569,452,3.569,675,4.008,676,5.439,677,4.21]],["title/classes/Update.html",[0,0.185,49,0.765]],["body/classes/Update.html",[0,0.349,1,1.553,2,0.548,3,0.254,4,0.226,5,0.2,6,0.234,7,0.189,8,1.861,9,0.717,10,1.555,11,1.469,12,0.2,13,0.671,14,1.738,15,1.788,16,1.782,17,0.389,18,1.123,19,1.188,20,2.58,21,0.566,22,0.611,24,0.405,25,0.025,26,0.311,27,0.373,29,0.587,30,0.51,31,1.12,32,0.254,33,0.717,34,0.495,35,0.869,36,0.815,37,1.406,38,2.344,39,1.621,40,1.655,41,2.406,42,1.553,43,1.553,44,1.621,45,1.458,46,1.553,47,1.553,48,1.458,49,1.268,50,1.458,51,1.655,52,1.196,53,1.196,54,1.196,55,1.12,56,1.31,57,1.12,58,1.31,59,1.12,60,1.12,61,1.051,62,1.587,63,1.12,64,1.196,65,0.925,66,0.869,67,0.011,68,0.015,69,0.011,678,4.31,679,4.31]],["title/classes/UpdateMany.html",[0,0.185,50,0.928]],["body/classes/UpdateMany.html",[0,0.349,1,1.553,2,0.548,3,0.254,4,0.226,5,0.2,6,0.234,7,0.189,8,1.861,9,0.717,10,1.555,11,1.469,12,0.2,13,0.671,14,1.738,15,1.64,16,1.782,17,0.389,18,1.123,19,1.188,21,0.566,22,0.611,24,0.405,25,0.025,26,0.311,27,0.373,29,0.587,30,0.51,31,1.12,32,0.254,33,0.717,34,0.495,35,0.869,36,0.815,37,1.406,38,2.344,39,1.621,40,1.655,41,2.406,42,1.553,43,1.553,44,1.621,45,1.458,46,1.553,47,1.553,48,1.458,49,1.201,50,1.539,51,1.655,52,1.196,53,1.196,54,1.196,55,1.12,56,1.747,57,1.12,58,1.31,59,1.12,60,1.12,61,1.051,62,1.12,63,1.587,64,1.196,65,0.925,66,0.869,67,0.011,68,0.015,69,0.011,70,2.58,680,4.31,681,4.31]],["title/coverage.html",[682,3.998]],["body/coverage.html",[0,0.365,1,0.735,5,0.169,6,0.291,7,0.235,8,2.045,9,1.558,17,0.147,25,0.025,40,0.783,42,0.735,43,0.735,45,0.69,46,0.735,47,0.735,48,0.69,49,0.568,50,0.69,51,0.783,67,0.009,68,0.013,69,0.009,76,2.198,77,1.732,79,2.183,80,2.183,100,1.406,108,1.578,111,1.34,120,1.082,137,1.244,152,1.578,185,1.824,186,1.925,188,3.115,189,2.854,190,2.34,191,2.854,195,1.45,198,1.244,200,2.797,201,2.797,202,1.34,204,3.956,211,3.399,223,1.159,224,2.597,228,1.082,229,1.159,230,1.159,235,1.082,239,1.45,240,3.294,241,3.294,288,1.45,303,1.578,307,1.578,347,2.183,352,3.061,369,2.15,374,1.732,375,3.385,376,3.385,419,1.925,435,1.732,436,2.183,441,1.732,442,1.732,456,1.732,457,2.183,458,2.183,464,1.578,465,2.183,468,2.183,492,1.732,493,2.183,560,1.925,561,1.925,578,2.183,579,2.183,675,1.925,676,2.183,682,2.183,683,2.183,684,2.575,685,2.575,686,2.575,687,2.575,688,6.311,689,3.237,690,6.611,691,2.575,692,1.925,693,2.575,694,2.575,695,2.183,696,2.183,697,6.114,698,6.114,699,5.986,700,2.183,701,2.183,702,2.183,703,4.209,704,4.773,705,2.183,706,2.183,707,2.183,708,2.183,709,2.183,710,3.818,711,2.575,712,2.575,713,2.575,714,4.551,715,2.575,716,4.267,717,2.183,718,2.575,719,2.575,720,2.183,721,5.631,722,2.575,723,2.183,724,2.575,725,2.575,726,3.762,727,2.183,728,2.575,729,2.575]],["title/dependencies.html",[730,2.9,731,3.112]],["body/dependencies.html",[0,0.26,25,0.025,33,1.383,67,0.017,68,0.02,69,0.017,154,2.984,157,2.984,295,3.276,478,4.129,541,3.64,731,3.64,732,4.87,733,6.935,734,4.87,735,4.87,736,4.87,737,5.869,738,5.869,739,4.87,740,4.87,741,6.539,742,4.87,743,4.87,744,4.87,745,4.87,746,4.87,747,4.87,748,4.87,749,4.87,750,4.87,751,4.87,752,4.87,753,4.87,754,4.87,755,4.87]],["title/miscellaneous/enumerations.html",[756,1.401,757,3.53]],["body/miscellaneous/enumerations.html",[1,1.505,6,0.251,7,0.203,8,1.329,9,1.45,12,0.269,17,0.234,25,0.025,30,1.199,36,1.648,40,1.604,41,2.534,42,1.505,43,1.505,45,1.413,46,1.505,47,1.505,48,1.413,49,1.164,50,1.413,51,1.604,67,0.014,68,0.018,69,0.014,87,3.066,99,1.723,100,1.942,102,3.547,103,2.216,104,3.232,114,2.31,123,2.501,149,2.216,223,2.373,224,1.982,228,2.216,229,2.373,230,2.373,363,3.547,368,3.066,372,3.547,508,2.759,703,3.066,756,1.982,757,3.478,758,3.478,759,3.478,760,4.102,761,5.274,762,3.478,763,5.274,764,4.102,765,4.102,766,5.274,767,5.274,768,4.471,769,5.274]],["title/miscellaneous/functions.html",[431,2.801,756,1.401]],["body/miscellaneous/functions.html",[6,0.249,7,0.206,11,1,12,0.214,17,0.337,18,0.759,21,0.273,24,0.897,25,0.024,26,0.689,27,0.825,30,0.759,66,0.933,67,0.011,68,0.016,69,0.011,81,2.653,89,3.777,100,1.668,102,2.198,103,1.373,104,2.002,114,3.762,115,4.408,116,3.777,119,2.359,122,3.614,123,2.645,125,2.77,126,5.031,127,2.357,128,2.545,129,3.967,188,2.357,189,2.443,190,3.739,191,3.386,198,1.579,205,2.77,206,3.047,207,3.386,257,1.7,369,2.551,375,2.198,376,3.497,421,2.77,424,2.77,431,2.198,441,3.047,442,3.047,508,3.777,560,3.386,594,4.76,595,4.768,623,5.173,689,2.77,692,3.386,695,3.841,696,3.841,700,2.77,701,3.841,702,3.841,703,2.443,704,5.304,705,3.841,706,3.841,707,3.841,708,3.841,709,3.841,726,2.443,756,1.579,762,5.173,770,2.77,771,3.841,772,2.77,773,3.268,774,4.53,775,3.268,776,6.379,777,4.76,778,4.76,779,3.268,780,3.268,781,3.268,782,3.268,783,2.77,784,3.268,785,3.268,786,3.268,787,3.268,788,3.268,789,3.268,790,3.268,791,3.268]],["title/index.html",[12,0.19,792,2.167,793,2.167]],["body/index.html",[0,0.305,1,0.582,5,0.134,7,0.225,10,1.31,11,1.227,14,1.544,15,1.669,16,1.439,17,0.307,18,0.9,19,1.029,21,0.477,25,0.025,26,0.55,29,0.616,31,0.75,32,0.329,34,0.435,37,1.31,45,0.546,46,0.582,47,0.582,48,0.546,49,0.87,50,0.546,55,0.75,56,1.868,57,0.75,58,1.562,59,0.75,60,0.75,61,0.704,62,0.75,63,0.75,66,1.124,67,0.007,68,0.011,69,0.007,76,0.984,82,1.523,85,1.728,87,1.523,88,1.728,89,2.148,90,1.523,91,1.523,97,1.523,98,1.523,103,0.856,104,1.249,110,2.511,111,2.05,113,2.944,114,2.218,115,1.523,116,3.455,117,2.388,122,2.968,123,0.801,132,3.339,151,0.801,153,1.06,158,1.523,159,2.388,160,1.035,166,1.523,172,4.273,175,2.218,190,1.249,196,2.733,203,2.726,204,2.414,211,0.984,257,3.236,259,2.148,289,1.371,297,1.249,298,1.371,299,1.371,300,1.371,304,3.148,317,1.147,349,1.728,350,1.728,359,1.371,360,1.728,361,2.388,368,1.523,374,2.148,393,1.371,418,2.708,431,1.371,435,2.649,496,1.728,510,1.728,546,2.388,547,1.371,552,1.728,568,3.339,595,1.523,611,1.728,614,3.78,626,1.728,640,2.708,661,1.728,668,1.728,692,3.333,717,2.708,768,4.105,777,3.339,778,3.339,783,2.708,792,2.388,793,1.523,794,6.218,795,1.728,796,3.194,797,3.194,798,3.939,799,3.939,800,2.038,801,2.038,802,2.038,803,3.194,804,2.038,805,3.339,806,4.842,807,3.194,808,3.194,809,3.939,810,4.842,811,2.708,812,3.194,813,2.038,814,3.939,815,3.194,816,2.038,817,4.459,818,2.038,819,2.038,820,1.728,821,2.038,822,2.038,823,2.038,824,2.038,825,5.137,826,3.939,827,4.459,828,2.038,829,2.038,830,2.038,831,2.038,832,3.939,833,2.038,834,2.038,835,2.038,836,3.939,837,2.038,838,2.038,839,5.137,840,3.939,841,2.038,842,2.038,843,2.038,844,3.939,845,3.939,846,2.038,847,2.038,848,3.194,849,3.194,850,3.194,851,3.194,852,2.038,853,3.939,854,2.038,855,3.939,856,3.939,857,3.939,858,3.939,859,2.038,860,2.038,861,2.038,862,2.038,863,2.038,864,2.038,865,2.038,866,2.038,867,2.038,868,2.038,869,2.038,870,2.038,871,2.038,872,4.459,873,2.038,874,2.038,875,2.038,876,2.038,877,3.194,878,2.038,879,2.038,880,2.038,881,2.038,882,2.038,883,2.038,884,2.038,885,2.038,886,2.038,887,2.038,888,2.038,889,2.038,890,2.038,891,2.038,892,2.038,893,2.038,894,2.038,895,2.038,896,2.038,897,2.038,898,2.038,899,2.038,900,2.038,901,2.038,902,4.842,903,2.038,904,2.038,905,2.038,906,2.038,907,2.038,908,2.038,909,2.038,910,2.038,911,2.038,912,2.038,913,2.038,914,3.194,915,2.038,916,2.038,917,2.038,918,2.038,919,3.194,920,2.038,921,2.038,922,2.038,923,2.038,924,2.038,925,2.038,926,2.038,927,2.038,928,2.038,929,2.038,930,2.038,931,2.038,932,2.038,933,3.194,934,2.038,935,2.038,936,2.038,937,2.038,938,2.038,939,1.728,940,2.038,941,1.728,942,1.728,943,3.194,944,2.038,945,2.038,946,2.038,947,3.194,948,2.388,949,2.038,950,2.038,951,1.728,952,2.038,953,2.038,954,2.038,955,2.038,956,2.038,957,2.038,958,3.939,959,2.038,960,2.038,961,2.038,962,2.038,963,2.038,964,2.038,965,2.038,966,2.038,967,2.038,968,2.038,969,2.038,970,2.038,971,2.038,972,2.038]],["title/license.html",[792,2.167,793,2.167,948,2.167]],["body/license.html",[11,1.015,25,0.02,67,0.016,68,0.02,69,0.016,116,3.812,317,3.191,388,3.899,392,3.899,683,3.899,795,5.208,939,3.899,941,3.899,942,3.899,948,3.438,951,3.899,973,6.143,974,4.599,975,4.599,976,5.667,977,4.599,978,4.599,979,4.599,980,4.599,981,4.599,982,4.599,983,6.917,984,4.599,985,4.599,986,4.599,987,4.599,988,5.667,989,4.599,990,4.599,991,4.599,992,4.599,993,4.599,994,4.599,995,4.599,996,4.599,997,5.667,998,4.599,999,4.599,1000,4.599,1001,4.599,1002,4.599,1003,4.599,1004,5.667,1005,5.667,1006,4.599,1007,4.599,1008,4.599,1009,4.599,1010,4.599,1011,4.599,1012,4.599,1013,4.599,1014,4.599,1015,4.599,1016,4.599,1017,4.599,1018,4.599,1019,4.599,1020,4.599,1021,4.599,1022,4.599,1023,4.599,1024,4.599,1025,4.599,1026,4.599,1027,4.599,1028,4.599,1029,4.599,1030,4.599,1031,4.599,1032,3.899,1033,4.599,1034,4.599]],["title/modules.html",[548,3.525]],["body/modules.html",[25,0.022,67,0.019,68,0.022,69,0.019,547,3.723,548,4.137,632,4.692,1035,5.534,1036,5.534]],["title/overview.html",[1037,3.998]],["body/overview.html",[2,0.963,25,0.022,67,0.019,68,0.022,69,0.019,78,3.598,187,2.784,381,4.535,546,4.637,566,4.535,567,4.535,571,4.535,723,4.535,731,3.998,805,4.535,811,4.535,820,4.535,1032,4.535,1037,4.535,1038,5.349,1039,5.349,1040,6.203]],["title/miscellaneous/typealiases.html",[756,1.401,1041,4.164]],["body/miscellaneous/typealiases.html",[1,1.399,6,0.258,7,0.208,8,1.587,9,1.604,12,0.322,17,0.28,25,0.025,40,1.49,42,1.399,43,1.399,45,1.313,46,1.399,47,1.399,48,1.313,49,1.082,50,1.313,51,1.49,66,1.803,67,0.017,68,0.021,69,0.017,100,1.804,223,2.205,224,2.367,228,2.059,229,2.205,230,2.205,238,3.287,756,2.367,758,4.154,759,4.154,1042,4.9,1043,5.89,1044,4.9,1045,4.9]],["title/miscellaneous/variables.html",[756,1.401,1046,3.53]],["body/miscellaneous/variables.html",[4,0.328,6,0.258,7,0.208,12,0.29,15,1.259,25,0.025,29,1.326,30,1.151,67,0.015,68,0.019,69,0.015,111,2.874,129,3.715,160,1.429,200,3.138,201,3.138,202,3.138,211,2.131,235,2.32,239,2.484,240,2.704,241,3.695,257,3.138,288,3.395,294,2.968,303,3.385,304,2.704,305,2.968,307,3.385,312,2.968,359,2.968,375,2.968,376,3.715,379,3.741,419,4.129,420,3.741,561,4.129,716,3.741,720,4.683,726,3.298,727,4.683,756,2.131,770,4.683,771,3.741,772,5.112,1046,3.741,1047,6.029,1048,4.412,1049,4.412,1050,4.412,1051,4.412,1052,4.412]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.2.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":805,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.9.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["14/37",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":809,"title":{},"body":{"index.html":{}}}],["2.5.4",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":975,"title":{},"body":{"license.html":{}}}],["23",{"_index":723,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["25",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":811,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.3.2",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["3/9",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":812,"title":{},"body":{"index.html":{}}}],["4/17",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":816,"title":{},"body":{"index.html":{}}}],["5/15",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":820,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.3.3",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":824,"title":{},"body":{"index.html":{}}}],["7.1.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":446,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["80",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["_body",{"_index":581,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_datamapper",{"_index":582,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_deleteprovider",{"_index":93,"title":{},"body":{"injectables/DataService.html":{}}}],["_getprovider",{"_index":94,"title":{},"body":{"injectables/DataService.html":{}}}],["_postprovider",{"_index":95,"title":{},"body":{"injectables/DataService.html":{}}}],["_putprovider",{"_index":96,"title":{},"body":{"injectables/DataService.html":{}}}],["_requestformat",{"_index":583,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_requesttype",{"_index":584,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_responseformats",{"_index":585,"title":{},"body":{"classes/RequestProvider.html":{}}}],["_url",{"_index":586,"title":{},"body":{"classes/RequestProvider.html":{}}}],["above",{"_index":1003,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":101,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestProvider.html":{}}}],["acknowledgments",{"_index":953,"title":{},"body":{"index.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["actions",{"_index":37,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actions.ts",{"_index":9,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["actions.ts:17",{"_index":454,"title":{},"body":{"classes/MakeRequest.html":{}}}],["actions.ts:18",{"_index":455,"title":{},"body":{"classes/MakeRequest.html":{}}}],["actions.ts:23",{"_index":671,"title":{},"body":{"classes/RequestSuccess.html":{}}}],["actions.ts:24",{"_index":74,"title":{},"body":{"classes/CreateEntityState.html":{},"classes/RequestSuccess.html":{}}}],["actions.ts:25",{"_index":75,"title":{},"body":{"classes/CreateEntityState.html":{}}}],["actions.ts:29",{"_index":577,"title":{},"body":{"classes/RequestError.html":{}}}],["actions.ts:30",{"_index":218,"title":{},"body":{"classes/DeleteEntityState.html":{},"classes/RequestError.html":{}}}],["actions.ts:31",{"_index":219,"title":{},"body":{"classes/DeleteEntityState.html":{}}}],["actions.ts:35",{"_index":674,"title":{},"body":{"classes/SuccessMapping.html":{}}}],["actions.ts:36",{"_index":214,"title":{},"body":{"classes/DeleteAllEntityStates.html":{},"classes/SuccessMapping.html":{}}}],["actions.ts:41",{"_index":225,"title":{},"body":{"classes/EndRequest.html":{}}}],["actions.ts:42",{"_index":227,"title":{},"body":{"classes/EndRequest.html":{}}}],["actions.ts:44",{"_index":23,"title":{},"body":{"classes/AddEntityToState.html":{}}}],["actions.ts:45",{"_index":28,"title":{},"body":{"classes/AddEntityToState.html":{}}}],["actions.ts:51",{"_index":71,"title":{},"body":{"classes/AddMany.html":{}}}],["actions.ts:52",{"_index":72,"title":{},"body":{"classes/AddMany.html":{}}}],["actions.ts:58",{"_index":216,"title":{},"body":{"classes/DeleteEntityFromState.html":{}}}],["actions.ts:59",{"_index":217,"title":{},"body":{"classes/DeleteEntityFromState.html":{}}}],["actions.ts:65",{"_index":212,"title":{},"body":{"classes/DeleteAll.html":{}}}],["actions.ts:66",{"_index":213,"title":{},"body":{"classes/DeleteAll.html":{}}}],["actions.ts:72",{"_index":221,"title":{},"body":{"classes/DeleteMany.html":{}}}],["actions.ts:73",{"_index":222,"title":{},"body":{"classes/DeleteMany.html":{}}}],["actions.ts:79",{"_index":678,"title":{},"body":{"classes/Update.html":{}}}],["actions.ts:80",{"_index":679,"title":{},"body":{"classes/Update.html":{}}}],["actions.ts:86",{"_index":680,"title":{},"body":{"classes/UpdateMany.html":{}}}],["actions.ts:87",{"_index":681,"title":{},"body":{"classes/UpdateMany.html":{}}}],["actions.ts:92",{"_index":672,"title":{},"body":{"classes/SelectEntity.html":{}}}],["actions.ts:93",{"_index":673,"title":{},"body":{"classes/SelectEntity.html":{}}}],["actiontypes",{"_index":36,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{}}}],["actiontypes.addentitytostate",{"_index":31,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.addmany",{"_index":55,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.createentitystate",{"_index":52,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteall",{"_index":59,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.deleteallentitystates",{"_index":54,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deleteentityfromstate",{"_index":57,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.deleteentitystate",{"_index":53,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.deletemany",{"_index":60,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.endrequest",{"_index":226,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["actiontypes.makerequest",{"_index":231,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["actiontypes.requesterror",{"_index":234,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["actiontypes.requestsuccess",{"_index":233,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["actiontypes.selectentity",{"_index":64,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["actiontypes.successmapping",{"_index":236,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["actiontypes.update",{"_index":62,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["actiontypes.updatemany",{"_index":63,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["adam",{"_index":910,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":202,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.getinitialstate",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adapter.ts",{"_index":241,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.ts:103",{"_index":261,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:111",{"_index":269,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:122",{"_index":267,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:134",{"_index":265,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:146",{"_index":275,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:158",{"_index":273,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:170",{"_index":271,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:182",{"_index":279,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:194",{"_index":277,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:206",{"_index":283,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:218",{"_index":281,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:229",{"_index":293,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:240",{"_index":290,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:50",{"_index":284,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:60",{"_index":258,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["adapter.ts:7",{"_index":346,"title":{},"body":{"interfaces/EntityStatesCollection.html":{}}}],["adapter.ts:84",{"_index":263,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["add",{"_index":203,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["addentitystate",{"_index":242,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["addentitystate(name",{"_index":256,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["addentitytostate",{"_index":1,"title":{"classes/AddEntityToState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["addmany",{"_index":45,"title":{"classes/AddMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["addmany(data",{"_index":921,"title":{},"body":{"index.html":{}}}],["affect",{"_index":38,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["alejandro",{"_index":901,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allactions",{"_index":1043,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":313,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["always",{"_index":380,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["and/or",{"_index":995,"title":{},"body":{"license.html":{}}}],["angular",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":155,"title":{},"body":{"injectables/DataService.html":{},"modules/NgrxDataLibModule.html":{}}}],["angular/compiler",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":157,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":91,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["app",{"_index":972,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":866,"title":{},"body":{"index.html":{}}}],["app.component.sass",{"_index":868,"title":{},"body":{"index.html":{}}}],["app.component.ts.ts",{"_index":862,"title":{},"body":{"index.html":{}}}],["app.module",{"_index":922,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":838,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":869,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":444,"title":{},"body":{"classes/JsonFormatConverter.html":{}}}],["apply",{"_index":837,"title":{},"body":{"index.html":{}}}],["are:typescript",{"_index":926,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1031,"title":{},"body":{"license.html":{}}}],["array",{"_index":190,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraybuffer",{"_index":363,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"miscellaneous/enumerations.html":{}}}],["arrays",{"_index":656,"title":{},"body":{"classes/RequestProvider.html":{}}}],["asociated",{"_index":629,"title":{},"body":{"classes/RequestProvider.html":{}}}],["assigned",{"_index":667,"title":{},"body":{"classes/RequestProvider.html":{}}}],["associated",{"_index":984,"title":{},"body":{"license.html":{}}}],["async",{"_index":877,"title":{},"body":{"index.html":{}}}],["at(param",{"_index":606,"title":{},"body":{"classes/RequestProvider.html":{}}}],["authors",{"_index":939,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":632,"title":{},"body":{"classes/RequestProvider.html":{},"modules.html":{}}}],["awesome",{"_index":955,"title":{},"body":{"index.html":{}}}],["back",{"_index":894,"title":{},"body":{"index.html":{}}}],["base",{"_index":125,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/functions.html":{}}}],["baseurl",{"_index":127,"title":{},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"miscellaneous/functions.html":{}}}],["best",{"_index":956,"title":{},"body":{"index.html":{}}}],["big",{"_index":966,"title":{},"body":{"index.html":{}}}],["blob",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":595,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["boilerplate",{"_index":797,"title":{},"body":{"index.html":{}}}],["bonet",{"_index":907,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1039,"title":{},"body":{"overview.html":{}}}],["boring",{"_index":968,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1036,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["built",{"_index":817,"title":{},"body":{"index.html":{}}}],["business",{"_index":971,"title":{},"body":{"index.html":{}}}],["c",{"_index":974,"title":{},"body":{"license.html":{}}}],["call",{"_index":844,"title":{},"body":{"index.html":{}}}],["called",{"_index":895,"title":{},"body":{"index.html":{}}}],["care",{"_index":801,"title":{},"body":{"index.html":{}}}],["case",{"_index":626,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["catch(error",{"_index":535,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["catcherror",{"_index":543,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["catcherror(err",{"_index":509,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["change",{"_index":321,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["changes",{"_index":305,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":980,"title":{},"body":{"license.html":{}}}],["charset",{"_index":780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charsets",{"_index":367,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["claim",{"_index":1024,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"overview.html":{}}}],["client",{"_index":115,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["clone",{"_index":655,"title":{},"body":{"classes/RequestProvider.html":{}}}],["code",{"_index":798,"title":{},"body":{"index.html":{}}}],["collection",{"_index":201,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combinelatest",{"_index":391,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["communication",{"_index":83,"title":{},"body":{"injectables/DataService.html":{}}}],["communication.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["complete",{"_index":410,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["component",{"_index":863,"title":{},"body":{"index.html":{}}}],["concentrate",{"_index":970,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1002,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":934,"title":{},"body":{"index.html":{}}}],["config",{"_index":475,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{}}}],["configservice",{"_index":495,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["configuaration.service",{"_index":156,"title":{},"body":{"injectables/DataService.html":{}}}],["configuration",{"_index":117,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"index.html":{}}}],["configurationservice",{"_index":107,"title":{},"body":{"injectables/DataService.html":{}}}],["configurationservice.configuration.datamapper",{"_index":174,"title":{},"body":{"injectables/DataService.html":{}}}],["connection",{"_index":1033,"title":{},"body":{"license.html":{}}}],["const",{"_index":306,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["constructed",{"_index":640,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["constructor(@inject('ngrxdataconfig",{"_index":491,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["constructor(actions",{"_index":494,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["constructor(config",{"_index":473,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["constructor(entities",{"_index":70,"title":{},"body":{"classes/AddMany.html":{},"classes/UpdateMany.html":{}}}],["constructor(entity",{"_index":20,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/Update.html":{}}}],["constructor(errors",{"_index":576,"title":{},"body":{"classes/RequestError.html":{}}}],["constructor(http",{"_index":105,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(id",{"_index":215,"title":{},"body":{"classes/DeleteEntityFromState.html":{},"classes/SelectEntity.html":{}}}],["constructor(ids",{"_index":220,"title":{},"body":{"classes/DeleteMany.html":{}}}],["constructor(injector",{"_index":574,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["constructor(name",{"_index":461,"title":{},"body":{"classes/NameValue.html":{}}}],["constructor(private",{"_index":166,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataEffects.html":{},"index.html":{}}}],["constructor(provideruid",{"_index":453,"title":{},"body":{"classes/MakeRequest.html":{},"classes/RequestSuccess.html":{}}}],["constructor(public",{"_index":237,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["constructor(route",{"_index":596,"title":{},"body":{"classes/RequestProvider.html":{}}}],["constructor(source",{"_index":385,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["constructor(uniquename",{"_index":73,"title":{},"body":{"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityState.html":{},"classes/EndRequest.html":{},"classes/SuccessMapping.html":{}}}],["constructor.decorator.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["consume",{"_index":861,"title":{},"body":{"index.html":{}}}],["containing",{"_index":130,"title":{},"body":{"injectables/DataService.html":{}}}],["contract",{"_index":1028,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":929,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":932,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":945,"title":{},"body":{"index.html":{}}}],["convert",{"_index":359,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["converter",{"_index":153,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"index.html":{}}}],["converter.ts",{"_index":352,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{}}}],["converter.ts:12",{"_index":439,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converter.ts:14",{"_index":366,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converter.ts:16",{"_index":438,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converter.ts:20",{"_index":365,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converter.ts:21",{"_index":437,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converter.ts:26",{"_index":358,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converter.ts:8",{"_index":440,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converter.ts:9",{"_index":370,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["converttodata",{"_index":353,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converttodata(obj",{"_index":357,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converttoobject",{"_index":354,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["converttoobject(data",{"_index":364,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["copies",{"_index":997,"title":{},"body":{"license.html":{}}}],["copy",{"_index":317,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"index.html":{},"license.html":{}}}],["copy[name",{"_index":319,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["copy[uniquename",{"_index":345,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["copyright",{"_index":973,"title":{},"body":{"license.html":{}}}],["core",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["correspondent",{"_index":898,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":682,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":110,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["createentityadapter",{"_index":294,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["createentitystate",{"_index":40,"title":{"classes/CreateEntityState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createfeatureselector('entitydb",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":961,"title":{},"body":{"index.html":{}}}],["crud",{"_index":825,"title":{},"body":{"index.html":{}}}],["crudactions",{"_index":530,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["custom",{"_index":814,"title":{},"body":{"index.html":{}}}],["customs",{"_index":415,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["damages",{"_index":1025,"title":{},"body":{"license.html":{}}}],["data",{"_index":7,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data(explained",{"_index":847,"title":{},"body":{"index.html":{}}}],["data.service",{"_index":539,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["data.service.ts",{"_index":80,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["data.service.ts:18",{"_index":134,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:19",{"_index":135,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:20",{"_index":133,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:21",{"_index":136,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:23",{"_index":138,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:24",{"_index":139,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:29",{"_index":141,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:34",{"_index":143,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:39",{"_index":145,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:44",{"_index":109,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service.ts:73",{"_index":121,"title":{},"body":{"injectables/DataService.html":{}}}],["database",{"_index":39,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["dataentitiesdb",{"_index":41,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{}}}],["datamapper",{"_index":196,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["datamapper(data",{"_index":531,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["dataservice",{"_index":77,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["datawrapper",{"_index":186,"title":{"interfaces/DataWrapper.html":{}},"body":{"interfaces/DataWrapper.html":{},"coverage.html":{}}}],["db",{"_index":641,"title":{},"body":{"classes/RequestProvider.html":{}}}],["dbactions",{"_index":66,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"interfaces/IDataMapper.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["dbactions.dbactions",{"_index":351,"title":{},"body":{"interfaces/IDataMapper.html":{}}}],["dbname",{"_index":466,"title":{},"body":{"interfaces/NgrxDataConfiguration.html":{}}}],["dbstate",{"_index":207,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{},"miscellaneous/functions.html":{}}}],["deafaultrequestformat",{"_index":97,"title":{},"body":{"injectables/DataService.html":{},"interfaces/NgrxDataConfiguration.html":{},"index.html":{}}}],["deafaultresponseformats",{"_index":98,"title":{},"body":{"injectables/DataService.html":{},"interfaces/NgrxDataConfiguration.html":{},"index.html":{}}}],["deal",{"_index":986,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1034,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":566,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["decorators",{"_index":515,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["default",{"_index":29,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultmapper",{"_index":173,"title":{},"body":{"injectables/DataService.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["delete",{"_index":103,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deleteall",{"_index":47,"title":{"classes/DeleteAll.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["deleteallentitystates",{"_index":43,"title":{"classes/DeleteAllEntityStates.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteallentitystates(state",{"_index":260,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["deleteentityfromstate",{"_index":46,"title":{"classes/DeleteEntityFromState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["deleteentitystate",{"_index":42,"title":{"classes/DeleteEntityState.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["deleteentitystate(name",{"_index":262,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["deletemany",{"_index":48,"title":{"classes/DeleteMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["deleterequest",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deleterequest(http",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deleterequestprovider",{"_index":470,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["deleterequestprovider(uuid",{"_index":476,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["demo",{"_index":829,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":731,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":81,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/NameValue.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":933,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["distribute",{"_index":993,"title":{},"body":{"license.html":{}}}],["document",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":683,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["down",{"_index":848,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":338,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["e.id",{"_index":337,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["each",{"_index":433,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["easy",{"_index":803,"title":{},"body":{"index.html":{}}}],["effect",{"_index":516,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["effects",{"_index":963,"title":{},"body":{"index.html":{}}}],["effectsmodule",{"_index":563,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["effectsmodule.forroot([ngrxdataeffects",{"_index":569,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["encodeuri(url",{"_index":653,"title":{},"body":{"classes/RequestProvider.html":{}}}],["end",{"_index":958,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["endrequest",{"_index":223,"title":{"classes/EndRequest.html":{}},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["entities",{"_index":56,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["entity",{"_index":15,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entity.id",{"_index":335,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter",{"_index":307,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityadapter.addall(entities",{"_index":330,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.addmany(entities",{"_index":329,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.addone(entity",{"_index":328,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.getinitialstate",{"_index":320,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.getselectors",{"_index":312,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"miscellaneous/variables.html":{}}}],["entityadapter.removeall(es",{"_index":333,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.removemany(ids",{"_index":332,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.removeone(id",{"_index":331,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.updatemany(entities.map(e=>{return{id",{"_index":336,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.updateone",{"_index":334,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.upsertmany(entities",{"_index":340,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityadapter.upsertone(entity",{"_index":339,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entityarraymapper",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["entityarraymapper(data",{"_index":205,"title":{},"body":{"interfaces/DataWrapper.html":{},"miscellaneous/functions.html":{}}}],["entityservice",{"_index":717,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["entitystate",{"_index":287,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddall",{"_index":243,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddall(entities",{"_index":264,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddmany",{"_index":244,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddmany(entities",{"_index":266,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateaddone",{"_index":245,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateaddone(entity",{"_index":268,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystatecollectionadapter",{"_index":239,"title":{"classes/EntityStateCollectionAdapter.html":{}},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitystateremoveall",{"_index":246,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremoveall(uniquename",{"_index":270,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateremovemany",{"_index":247,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremovemany(ids",{"_index":272,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateremoveone",{"_index":248,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateremoveone(id",{"_index":274,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystatescollection",{"_index":198,"title":{"interfaces/EntityStatesCollection.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["entitystateupdatemany",{"_index":249,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupdatemany(entities",{"_index":276,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupdateone",{"_index":250,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupdateone(entity",{"_index":278,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupsertmany",{"_index":251,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupsertmany(entities",{"_index":280,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["entitystateupsertone",{"_index":252,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["entitystateupsertone(entity",{"_index":282,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["enum",{"_index":35,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["enumerations",{"_index":757,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":408,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["errors",{"_index":235,"title":{},"body":{"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":327,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["etc",{"_index":964,"title":{},"body":{"index.html":{}}}],["event",{"_index":1021,"title":{},"body":{"license.html":{}}}],["ex",{"_index":851,"title":{},"body":{"index.html":{}}}],["example",{"_index":418,"title":{},"body":{"classes/ImmutableObservable.html":{},"index.html":{}}}],["exist",{"_index":314,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["expecting",{"_index":917,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["exports",{"_index":571,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["express",{"_index":1012,"title":{},"body":{"license.html":{}}}],["extendedentitystate",{"_index":288,"title":{"interfaces/ExtendedEntityState.html":{}},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendedentitystate)=>extendedentitystate",{"_index":341,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["extends",{"_index":297,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"index.html":{}}}],["extern",{"_index":84,"title":{},"body":{"injectables/DataService.html":{}}}],["external",{"_index":299,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"index.html":{}}}],["extractcharset",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractcharset(charset",{"_index":779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":397,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":985,"title":{},"body":{"license.html":{}}}],["filtering",{"_index":822,"title":{},"body":{"index.html":{}}}],["first",{"_index":836,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1017,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":90,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["follow",{"_index":827,"title":{},"body":{"index.html":{}}}],["following",{"_index":1001,"title":{},"body":{"license.html":{}}}],["for(let",{"_index":434,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["format",{"_index":369,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["format/format",{"_index":152,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["format/json",{"_index":436,"title":{},"body":{"classes/JsonFormatConverter.html":{},"coverage.html":{}}}],["format/text",{"_index":676,"title":{},"body":{"classes/TextFormatConverter.html":{},"coverage.html":{}}}],["format/tools.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdatatype",{"_index":372,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"miscellaneous/enumerations.html":{}}}],["formats",{"_index":89,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["formatsacepted",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forroot",{"_index":552,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"index.html":{}}}],["forroot(config",{"_index":553,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["free",{"_index":979,"title":{},"body":{"license.html":{}}}],["func",{"_index":291,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["func(entitystate",{"_index":344,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["function",{"_index":204,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"coverage.html":{},"index.html":{}}}],["functionalities",{"_index":804,"title":{},"body":{"index.html":{}}}],["functions",{"_index":431,"title":{"miscellaneous/functions.html":{}},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnished",{"_index":1000,"title":{},"body":{"license.html":{}}}],["generated",{"_index":637,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getbody",{"_index":630,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getcharset",{"_index":355,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["getconfiguration",{"_index":484,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getdatamapper",{"_index":633,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getdb",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdelete",{"_index":144,"title":{},"body":{"injectables/DataService.html":{}}}],["getget",{"_index":140,"title":{},"body":{"injectables/DataService.html":{}}}],["getinitialstate",{"_index":253,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["getmediatype",{"_index":356,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["getpost",{"_index":142,"title":{},"body":{"injectables/DataService.html":{}}}],["getput",{"_index":146,"title":{},"body":{"injectables/DataService.html":{}}}],["getrequest",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrequest(http",{"_index":781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrequestformat",{"_index":624,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getrequestprovider",{"_index":471,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getrequestprovider(uuid",{"_index":479,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["getrequesttype",{"_index":627,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getresponseformats",{"_index":621,"title":{},"body":{"classes/RequestProvider.html":{}}}],["getting",{"_index":792,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["geturl",{"_index":635,"title":{},"body":{"classes/RequestProvider.html":{}}}],["given",{"_index":124,"title":{},"body":{"injectables/DataService.html":{}}}],["granted",{"_index":978,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1035,"title":{},"body":{"modules.html":{}}}],["guardiola",{"_index":909,"title":{},"body":{"index.html":{}}}],["guide",{"_index":900,"title":{},"body":{"index.html":{}}}],["handle",{"_index":967,"title":{},"body":{"index.html":{}}}],["help",{"_index":318,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["hereby",{"_index":977,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1022,"title":{},"body":{"license.html":{}}}],["ht",{"_index":147,"title":{},"body":{"injectables/DataService.html":{}}}],["html",{"_index":879,"title":{},"body":{"index.html":{}}}],["http",{"_index":114,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http/http",{"_index":150,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/EndRequest.html":{},"interfaces/IDataMapper.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["http/request",{"_index":148,"title":{},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["http/response",{"_index":373,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["httpclient",{"_index":106,"title":{},"body":{"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":565,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["httpmethod",{"_index":149,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/EndRequest.html":{},"interfaces/IDataMapper.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"miscellaneous/enumerations.html":{}}}],["httpmethod.delete",{"_index":181,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.get",{"_index":178,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.post",{"_index":180,"title":{},"body":{"injectables/DataService.html":{}}}],["httpmethod.put",{"_index":182,"title":{},"body":{"injectables/DataService.html":{}}}],["httprequest",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://angularfirebase.com/lessons/custom",{"_index":417,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["https://my",{"_index":855,"title":{},"body":{"index.html":{}}}],["id",{"_index":58,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["idatamapper",{"_index":195,"title":{"interfaces/IDataMapper.html":{}},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["identifier",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":61,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["if(!entityadapter",{"_index":343,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(!next.lastvalue",{"_index":403,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(!state[name",{"_index":322,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(array.isarray(value",{"_index":423,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(state[name",{"_index":315,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["if(this.lastvalue",{"_index":412,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["if(typeof",{"_index":425,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["iformatconverter",{"_index":137,"title":{"interfaces/IFormatConverter.html":{}},"body":{"injectables/DataService.html":{},"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{}}}],["immutableobservable",{"_index":374,"title":{"classes/ImmutableObservable.html":{}},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"index.html":{}}}],["immutableobservable(explained",{"_index":875,"title":{},"body":{"index.html":{}}}],["immutableobservable(source",{"_index":420,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":10,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["implied",{"_index":1013,"title":{},"body":{"license.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["important",{"_index":511,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["imports",{"_index":568,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"index.html":{}}}],["include",{"_index":639,"title":{},"body":{"classes/RequestProvider.html":{}}}],["included",{"_index":1006,"title":{},"body":{"license.html":{}}}],["including",{"_index":988,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":192,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["initial",{"_index":285,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["initialize",{"_index":850,"title":{},"body":{"index.html":{}}}],["initialstate",{"_index":561,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":486,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{}},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"overview.html":{}}}],["injected",{"_index":807,"title":{},"body":{"index.html":{}}}],["injector",{"_index":558,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["injectrequestprovider",{"_index":472,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["injectrequestprovider(uuid",{"_index":481,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["inmutable",{"_index":379,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/variables.html":{}}}],["inspiration",{"_index":954,"title":{},"body":{"index.html":{}}}],["installed",{"_index":834,"title":{},"body":{"index.html":{}}}],["installing",{"_index":833,"title":{},"body":{"index.html":{}}}],["instance",{"_index":112,"title":{},"body":{"injectables/DataService.html":{}}}],["instructions",{"_index":828,"title":{},"body":{"index.html":{}}}],["insurance",{"_index":941,"title":{},"body":{"index.html":{},"license.html":{}}}],["interface",{"_index":185,"title":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{}},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"interfaces/NgrxDataConfiguration.html":{},"overview.html":{}}}],["isloading",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":422,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["javascript",{"_index":360,"title":{},"body":{"interfaces/IFormatConverter.html":{},"index.html":{}}}],["jay",{"_index":905,"title":{},"body":{"index.html":{}}}],["js",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":768,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.parse(str",{"_index":450,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["json.stringify(obj",{"_index":451,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["jsonformatconverter",{"_index":435,"title":{"classes/JsonFormatConverter.html":{}},"body":{"classes/JsonFormatConverter.html":{},"coverage.html":{},"index.html":{}}}],["key",{"_index":860,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1011,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":902,"title":{},"body":{"index.html":{}}}],["lastvalue",{"_index":383,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["legend",{"_index":1038,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":1026,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1023,"title":{},"body":{"license.html":{}}}],["lib",{"_index":840,"title":{},"body":{"index.html":{}}}],["lib.module.ts",{"_index":550,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib.module.ts:30",{"_index":554,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib/src/lib/data",{"_index":188,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/helpers/immutable",{"_index":375,"title":{},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/helpers/static",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/http/http",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["lib/src/lib/http/request",{"_index":578,"title":{},"body":{"classes/RequestProvider.html":{},"coverage.html":{}}}],["lib/src/lib/http/response",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/src/lib/models/configuration.ts",{"_index":465,"title":{},"body":{"interfaces/NgrxDataConfiguration.html":{},"coverage.html":{}}}],["lib/src/lib/models/name",{"_index":457,"title":{},"body":{"classes/NameValue.html":{},"coverage.html":{}}}],["lib/src/lib/ngrx",{"_index":549,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["lib/src/lib/services/configuaration.service.ts",{"_index":468,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"coverage.html":{}}}],["lib/src/lib/services/configuaration.service.ts:11",{"_index":483,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:16",{"_index":485,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:21",{"_index":482,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:26",{"_index":477,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:31",{"_index":480,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/configuaration.service.ts:34",{"_index":474,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["lib/src/lib/services/entity",{"_index":79,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["lib/src/lib/services/entity.service.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/state/all",{"_index":1045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/db",{"_index":8,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/effects.ts",{"_index":493,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["lib/src/lib/state/effects.ts:12",{"_index":497,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["lib/src/lib/state/effects.ts:18",{"_index":537,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["lib/src/lib/state/effects.ts:53",{"_index":517,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["lib/src/lib/state/entity",{"_index":240,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/src/lib/state/request",{"_index":224,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/src/lib/state/state.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":799,"title":{},"body":{"index.html":{}}}],["license",{"_index":948,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license.md",{"_index":952,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":949,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":989,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1014,"title":{},"body":{"license.html":{}}}],["list",{"_index":944,"title":{},"body":{"index.html":{}}}],["literal",{"_index":193,"title":{},"body":{"interfaces/DataWrapper.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["loadingtasks",{"_index":301,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["logic",{"_index":808,"title":{},"body":{"index.html":{}}}],["lot",{"_index":959,"title":{},"body":{"index.html":{}}}],["make",{"_index":122,"title":{},"body":{"injectables/DataService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makearraycopy",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makearraycopy(value",{"_index":424,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{}}}],["makeimmutable",{"_index":419,"title":{},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":100,"title":{"classes/MakeRequest.html":{}},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["makerequest(baseurl",{"_index":118,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequest(baseurl:string",{"_index":183,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequest(http",{"_index":782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makerequest(this.http",{"_index":184,"title":{},"body":{"injectables/DataService.html":{}}}],["makerequestaction",{"_index":500,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["makerequestaction.provideruid",{"_index":502,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["makerequestaction.uniquename",{"_index":503,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["makeshadowcopy",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makeshadowcopy(val",{"_index":406,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["makeshadowcopy(value",{"_index":421,"title":{},"body":{"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{}}}],["manage",{"_index":304,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":802,"title":{},"body":{"index.html":{}}}],["mantains",{"_index":378,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["map",{"_index":393,"title":{},"body":{"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["mapper",{"_index":172,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["mapper.ts",{"_index":191,"title":{},"body":{"interfaces/DataWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapper.ts:25",{"_index":194,"title":{},"body":{"interfaces/DataWrapper.html":{}}}],["mappers",{"_index":913,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":815,"title":{},"body":{"index.html":{}}}],["mapping/datamapper",{"_index":467,"title":{},"body":{"interfaces/NgrxDataConfiguration.html":{},"classes/RequestProvider.html":{}}}],["mapping/datamapper.ts",{"_index":347,"title":{},"body":{"interfaces/IDataMapper.html":{},"coverage.html":{}}}],["mapping/entity",{"_index":189,"title":{},"body":{"interfaces/DataWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["martini",{"_index":906,"title":{},"body":{"index.html":{}}}],["matching",{"_index":68,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":371,"title":{},"body":{"interfaces/IFormatConverter.html":{}}}],["merchantability",{"_index":1016,"title":{},"body":{"license.html":{}}}],["merge",{"_index":392,"title":{},"body":{"classes/ImmutableObservable.html":{},"license.html":{}}}],["merge(source.pipe(map(v",{"_index":396,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["mergemap",{"_index":542,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["mergemap(([action",{"_index":520,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["mergemap((action",{"_index":499,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["method",{"_index":151,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/EndRequest.html":{},"interfaces/IDataMapper.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"index.html":{}}}],["method.ts",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":99,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":756,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":951,"title":{},"body":{"index.html":{},"license.html":{}}}],["models/configuration",{"_index":487,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{}}}],["models/name",{"_index":638,"title":{},"body":{"classes/RequestProvider.html":{}}}],["modify",{"_index":991,"title":{},"body":{"license.html":{}}}],["module",{"_index":546,"title":{"modules/NgrxDataLibModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":548,"title":{"modules.html":{}},"body":{"modules/NgrxDataLibModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":555,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["muhamed",{"_index":908,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":88,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["mutation",{"_index":818,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namevalue",{"_index":456,"title":{"classes/NameValue.html":{}},"body":{"classes/NameValue.html":{},"classes/RequestProvider.html":{},"coverage.html":{}}}],["namevalue(name",{"_index":666,"title":{},"body":{"classes/RequestProvider.html":{}}}],["necesary",{"_index":849,"title":{},"body":{"index.html":{}}}],["needed",{"_index":167,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["new",{"_index":111,"title":{},"body":{"injectables/DataService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":402,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["next.val",{"_index":405,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["ngmodule",{"_index":556,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngoninit",{"_index":873,"title":{},"body":{"index.html":{}}}],["ngrx",{"_index":794,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":541,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":295,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":33,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"dependencies.html":{}}}],["ngrxdataconfig",{"_index":572,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngrxdataconfiguration",{"_index":464,"title":{"interfaces/NgrxDataConfiguration.html":{}},"body":{"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"coverage.html":{}}}],["ngrxdataconfigurationservice",{"_index":108,"title":{"injectables/NgrxDataConfigurationService.html":{}},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"coverage.html":{}}}],["ngrxdataeffects",{"_index":492,"title":{"injectables/NgrxDataEffects.html":{}},"body":{"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"coverage.html":{}}}],["ngrxdatalibmodule",{"_index":547,"title":{"modules/NgrxDataLibModule.html":{}},"body":{"modules/NgrxDataLibModule.html":{},"index.html":{},"modules.html":{}}}],["ngrxdatalibmodule.forroot",{"_index":845,"title":{},"body":{"index.html":{}}}],["ngrxdatalibmodule.injector",{"_index":575,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["ngrxdatalibmodule.reducer",{"_index":841,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1020,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1004,"title":{},"body":{"license.html":{}}}],["notify",{"_index":885,"title":{},"body":{"index.html":{}}}],["now",{"_index":923,"title":{},"body":{"index.html":{}}}],["null",{"_index":179,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{}}}],["number",{"_index":65,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["obj",{"_index":362,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["object",{"_index":361,"title":{},"body":{"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"index.html":{}}}],["object.keys(responsedata",{"_index":210,"title":{},"body":{"interfaces/DataWrapper.html":{}}}],["objval",{"_index":426,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable",{"_index":129,"title":{},"body":{"injectables/DataService.html":{},"classes/ImmutableObservable.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable.ts",{"_index":376,"title":{},"body":{"classes/ImmutableObservable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable.ts:10",{"_index":389,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable.ts:11",{"_index":386,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observable.ts:46",{"_index":390,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.complete",{"_index":411,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.error(error",{"_index":409,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["observer.next",{"_index":407,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["obtaining",{"_index":982,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":513,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["oftype",{"_index":540,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["ondestroy",{"_index":557,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["one",{"_index":668,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["ongetusers",{"_index":883,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":870,"title":{},"body":{"index.html":{}}}],["operations",{"_index":826,"title":{},"body":{"index.html":{}}}],["operators",{"_index":416,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":891,"title":{},"body":{"index.html":{}}}],["orginal",{"_index":382,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["otherwise",{"_index":1030,"title":{},"body":{"license.html":{}}}],["out",{"_index":1032,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":1037,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":730,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":460,"title":{},"body":{"classes/NameValue.html":{}}}],["param",{"_index":165,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/RequestProvider.html":{}}}],["parameter",{"_index":618,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":587,"title":{},"body":{"classes/RequestProvider.html":{}}}],["params.slice(0",{"_index":660,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parse",{"_index":623,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["parsedparams",{"_index":649,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parsedparams.join",{"_index":654,"title":{},"body":{"classes/RequestProvider.html":{}}}],["parsedparams.push([v.name",{"_index":651,"title":{},"body":{"classes/RequestProvider.html":{}}}],["part",{"_index":969,"title":{},"body":{"index.html":{}}}],["participated",{"_index":946,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1018,"title":{},"body":{"license.html":{}}}],["passed",{"_index":428,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["paste",{"_index":960,"title":{},"body":{"index.html":{}}}],["path",{"_index":608,"title":{},"body":{"classes/RequestProvider.html":{}}}],["permission",{"_index":976,"title":{},"body":{"license.html":{}}}],["permit",{"_index":998,"title":{},"body":{"license.html":{}}}],["person",{"_index":981,"title":{},"body":{"license.html":{}}}],["persons",{"_index":999,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":878,"title":{},"body":{"index.html":{}}}],["pipe(mergemap(response",{"_index":506,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["please",{"_index":930,"title":{},"body":{"index.html":{}}}],["points",{"_index":177,"title":{},"body":{"injectables/DataService.html":{}}}],["porfirio",{"_index":904,"title":{},"body":{"index.html":{}}}],["portions",{"_index":1008,"title":{},"body":{"license.html":{}}}],["posible",{"_index":925,"title":{},"body":{"index.html":{}}}],["possible",{"_index":912,"title":{},"body":{"index.html":{}}}],["post",{"_index":102,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["postrequest",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["postrequest(http",{"_index":784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["posts",{"_index":919,"title":{},"body":{"index.html":{}}}],["postsarraymapper",{"_index":924,"title":{},"body":{"index.html":{}}}],["postsarraymapper(data",{"_index":920,"title":{},"body":{"index.html":{}}}],["practices",{"_index":957,"title":{},"body":{"index.html":{}}}],["predictable",{"_index":813,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":831,"title":{},"body":{"index.html":{}}}],["private",{"_index":92,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{}}}],["prject",{"_index":830,"title":{},"body":{"index.html":{}}}],["process",{"_index":935,"title":{},"body":{"index.html":{}}}],["processentitystate",{"_index":254,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["processentitystate(func",{"_index":286,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["project",{"_index":947,"title":{},"body":{"index.html":{}}}],["projects/.../all",{"_index":1044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../db",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../entity",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../entity.service.ts",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../http",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../immutable",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../request",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../response",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../state.ts",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../static",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tools.ts",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngrx",{"_index":6,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["property",{"_index":349,"title":{},"body":{"interfaces/IDataMapper.html":{},"index.html":{}}}],["protection",{"_index":819,"title":{},"body":{"index.html":{}}}],["protocol",{"_index":890,"title":{},"body":{"index.html":{}}}],["provide",{"_index":82,"title":{},"body":{"injectables/DataService.html":{},"modules/NgrxDataLibModule.html":{},"index.html":{}}}],["provided",{"_index":1009,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":158,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"index.html":{}}}],["provider",{"_index":119,"title":{},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"miscellaneous/functions.html":{}}}],["provider.datamapper",{"_index":528,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["provider.requesttype",{"_index":527,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["provider.ts",{"_index":579,"title":{},"body":{"classes/RequestProvider.html":{},"coverage.html":{}}}],["provider.ts:114",{"_index":607,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:12",{"_index":605,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:123",{"_index":616,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:134",{"_index":610,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:144",{"_index":620,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:15",{"_index":604,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:156",{"_index":613,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:18",{"_index":598,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:21",{"_index":603,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:24",{"_index":601,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:27",{"_index":602,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:30",{"_index":600,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:33",{"_index":599,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:38",{"_index":622,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:46",{"_index":625,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:54",{"_index":628,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:61",{"_index":631,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:68",{"_index":634,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:76",{"_index":636,"title":{},"body":{"classes/RequestProvider.html":{}}}],["provider.ts:92",{"_index":597,"title":{},"body":{"classes/RequestProvider.html":{}}}],["providers",{"_index":567,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"overview.html":{}}}],["provideruid",{"_index":232,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{}}}],["providing",{"_index":86,"title":{},"body":{"injectables/DataService.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["publish",{"_index":992,"title":{},"body":{"license.html":{}}}],["pull",{"_index":937,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1019,"title":{},"body":{"license.html":{}}}],["put",{"_index":104,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["putrequest",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["putrequest(http",{"_index":785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":617,"title":{},"body":{"classes/RequestProvider.html":{}}}],["reactive",{"_index":927,"title":{},"body":{"index.html":{}}}],["read",{"_index":931,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"index.html":{}}}],["ready",{"_index":835,"title":{},"body":{"index.html":{}}}],["really",{"_index":965,"title":{},"body":{"index.html":{}}}],["received",{"_index":897,"title":{},"body":{"index.html":{}}}],["recieved",{"_index":915,"title":{},"body":{"index.html":{}}}],["reducer",{"_index":560,"title":{},"body":{"modules/NgrxDataLibModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducers",{"_index":842,"title":{},"body":{"index.html":{}}}],["reference",{"_index":429,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["related",{"_index":298,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"index.html":{}}}],["represent",{"_index":580,"title":{},"body":{"classes/RequestProvider.html":{}}}],["represents",{"_index":459,"title":{},"body":{"classes/NameValue.html":{}}}],["request",{"_index":123,"title":{},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["requestactions",{"_index":238,"title":{},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"miscellaneous/typealiases.html":{}}}],["requestactions.makerequest",{"_index":501,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.requesterror([err",{"_index":514,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.requesterror([error",{"_index":536,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.requestsuccess",{"_index":522,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.requestsuccess(provideruid",{"_index":507,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestactions.successmapping(uniquename",{"_index":534,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requesterror",{"_index":229,"title":{"classes/RequestError.html":{}},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["requestformat",{"_index":594,"title":{},"body":{"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["requestprovider",{"_index":120,"title":{"classes/RequestProvider.html":{}},"body":{"injectables/DataService.html":{},"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{}}}],["requestprovider(this.route",{"_index":664,"title":{},"body":{"classes/RequestProvider.html":{}}}],["requestprovider(this.route.concat(param",{"_index":662,"title":{},"body":{"classes/RequestProvider.html":{}}}],["requestproviders",{"_index":469,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["requests",{"_index":175,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{},"index.html":{}}}],["requestsuccess",{"_index":228,"title":{"classes/RequestSuccess.html":{}},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["requestsuccessaction",{"_index":521,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestsuccessaction.data",{"_index":523,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requestsuccessaction.uniquename",{"_index":524,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["requesttype",{"_index":206,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["reset",{"_index":381,"title":{},"body":{"classes/ImmutableObservable.html":{},"overview.html":{}}}],["resetobservable",{"_index":384,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["resources",{"_index":85,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["response",{"_index":508,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"classes/RequestProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["responsedata",{"_index":208,"title":{},"body":{"interfaces/DataWrapper.html":{}}}],["responseformats",{"_index":593,"title":{},"body":{"classes/RequestProvider.html":{}}}],["responses",{"_index":846,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":987,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.push(new",{"_index":533,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["results",{"_index":69,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrive",{"_index":810,"title":{},"body":{"index.html":{}}}],["return",{"_index":160,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":131,"title":{},"body":{"injectables/DataService.html":{}}}],["returning",{"_index":893,"title":{},"body":{"index.html":{}}}],["returns",{"_index":128,"title":{},"body":{"injectables/DataService.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"injectables/NgrxDataConfigurationService.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestProvider.html":{},"classes/TextFormatConverter.html":{},"miscellaneous/functions.html":{}}}],["rich",{"_index":821,"title":{},"body":{"index.html":{}}}],["rights",{"_index":990,"title":{},"body":{"license.html":{}}}],["root",{"_index":159,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataConfigurationService.html":{},"index.html":{}}}],["route",{"_index":588,"title":{},"body":{"classes/RequestProvider.html":{}}}],["route.slice(0",{"_index":658,"title":{},"body":{"classes/RequestProvider.html":{}}}],["rules",{"_index":899,"title":{},"body":{"index.html":{}}}],["running",{"_index":300,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"index.html":{}}}],["rxjs",{"_index":154,"title":{},"body":{"injectables/DataService.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":394,"title":{},"body":{"classes/ImmutableObservable.html":{},"injectables/NgrxDataEffects.html":{}}}],["safe",{"_index":430,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["save",{"_index":884,"title":{},"body":{"index.html":{}}}],["see",{"_index":943,"title":{},"body":{"index.html":{}}}],["select",{"_index":874,"title":{},"body":{"index.html":{}}}],["selectall",{"_index":308,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selected",{"_index":302,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectedid",{"_index":303,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectentities",{"_index":309,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectentity",{"_index":51,"title":{"classes/SelectEntity.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectentityid",{"_index":255,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{}}}],["selectentityid(id",{"_index":292,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selectids",{"_index":310,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["selector",{"_index":864,"title":{},"body":{"index.html":{}}}],["selecttotal",{"_index":311,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["sell",{"_index":996,"title":{},"body":{"license.html":{}}}],["sending",{"_index":889,"title":{},"body":{"index.html":{}}}],["server",{"_index":132,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["server.typicode.com/insurance",{"_index":856,"title":{},"body":{"index.html":{}}}],["server/users",{"_index":858,"title":{},"body":{"index.html":{}}}],["service",{"_index":113,"title":{},"body":{"injectables/DataService.html":{},"injectables/NgrxDataEffects.html":{},"index.html":{}}}],["services",{"_index":806,"title":{},"body":{"index.html":{}}}],["services/configuaration.service",{"_index":545,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["services/entity",{"_index":538,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["set",{"_index":323,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/RequestProvider.html":{}}}],["shadow",{"_index":316,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/ImmutableObservable.html":{}}}],["shall",{"_index":1005,"title":{},"body":{"license.html":{}}}],["signature",{"_index":350,"title":{},"body":{"interfaces/IDataMapper.html":{},"index.html":{}}}],["simple",{"_index":914,"title":{},"body":{"index.html":{}}}],["single",{"_index":962,"title":{},"body":{"index.html":{}}}],["sirvi",{"_index":911,"title":{},"body":{"index.html":{}}}],["small",{"_index":928,"title":{},"body":{"index.html":{}}}],["software",{"_index":983,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":377,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["specific",{"_index":44,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{}}}],["start",{"_index":661,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["started",{"_index":793,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":176,"title":{},"body":{"injectables/DataService.html":{}}}],["state",{"_index":257,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"injectables/NgrxDataEffects.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.entitydb",{"_index":532,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["state.errors",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.loadingtasks",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.selectedid",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/db",{"_index":197,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{}}}],["state/effects",{"_index":564,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["state/entity",{"_index":199,"title":{},"body":{"interfaces/DataWrapper.html":{},"interfaces/IDataMapper.html":{}}}],["state/state",{"_index":562,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["state[uniquename",{"_index":342,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["statements",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":200,"title":{},"body":{"interfaces/DataWrapper.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":551,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["staticconstructed",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["staticconstructed(target",{"_index":787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":496,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"index.html":{}}}],["storemodule",{"_index":559,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["storemodule.forfeature('entitydb",{"_index":570,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["storemodule.forroot(ngrxdatalibmodule.reducer",{"_index":843,"title":{},"body":{"index.html":{}}}],["str",{"_index":447,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stringtouint",{"_index":442,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringtouint(str).buffer",{"_index":452,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["stringtouint(string",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structure",{"_index":296,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["styleurls",{"_index":867,"title":{},"body":{"index.html":{}}}],["subject",{"_index":388,"title":{},"body":{"classes/ImmutableObservable.html":{},"license.html":{}}}],["sublicense",{"_index":994,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":936,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":401,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["subscribing",{"_index":876,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":1007,"title":{},"body":{"license.html":{}}}],["successmapping",{"_index":230,"title":{"classes/SuccessMapping.html":{}},"body":{"classes/EndRequest.html":{},"classes/MakeRequest.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SuccessMapping.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":859,"title":{},"body":{"index.html":{}}}],["super('users",{"_index":854,"title":{},"body":{"index.html":{}}}],["super((observer",{"_index":395,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["support",{"_index":87,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["supported",{"_index":368,"title":{},"body":{"interfaces/IFormatConverter.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["swager",{"_index":903,"title":{},"body":{"index.html":{}}}],["system",{"_index":823,"title":{},"body":{"index.html":{}}}],["t",{"_index":387,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["table",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":800,"title":{},"body":{"index.html":{}}}],["target",{"_index":788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["team",{"_index":940,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":942,"title":{},"body":{"index.html":{},"license.html":{}}}],["technologies/fake",{"_index":857,"title":{},"body":{"index.html":{}}}],["template",{"_index":880,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":865,"title":{},"body":{"index.html":{}}}],["testing",{"_index":887,"title":{},"body":{"index.html":{}}}],["text",{"_index":769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text/plain",{"_index":677,"title":{},"body":{"classes/TextFormatConverter.html":{}}}],["textformatconverter",{"_index":675,"title":{"classes/TextFormatConverter.html":{}},"body":{"classes/TextFormatConverter.html":{},"coverage.html":{}}}],["this._body",{"_index":645,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._datamapper",{"_index":646,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._deleteprovider",{"_index":163,"title":{},"body":{"injectables/DataService.html":{}}}],["this._getprovider",{"_index":161,"title":{},"body":{"injectables/DataService.html":{}}}],["this._postprovider",{"_index":162,"title":{},"body":{"injectables/DataService.html":{}}}],["this._putprovider",{"_index":164,"title":{},"body":{"injectables/DataService.html":{}}}],["this._requestformat",{"_index":643,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._requesttype",{"_index":644,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._responseformats",{"_index":642,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this._url",{"_index":647,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.actions$.pipe(oftype(requestactions.actiontypes.makerequest",{"_index":498,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.actions$.pipe(oftype(requestactions.actiontypes.requestsuccess",{"_index":518,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.config",{"_index":489,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["this.configservice.deleterequestprovider(provideruid",{"_index":512,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.deleterequestprovider(requestsuccessaction.provideruid",{"_index":526,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.getrequestprovider(provideruid",{"_index":504,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configservice.getrequestprovider(requestsuccessaction.provideruid",{"_index":525,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.configurationservice.configuration.deafaultrequestformat",{"_index":169,"title":{},"body":{"injectables/DataService.html":{}}}],["this.configurationservice.configuration.deafaultresponseformats",{"_index":171,"title":{},"body":{"injectables/DataService.html":{}}}],["this.dataservice.makerequest(makerequestaction.baseurl",{"_index":505,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["this.deafaultrequestformat",{"_index":168,"title":{},"body":{"injectables/DataService.html":{}}}],["this.deafaultresponseformats",{"_index":170,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lastvalue",{"_index":404,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.params",{"_index":659,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.params.concat(new",{"_index":665,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.params.foreach((v",{"_index":650,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.processentitystate",{"_index":326,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["this.requestformat",{"_index":670,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.requestproviders[uuid",{"_index":490,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["this.resetobservable",{"_index":400,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.resetobservable$.next({lastvalue",{"_index":413,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["this.route",{"_index":657,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.route.join",{"_index":648,"title":{},"body":{"classes/RequestProvider.html":{}}}],["this.users",{"_index":881,"title":{},"body":{"index.html":{}}}],["this.userservice.dispatchget",{"_index":886,"title":{},"body":{"index.html":{}}}],["this.userservice.select",{"_index":882,"title":{},"body":{"index.html":{}}}],["those",{"_index":918,"title":{},"body":{"index.html":{}}}],["throw",{"_index":663,"title":{},"body":{"classes/RequestProvider.html":{}}}],["time",{"_index":669,"title":{},"body":{"classes/RequestProvider.html":{}}}],["title",{"_index":871,"title":{},"body":{"index.html":{}}}],["todo",{"_index":832,"title":{},"body":{"index.html":{}}}],["tools",{"_index":443,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["tort",{"_index":1029,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["translate",{"_index":896,"title":{},"body":{"index.html":{}}}],["true",{"_index":414,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["try",{"_index":529,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["tslib",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"injectables/DataService.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IFormatConverter.html":{},"classes/ImmutableObservable.html":{},"classes/JsonFormatConverter.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"interfaces/NgrxDataConfiguration.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"modules/NgrxDataLibModule.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/TextFormatConverter.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1041,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/uuid",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":839,"title":{},"body":{"index.html":{}}}],["uid",{"_index":488,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{}}}],["uint8array(data",{"_index":449,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["uintarray",{"_index":791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uinttostring",{"_index":441,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uinttostring(new",{"_index":448,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["uinttostring(uintarray",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unamed",{"_index":348,"title":{},"body":{"interfaces/IDataMapper.html":{}}}],["undefine",{"_index":324,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{}}}],["undefined",{"_index":325,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"injectables/NgrxDataConfigurationService.html":{}}}],["under",{"_index":950,"title":{},"body":{"index.html":{}}}],["understand",{"_index":892,"title":{},"body":{"index.html":{}}}],["union",{"_index":916,"title":{},"body":{"index.html":{}}}],["unique",{"_index":259,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"index.html":{}}}],["uniquename",{"_index":18,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"interfaces/IDataMapper.html":{},"classes/MakeRequest.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["uniquenames",{"_index":209,"title":{},"body":{"interfaces/DataWrapper.html":{}}}],["update",{"_index":49,"title":{"classes/Update.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EntityStateCollectionAdapter.html":{},"interfaces/EntityStatesCollection.html":{},"interfaces/ExtendedEntityState.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["updatemany",{"_index":50,"title":{"classes/UpdateMany.html":{}},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"interfaces/DataWrapper.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/SelectEntity.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":126,"title":{},"body":{"injectables/DataService.html":{},"classes/RequestProvider.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":116,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":614,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["user",{"_index":888,"title":{},"body":{"index.html":{}}}],["user.service.ts",{"_index":852,"title":{},"body":{"index.html":{}}}],["users",{"_index":872,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":853,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":573,"title":{},"body":{"modules/NgrxDataLibModule.html":{}}}],["using",{"_index":783,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["utf",{"_index":445,"title":{},"body":{"classes/JsonFormatConverter.html":{},"classes/TextFormatConverter.html":{}}}],["uuid",{"_index":478,"title":{},"body":{"injectables/NgrxDataConfigurationService.html":{},"dependencies.html":{}}}],["v",{"_index":399,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["v.value].join",{"_index":652,"title":{},"body":{"classes/RequestProvider.html":{}}}],["val",{"_index":398,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["valid",{"_index":611,"title":{},"body":{"classes/RequestProvider.html":{},"index.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AddEntityToState.html":{},"classes/AddMany.html":{},"classes/CreateEntityState.html":{},"classes/DeleteAll.html":{},"classes/DeleteAllEntityStates.html":{},"classes/DeleteEntityFromState.html":{},"classes/DeleteEntityState.html":{},"classes/DeleteMany.html":{},"classes/EndRequest.html":{},"classes/ImmutableObservable.html":{},"classes/MakeRequest.html":{},"classes/NameValue.html":{},"injectables/NgrxDataConfigurationService.html":{},"injectables/NgrxDataEffects.html":{},"classes/RequestError.html":{},"classes/RequestProvider.html":{},"classes/RequestSuccess.html":{},"classes/SelectEntity.html":{},"classes/SuccessMapping.html":{},"classes/Update.html":{},"classes/UpdateMany.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":458,"title":{},"body":{"classes/NameValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":462,"title":{},"body":{"classes/NameValue.html":{}}}],["value.ts:6",{"_index":463,"title":{},"body":{"classes/NameValue.html":{}}}],["values",{"_index":427,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["variable",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1046,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versioning",{"_index":938,"title":{},"body":{"index.html":{}}}],["very",{"_index":510,"title":{},"body":{"injectables/NgrxDataEffects.html":{},"index.html":{}}}],["void",{"_index":289,"title":{},"body":{"classes/EntityStateCollectionAdapter.html":{},"classes/ImmutableObservable.html":{},"injectables/NgrxDataConfigurationService.html":{},"index.html":{}}}],["warranties",{"_index":1015,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1010,"title":{},"body":{"license.html":{}}}],["well",{"_index":432,"title":{},"body":{"classes/ImmutableObservable.html":{}}}],["whether",{"_index":1027,"title":{},"body":{"license.html":{}}}],["withbody",{"_index":589,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withbody(body",{"_index":609,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withdatamapper",{"_index":590,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withdatamapper(mapper",{"_index":612,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withlatestfrom",{"_index":544,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["withlatestfrom(this.store",{"_index":519,"title":{},"body":{"injectables/NgrxDataEffects.html":{}}}],["without",{"_index":795,"title":{},"body":{"index.html":{},"license.html":{}}}],["withparam",{"_index":591,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withparam(name",{"_index":615,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withrequestformat",{"_index":592,"title":{},"body":{"classes/RequestProvider.html":{}}}],["withrequestformat(format",{"_index":619,"title":{},"body":{"classes/RequestProvider.html":{}}}],["writing",{"_index":796,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1040,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddEntityToState.html":{"url":"classes/AddEntityToState.html","title":"class - AddEntityToState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntityToState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.AddEntityToState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany.html":{"url":"classes/AddMany.html","title":"class - AddMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entities: any[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entities\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.AddMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEntityState.html":{"url":"classes/CreateEntityState.html","title":"class - CreateEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.CreateEntityState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/services/entity-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide communication with extern resources providing support for multiple formats and a fluent api.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _deleteProvider\n                            \n                            \n                                    Private\n                                _getProvider\n                            \n                            \n                                    Private\n                                _postProvider\n                            \n                            \n                                    Private\n                                _putProvider\n                            \n                            \n                                    Private\n                                deafaultRequestFormat\n                            \n                            \n                                    Private\n                                deafaultResponseFormats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    GET\n                                \n                                \n                                    POST\n                                \n                                \n                                    DELETE\n                                \n                                \n                                    PUT\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configurationService: NgrxDataConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:44\n                            \n                        \n\n                \n                    \n                            create a new instance of data service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client to use.\n\n                                                        \n                                                \n                                                \n                                                        configurationService\n                                                  \n                                                        \n                                                                        NgrxDataConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the configuration service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \nmakeRequest(baseUrl: string, provider: RequestProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:73\n                \n            \n\n\n            \n                \n                    make a http request with a given base url and a request provider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base url of the request.\n\n                                    \n                                \n                                \n                                    provider\n                                    \n                                                RequestProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request provider.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        returns an observable containing the data returned by the server.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _deleteProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _postProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _putProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deafaultRequestFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deafaultResponseFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        GET\n                    \n                \n\n                \n                    \n                        getGET()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:29\n                                \n                            \n                    \n                        \n                                get the get request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        POST\n                    \n                \n\n                \n                    \n                        getPOST()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:34\n                                \n                            \n                    \n                        \n                                get the post request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        DELETE\n                    \n                \n\n                \n                    \n                        getDELETE()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:39\n                                \n                            \n                    \n                        \n                                get the delete request provider.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        PUT\n                    \n                \n\n                \n                    \n                        getPUT()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/entity-data.service.ts:44\n                                \n                            \n                    \n                        \n                                get ht put request provider.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\nimport { IFormatConverter } from '../data-format/format-converter';\nimport { Observable } from 'rxjs';\nimport { makeRequest } from '../http/http-communication';\nimport { HttpClient } from '@angular/common/http';\nimport { NgrxDataConfigurationService } from './configuaration.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Provide communication with extern resources providing support for multiple formats and a fluent api.\n */\n@Injectable({\n   providedIn: 'root'\n})\nexport class DataService\n{\n    private _getProvider : RequestProvider;\n    private _postProvider : RequestProvider;\n    private _deleteProvider : RequestProvider;\n    private _putProvider : RequestProvider;\n\n    private deafaultRequestFormat: IFormatConverter;\n    private deafaultResponseFormats: IFormatConverter[];\n\n    /**\n     * get the get request provider.\n     */\n    get GET(){ return this._getProvider; }\n    \n    /**\n     * get the post request provider.\n     */\n    get POST(){ return this._postProvider; } \n\n    /**\n     * get the delete request provider.\n     */\n    get DELETE(){ return this._deleteProvider; } \n\n    /**\n     * get ht put request provider.\n     */\n    get PUT(){ return this._putProvider; } \n        \n    /**\n     * create a new instance of data service.\n     * @param http the http client to use.\n     * @param configurationService the configuration service.\n     */\n    constructor(private http: HttpClient, private configurationService: NgrxDataConfigurationService)\n    {\n       //Get the configuration parameters needed\n       this.deafaultRequestFormat = this.configurationService.configuration.deafaultRequestFormat;\n       this.deafaultResponseFormats = this.configurationService.configuration.deafaultResponseFormats;\n\n       //get the default data mapper\n       let defaultMapper = configurationService.configuration.dataMapper;\n\n       //create the requests starting points\n       this._getProvider = new RequestProvider([], [], HttpMethod.get, null, this.deafaultResponseFormats, null, defaultMapper);\n       this._postProvider = new RequestProvider([], [], HttpMethod.post, null, this.deafaultResponseFormats, this.deafaultRequestFormat, defaultMapper);\n       this._deleteProvider = new RequestProvider([], [], HttpMethod.delete, null, this.deafaultResponseFormats, null, defaultMapper);\n       this._putProvider = new RequestProvider([], [], HttpMethod.put, null, this.deafaultResponseFormats, this.deafaultRequestFormat, defaultMapper);           \n    }\n\n    /**\n     * make a http request with a given base url and a request provider.\n     * @param baseUrl the base url of the request.\n     * @param provider the request provider.\n     * @returns returns an observable containing the data returned by the server.\n     */\n    makeRequest(baseUrl:string, provider: RequestProvider) : Observable\n    {\n       let result = makeRequest(this.http, baseUrl, provider);\n       return result;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataWrapper.html":{"url":"interfaces/DataWrapper.html","title":"interface - DataWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [uniqueName: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts:25\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { IDataMapper } from './datamapper';\nimport { DBActions, UpdateMany, AddMany, DeleteMany } from '../state/db-actions';\nimport { HttpMethod } from '../http/http-method';\nimport { EntityStatesCollection } from '../state/entity-states-collection-adapter';\n\ninterface DataWrapper {\n    [uniqueName: string]: { add: any[], update: any[], delete: string[] }\n}\n\nexport function entityArrayMapper(data: any, uniqueName: string, requestType: HttpMethod, dbState: EntityStatesCollection): DBActions[] {\n\n    let result: DBActions[] = [];\n\n    let responseData = data as DataWrapper;\n    let uniqueNames = Object.keys(responseData);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAll.html":{"url":"classes/DeleteAll.html","title":"class - DeleteAll","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAll\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteAll\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAllEntityStates.html":{"url":"classes/DeleteAllEntityStates.html","title":"class - DeleteAllEntityStates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAllEntityStates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteAllEntityStates\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteEntityFromState.html":{"url":"classes/DeleteEntityFromState.html","title":"class - DeleteEntityFromState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteEntityFromState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteEntityFromState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteEntityState.html":{"url":"classes/DeleteEntityState.html","title":"class - DeleteEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteEntityState\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMany.html":{"url":"classes/DeleteMany.html","title":"class - DeleteMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ids\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ids: string[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ids\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ids\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DeleteMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndRequest.html":{"url":"classes/EndRequest.html","title":"class - EndRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.EndRequest\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError',\n    SuccessMapping = '[Request] SuccessMapping',\n    EndRequest = '[Request] EndRequest',\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public providerUid: string, public data: any, public uniqueName: string ){}\n}\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport class SuccessMapping implements Action\n{\n   readonly type = ActionTypes.SuccessMapping;   \n   constructor(public uniqueName: string){}\n}\n\nexport class EndRequest implements Action\n{\n   readonly type = ActionTypes.EndRequest;   \n   constructor(public uniqueName: string){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError |\nSuccessMapping |\nEndRequest\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityStateCollectionAdapter.html":{"url":"classes/EntityStateCollectionAdapter.html","title":"class - EntityStateCollectionAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityStateCollectionAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntityState\n                            \n                            \n                                deleteAllEntityStates\n                            \n                            \n                                deleteEntityState\n                            \n                            \n                                entityStateAddAll\n                            \n                            \n                                entityStateAddMany\n                            \n                            \n                                entityStateAddOne\n                            \n                            \n                                entityStateRemoveAll\n                            \n                            \n                                entityStateRemoveMany\n                            \n                            \n                                entityStateRemoveOne\n                            \n                            \n                                entityStateUpdateMany\n                            \n                            \n                                entityStateUpdateOne\n                            \n                            \n                                entityStateUpsertMany\n                            \n                            \n                                entityStateUpsertOne\n                            \n                            \n                                getInitialState\n                            \n                            \n                                    Private\n                                processEntityState\n                            \n                            \n                                selectEntityId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEntityState\n                        \n                        \n                    \n                \n            \n            \n                \naddEntityState(name: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:60\n                \n            \n\n\n            \n                \n                    add an entity state to the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the unique name of the entity state to add.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllEntityStates\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllEntityStates(state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:103\n                \n            \n\n\n            \n                \n                    delete all the entity states for the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEntityState\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEntityState(name: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:84\n                \n            \n\n\n            \n                \n                    delete entity state from the EntityStatesCollection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the unique name of the entity to delete.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the EntityStatesCollection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddAll\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateAddOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveAll\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveAll(uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateRemoveOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpdateMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpdateOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpsertMany\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityStateUpsertOne\n                        \n                        \n                    \n                \n            \n            \n                \nentityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:50\n                \n            \n\n\n            \n                \n                    return the initial state of the collection of entities\n\n\n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processEntityState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processEntityState(func: (entityState: ExtendedEntityState) => void, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectEntityId\n                        \n                        \n                    \n                \n            \n            \n                \nselectEntityId(id: number | string, uniqueName: string, state: EntityStatesCollection)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                EntityStatesCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    selectEntityId(id: number | string, uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return { ...es, selectedId: id };  \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityStatesCollection.html":{"url":"interfaces/EntityStatesCollection.html","title":"interface - EntityStatesCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityStatesCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n            \n                Description\n            \n            \n                Database structure.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        ExtendedEntityState\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts:7\n                            \n                        \n                \n                    \n                        The entity states by unique name\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    selectEntityId(id: number | string, uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return { ...es, selectedId: id };  \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedEntityState.html":{"url":"interfaces/ExtendedEntityState.html","title":"interface - ExtendedEntityState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendedEntityState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n        \n\n            \n                Description\n            \n            \n                entity state structure.\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        loadingTasks\n                                \n                                \n                                        selectedId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the errors related with this entity state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingTasks\n                                    \n                                \n                                \n                                    \n                                        loadingTasks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the number of external requests running.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                    \n                                \n                                \n                                    \n                                        selectedId:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id of the selected entity of this entity state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityState, Update } from '@ngrx/entity';\n\n/**\n * Database structure.\n */\nexport interface EntityStatesCollection\n{\n    /**\n     * The entity states by unique name\n     */\n   [name: string] : ExtendedEntityState;\n}\n\n/**\n * entity state structure.\n */\nexport interface ExtendedEntityState extends EntityState\n{\n    /**\n     * the errors related with this entity state.\n     */\n    errors: string[];\n    /**\n     * the number of external requests running.\n     */\n    loadingTasks: number;\n    /**\n     * id of the selected entity of this entity state\n     */\n    selectedId: string | number;\n}\n\n/**\n * the adapter to manage the entity changes.\n */\nconst entityAdapter = createEntityAdapter();\nexport const {\n    selectAll,\n    selectEntities,\n    selectIds,\n    selectTotal  \n  } = entityAdapter.getSelectors();\n    \n\nexport class EntityStateCollectionAdapter\n{   \n    /**\n     * return the initial state of the collection of entities\n     */ \n    getInitialState() : EntityStatesCollection\n    {\n        return {};                \n    }\n\n    /**\n     * add an entity state to the EntityStatesCollection.\n     * @param name the unique name of the entity state to add.\n     * @param state the EntityStatesCollection.\n     */\n    addEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entity state already exist no changes are needed\n        if(state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };\n       \n        //add the entity state with the help of the entity adapter\n        copy[name] = entityAdapter.getInitialState({\n            errors: [],\n            loadingTasks: 0,\n            selectedId: null\n        });\n\n       return copy;\n    }\n\n    /**\n     * delete entity state from the EntityStatesCollection.\n     * @param name the unique name of the entity to delete.\n     * @param state the EntityStatesCollection.\n     */\n    deleteEntityState(name: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        //if the entityState does not exist no change is needed.\n        if(!state[name])\n          return state;\n\n        //create a shadow copy\n        let copy = { ...state };  \n        \n        //set the entity state to undefine\n        copy[name] = undefined;\n\n        return copy;\n    }\n\n    /**\n     * delete all the entity states for the EntityStatesCollection.\n     * @param state the EntityStatesCollection.\n     */\n    deleteAllEntityStates(state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return {};\n    }\n\n\n    //actions for specific entity state----------------------------------------------------------------------------------------------------------\n\n    entityStateAddOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n       return this.processEntityState(\n           (es)=>{\n\n           return entityAdapter.addOne(entity, es);\n             \n       }\n       , uniqueName, state);\n    }\n\n    entityStateAddMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n            return entityAdapter.addMany(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateAddAll(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.addAll(entities, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveOne(id: string, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeOne(id, es); \n              \n        }\n        , uniqueName, state);\n    }   \n\n\n    entityStateRemoveMany(ids: string[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeMany(ids, es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateRemoveAll(uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.removeAll(es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateOne( { id: entity.id, changes: entity } , es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpdateMany(entities: any[], uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n \n                return entityAdapter.updateMany(entities.map(e=>{return{id: e.id, changes: e}}), es); \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertOne(entity: any, uniqueName: string, state: EntityStatesCollection) : EntityStatesCollection\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertOne(entity, es);  \n              \n        }\n        , uniqueName, state);\n    }\n\n\n    entityStateUpsertMany(entities: any[], uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return entityAdapter.upsertMany(entities, es);   \n              \n        }\n        , uniqueName, state);\n    }\n\n    selectEntityId(id: number | string, uniqueName: string, state: EntityStatesCollection)\n    {\n        return this.processEntityState(\n            (es)=>{\n\n                return { ...es, selectedId: id };  \n              \n        }\n        , uniqueName, state);\n    }\n\n    private processEntityState(func: (entityState: ExtendedEntityState)=>ExtendedEntityState, uniqueName: string, state: EntityStatesCollection)\n    {\n        let entityState = state[uniqueName];\n        if(!entityAdapter)\n          return state;\n \n        entityState = func(entityState);\n          \n        let copy = {...state};\n        copy[uniqueName] = entityState;\n        return copy;\n    }\n\n    \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataMapper.html":{"url":"interfaces/IDataMapper.html","title":"interface - IDataMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-mapping/datamapper.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [data: any, uniqueName: string, requestType: HttpMethod, dbState: EntityStatesCollection]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :         DbActions.DBActions[]\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as DbActions from '../state/db-actions';\nimport { HttpMethod } from '../http/http-method';\nimport { EntityStatesCollection } from '../state/entity-states-collection-adapter';\n\nexport interface IDataMapper\n{\n    (data: any, uniqueName: string, requestType: HttpMethod, dbState: EntityStatesCollection) : DbActions.DBActions[];\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormatConverter.html":{"url":"interfaces/IFormatConverter.html","title":"interface - IFormatConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFormatConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-format/format-converter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    convertToData\n                                \n                                \n                                    convertToObject\n                                \n                                \n                                    getCharset\n                                \n                                \n                                    getMediaType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToData\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToData(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:26\n                \n            \n\n\n            \n                \n                    convert javascript object to data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the javascript object to convert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ArrayBuffer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToObject\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToObject(data: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:20\n                \n            \n\n\n            \n                \n                    convert the data to a javascript object. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data to convert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCharset\n                        \n                        \n                    \n                \n            \n            \n                \ngetCharset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:14\n                \n            \n\n\n            \n                \n                    return the charsets supported by this format converter.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMediaType\n                        \n                        \n                    \n                \n            \n            \n                \ngetMediaType()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/format-converter.ts:9\n                \n            \n\n\n            \n                \n                    return the media type supported by this format.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FormatDataType } from '../http/response-type';\n\n\nexport interface IFormatConverter\n{\n    /**\n     * return the media type supported by this format.\n     */\n    getMediaType(): string;\n\n    /**\n     * return the charsets supported by this format converter.\n     */\n    getCharset(): string;\n\n    /**\n     * convert the data to a javascript object. \n     * @param data the data to convert.\n     */\n    convertToObject(data: ArrayBuffer) : any;\n\n    /**\n     * convert javascript object to data.\n     * @param obj the javascript object to convert.\n     */\n    convertToData(obj: any) : ArrayBuffer;   \n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImmutableObservable.html":{"url":"classes/ImmutableObservable.html","title":"class - ImmutableObservable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImmutableObservable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n        \n\n            \n                Description\n            \n            \n                an special observable that mantains the data inmutable\nand you can always reset the data to the orginal value\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastValue\n                            \n                            \n                                    Private\n                                resetObservable$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: Observable)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetObservable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, combineLatest, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * an special observable that mantains the data inmutable\n * and you can always reset the data to the orginal value\n */\nexport class ImmutableObservable extends Observable\n{\n    private resetObservable$ : Subject;\n    private lastValue: T;\n\n    constructor(source: Observable)\n    {        \n        super((observer)=>{\n          \n           merge(source.pipe(map(v=> {return{ lastValue: false, val: v as T }} )), this.resetObservable$)\n           .subscribe(\n               (next)=>{\n                  \n                if(!next.lastValue)                \n                   this.lastValue = next.val;                \n                \n                let val = next.val;   \n                let copy = makeShadowCopy(val);\n                \n                //shadow copy of the value\n                observer.next( copy );\n               },\n               \n               (error)=>{\n                  observer.error(error);\n               },\n\n               //complete\n               ()=>{\n                  observer.complete();\n               }               \n           );\n\n       });\n\n       this.resetObservable$ = new Subject();\n    }\n    \n    reset() : void\n    {\n        if(this.lastValue)\n          this.resetObservable$.next({lastValue: true, val: this.lastValue});\n    }\n}\n\n//How to make customs operators https://angularfirebase.com/lessons/custom-rxjs-operators-by-example/\n/**\n * convert to an inmutable observable.\n */\nexport const makeImmutable = () => (source: Observable) => \n    {     \n       return new ImmutableObservable(source);\n    };\n\nfunction makeShadowCopy(value: any) : any\n{\n   //make copy of every item if it is array\n   if(Array.isArray(value))   \n      return makeArrayCopy(value as []);\n   \n   //make shadow copy of the object\n   if(typeof value == 'object')\n   {\n      let objVal = value as {};\n      return { ...objVal };\n   }\n   \n   //we can return string because they are inmutable.\n   //for values like number they are passed by value and not by reference, so is safe to return them.\n   //for functions just return the value because they are inmutable as well.\n   return value;\n}\n\nfunction makeArrayCopy(value: []) : any[]\n{\n   let result = [];\n\n   //for each item make a shadow copy\n   for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JsonFormatConverter.html":{"url":"classes/JsonFormatConverter.html","title":"class - JsonFormatConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JsonFormatConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IFormatConverter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToData\n                            \n                            \n                                convertToObject\n                            \n                            \n                                getCharset\n                            \n                            \n                                getMediaType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToData\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToData(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ArrayBuffer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToObject\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToObject(data: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCharset\n                        \n                        \n                    \n                \n            \n            \n                \ngetCharset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMediaType\n                        \n                        \n                    \n                \n            \n            \n                \ngetMediaType()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IFormatConverter } from './format-converter';\nimport { FormatDataType } from '../http/response-type';\nimport { uintToString, stringToUint } from './tools';\n\n\nexport class JsonFormatConverter implements IFormatConverter\n{\n    getMediaType(): string {\n        return 'application/json';\n    }\n\n    getCharset(): string {\n        return 'utf-8';\n    }\n\n    convertToObject(data: ArrayBuffer) : any {\n        let str = uintToString(new Uint8Array(data));\n        return JSON.parse(str);\n    }\n\n    convertToData(obj: any) : ArrayBuffer {\n        let str = JSON.stringify(obj);\n        return stringToUint(str).buffer as ArrayBuffer;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequest.html":{"url":"classes/MakeRequest.html","title":"class - MakeRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                providerUid\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providerUid: string, baseUrl: string, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providerUid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            providerUid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.MakeRequest\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError',\n    SuccessMapping = '[Request] SuccessMapping',\n    EndRequest = '[Request] EndRequest',\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public providerUid: string, public data: any, public uniqueName: string ){}\n}\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport class SuccessMapping implements Action\n{\n   readonly type = ActionTypes.SuccessMapping;   \n   constructor(public uniqueName: string){}\n}\n\nexport class EndRequest implements Action\n{\n   readonly type = ActionTypes.EndRequest;   \n   constructor(public uniqueName: string){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError |\nSuccessMapping |\nEndRequest\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NameValue.html":{"url":"classes/NameValue.html","title":"class - NameValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NameValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/models/name-value.ts\n        \n\n            \n                Description\n            \n            \n                represents a name = value pair.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/models/name-value.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NameValue { \n    constructor(public name: string, public value: string) { }\n}\n  \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgrxDataConfiguration.html":{"url":"interfaces/NgrxDataConfiguration.html","title":"interface - NgrxDataConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgrxDataConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/models/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataMapper\n                                \n                                \n                                            Optional\n                                        dbName\n                                \n                                \n                                        deafaultRequestFormat\n                                \n                                \n                                        deafaultResponseFormats\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataMapper\n                                    \n                                \n                                \n                                    \n                                        dataMapper:         IDataMapper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDataMapper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbName\n                                    \n                                \n                                \n                                    \n                                        dbName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deafaultRequestFormat\n                                    \n                                \n                                \n                                    \n                                        deafaultRequestFormat:         IFormatConverter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFormatConverter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deafaultResponseFormats\n                                    \n                                \n                                \n                                    \n                                        deafaultResponseFormats:         IFormatConverter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFormatConverter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormatConverter } from '../data-format/format-converter';\nimport { IDataMapper } from '../data-mapping/datamapper';\n\n\n\nexport interface NgrxDataConfiguration\n{\n    deafaultRequestFormat: IFormatConverter;\n    deafaultResponseFormats: IFormatConverter[];\n    dataMapper: IDataMapper;\n    dbName?: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgrxDataConfigurationService.html":{"url":"injectables/NgrxDataConfigurationService.html","title":"injectable - NgrxDataConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgrxDataConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/services/configuaration.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requestProviders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteRequestProvider\n                            \n                            \n                                getRequestProvider\n                            \n                            \n                                injectRequestProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configuration\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgrxDataConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgrxDataConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteRequestProvider(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestProvider(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            injectRequestProvider\n                        \n                        \n                    \n                \n            \n            \n                \ninjectRequestProvider(uuid: string, provider: RequestProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                RequestProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n\n                \n                    \n                        getconfiguration()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/services/configuaration.service.ts:16\n                                \n                            \n                    \n                        \n                                get the default configuration.\n\n\n                                \n                                    Returns :         NgrxDataConfiguration\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { NgrxDataConfiguration } from '../models/configuration';\nimport { config } from 'rxjs';\nimport { RequestProvider } from '../http/request-provider';\n\n@Injectable({\n    providedIn: 'root'\n })\nexport class NgrxDataConfigurationService\n{\n    private requestProviders: { [uid: string]: RequestProvider } = {};\n\n    /**\n     * get the default configuration.\n     */\n    get configuration(): NgrxDataConfiguration\n    {\n        return this.config;\n    }\n\n    injectRequestProvider(uuid: string, provider: RequestProvider)\n    {\n       this.requestProviders[uuid] = provider;\n    }\n\n    deleteRequestProvider(uuid: string)\n    {\n        this.requestProviders[uuid] = undefined;\n    }\n\n    getRequestProvider(uuid: string)\n    {\n        return this.requestProviders[uuid];\n    }\n\n    constructor(@Inject('ngrxdataConfig') private config: NgrxDataConfiguration )\n    {\n        \n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgrxDataEffects.html":{"url":"injectables/NgrxDataEffects.html","title":"injectable - NgrxDataEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgrxDataEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                makeRequest$\n                            \n                            \n                                requestSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, dataService: DataService, configService: NgrxDataConfigurationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        NgrxDataConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(RequestActions.ActionTypes.MakeRequest), \n    mergeMap((action)=>{\n\n       let makeRequestAction = action as RequestActions.MakeRequest;\n\n       let providerUid = makeRequestAction.providerUid;\n       let uniqueName = makeRequestAction.uniqueName;\n\n       //get the provider from the service\n       let provider = this.configService.getRequestProvider(providerUid);\n\n       //make the http request with the provider\n       return this.dataService.makeRequest(makeRequestAction.baseUrl, provider)\n\n       .pipe(mergeMap(response=>{\n\n         return [new RequestActions.RequestSuccess(providerUid, response, uniqueName)];\n\n       }), catchError(err=>{\n\n         //delete the provider from the service very important\n         this.configService.deleteRequestProvider(providerUid);\n         return of(new RequestActions.RequestError([err], uniqueName));\n\n       }));\n       \n\n    }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/effects.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(RequestActions.ActionTypes.RequestSuccess),\n    withLatestFrom(this.store),\n    mergeMap(([action, state])=>{\n\n      let requestSuccessAction = action as RequestActions.RequestSuccess;\n\n      let data = requestSuccessAction.data;      \n      let uniqueName = requestSuccessAction.uniqueName;\n\n      //get the provider from the service\n      let provider = this.configService.getRequestProvider(requestSuccessAction.providerUid);\n      //delete the provider from the service very important\n      this.configService.deleteRequestProvider(requestSuccessAction.providerUid);\n\n      let method = provider.requestType;\n\n      let dataMapper = provider.dataMapper;\n\n      try\n      {\n         let crudActions = dataMapper(data, uniqueName, method, state.entityDb);\n\n         let result : Action[] = crudActions;\n         result.push(new RequestActions.SuccessMapping(uniqueName));\n\n         return crudActions;\n      }\n      catch(error)\n      {\n         return [new RequestActions.RequestError([error], uniqueName)];\n      }\n\n    }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataService } from '../services/entity-data.service';\nimport * as RequestActions from './request-actions';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { mergeMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { NgrxDataConfigurationService } from '../services/configuaration.service';\nimport { of } from 'rxjs';\nimport { Action, Store } from '@ngrx/store';\n\n@Injectable()\nexport class NgrxDataEffects\n{    \n    constructor(private actions$: Actions, private dataService: DataService, private configService: NgrxDataConfigurationService, private store: Store){\n      \n    }\n\n    @Effect()\n    requestSuccess = this.actions$.pipe(ofType(RequestActions.ActionTypes.RequestSuccess),\n    withLatestFrom(this.store),\n    mergeMap(([action, state])=>{\n\n      let requestSuccessAction = action as RequestActions.RequestSuccess;\n\n      let data = requestSuccessAction.data;      \n      let uniqueName = requestSuccessAction.uniqueName;\n\n      //get the provider from the service\n      let provider = this.configService.getRequestProvider(requestSuccessAction.providerUid);\n      //delete the provider from the service very important\n      this.configService.deleteRequestProvider(requestSuccessAction.providerUid);\n\n      let method = provider.requestType;\n\n      let dataMapper = provider.dataMapper;\n\n      try\n      {\n         let crudActions = dataMapper(data, uniqueName, method, state.entityDb);\n\n         let result : Action[] = crudActions;\n         result.push(new RequestActions.SuccessMapping(uniqueName));\n\n         return crudActions;\n      }\n      catch(error)\n      {\n         return [new RequestActions.RequestError([error], uniqueName)];\n      }\n\n    }));\n\n    @Effect()\n    makeRequest$ = this.actions$.pipe(ofType(RequestActions.ActionTypes.MakeRequest), \n    mergeMap((action)=>{\n\n       let makeRequestAction = action as RequestActions.MakeRequest;\n\n       let providerUid = makeRequestAction.providerUid;\n       let uniqueName = makeRequestAction.uniqueName;\n\n       //get the provider from the service\n       let provider = this.configService.getRequestProvider(providerUid);\n\n       //make the http request with the provider\n       return this.dataService.makeRequest(makeRequestAction.baseUrl, provider)\n\n       .pipe(mergeMap(response=>{\n\n         return [new RequestActions.RequestSuccess(providerUid, response, uniqueName)];\n\n       }), catchError(err=>{\n\n         //delete the provider from the service very important\n         this.configService.deleteRequestProvider(providerUid);\n         return of(new RequestActions.RequestError([err], uniqueName));\n\n       }));\n       \n\n    }))\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgrxDataLibModule.html":{"url":"modules/NgrxDataLibModule.html","title":"module - NgrxDataLibModule","body":"\n                   \n\n\n\n\n    Modules\n    NgrxDataLibModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/ngrx-data-lib.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgrxDataConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/ngrx-data-lib.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgrxDataConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, OnDestroy, ModuleWithProviders, Injector } from '@angular/core';\nimport { NgrxDataConfiguration } from './models/configuration';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer, initialState } from './state/state';\nimport { EffectsModule } from '@ngrx/effects'\nimport { NgrxDataEffects } from './state/effects';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    \n  ],\n  providers: [\n         \n  ],\n  imports: [\n    EffectsModule.forRoot([NgrxDataEffects]),   \n    HttpClientModule,\n    StoreModule.forFeature('entityDb', reducer),    \n  ],\n  exports: [    \n    \n  ]\n})\nexport class NgrxDataLibModule {  \n\n   static Reducer = reducer;\n   static injector: Injector = null;\n   \n   static forRoot(config: NgrxDataConfiguration): ModuleWithProviders {    \n\n     return {\n      ngModule: NgrxDataLibModule,\n\n      providers: [\n        {provide: 'ngrxdataConfig', useValue: config}\n      ]\n     }\n   }\n\n   constructor(injector: Injector)\n   {\n      NgrxDataLibModule.injector = injector;      \n   }\n\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestError.html":{"url":"classes/RequestError.html","title":"class - RequestError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: string[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.RequestError\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError',\n    SuccessMapping = '[Request] SuccessMapping',\n    EndRequest = '[Request] EndRequest',\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public providerUid: string, public data: any, public uniqueName: string ){}\n}\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport class SuccessMapping implements Action\n{\n   readonly type = ActionTypes.SuccessMapping;   \n   constructor(public uniqueName: string){}\n}\n\nexport class EndRequest implements Action\n{\n   readonly type = ActionTypes.EndRequest;   \n   constructor(public uniqueName: string){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError |\nSuccessMapping |\nEndRequest\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestProvider.html":{"url":"classes/RequestProvider.html","title":"class - RequestProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/http/request-provider.ts\n        \n\n            \n                Description\n            \n            \n                represent an http request.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _body\n                            \n                            \n                                    Private\n                                _dataMapper\n                            \n                            \n                                    Private\n                                _requestFormat\n                            \n                            \n                                    Private\n                                _requestType\n                            \n                            \n                                    Private\n                                _responseFormats\n                            \n                            \n                                    Private\n                                _url\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                at\n                            \n                            \n                                withBody\n                            \n                            \n                                withDataMapper\n                            \n                            \n                                withParam\n                            \n                            \n                                withRequestFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    responseFormats\n                                \n                                \n                                    requestFormat\n                                \n                                \n                                    requestType\n                                \n                                \n                                    body\n                                \n                                \n                                    dataMapper\n                                \n                                \n                                    url\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(route: string[], params: NameValue[], requestType: HttpMethod, body: any, responseFormats: IFormatConverter[], requestFormat: IFormatConverter, dataMapper: IDataMapper)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        NameValue[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestType\n                                                  \n                                                        \n                                                                        HttpMethod\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseFormats\n                                                  \n                                                        \n                                                                        IFormatConverter[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestFormat\n                                                  \n                                                        \n                                                                        IFormatConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataMapper\n                                                  \n                                                        \n                                                                        IDataMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dataMapper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDataMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _requestFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _responseFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IFormatConverter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NameValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(param: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:114\n                \n            \n\n\n            \n                \n                    add a path param to the url.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the param to add to the url.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withBody\n                        \n                        \n                    \n                \n            \n            \n                \nwithBody(body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:134\n                \n            \n\n\n            \n                \n                    add body to the request (only valid for POST and PUT requests)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withDataMapper\n                        \n                        \n                    \n                \n            \n            \n                \nwithDataMapper(mapper: IDataMapper)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:156\n                \n            \n\n\n            \n                \n                    set the data mapper to be used in this request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                IDataMapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data mapper to be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withParam\n                        \n                        \n                    \n                \n            \n            \n                \nwithParam(name: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:123\n                \n            \n\n\n            \n                \n                    Add a query param to the url (only valid for GET and DELETE requests)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the name of the parameter.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the value of the parameter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withRequestFormat\n                        \n                        \n                    \n                \n            \n            \n                \nwithRequestFormat(format: IFormatConverter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                IFormatConverter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RequestProvider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        responseFormats\n                    \n                \n\n                \n                    \n                        getresponseFormats()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:38\n                                \n                            \n                    \n                        \n                                get the response formats that this request can parse.\n\n\n                                \n                                    Returns :         IFormatConverter[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        requestFormat\n                    \n                \n\n                \n                    \n                        getrequestFormat()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:46\n                                \n                            \n                    \n                        \n                                get the format converter to parse the request body in the case of POST and PUT.\n\n\n                                \n                                    Returns :         IFormatConverter\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        requestType\n                    \n                \n\n                \n                    \n                        getrequestType()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:54\n                                \n                            \n                    \n                        \n                                get the request type asociated with this provider.\n\n\n                                \n                                    Returns :         HttpMethod\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:61\n                                \n                            \n                    \n                        \n                                get the request body or null if is not available.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dataMapper\n                    \n                \n\n                \n                    \n                        getdataMapper()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:68\n                                \n                            \n                    \n                        \n                                get the data mapper asociated with this request.\n\n\n                                \n                                    Returns :         IDataMapper\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngrx-data-lib/src/lib/http/request-provider.ts:76\n                                \n                            \n                    \n                        \n                                get the url generated by this provider\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { NameValue } from '../models/name-value';\nimport { HttpMethod } from './http-method';\nimport { IFormatConverter } from '../data-format/format-converter';\nimport { IDataMapper } from '../data-mapping/datamapper';\n\n/**\n * represent an http request.\n */\nexport class RequestProvider {\n    \n    //the route of the url.\n    private route: string[];\n  \n    //the params to include in the url.\n    private params: NameValue[];\n  \n    //the request body.\n    private _body: any = null;\n  \n    //the constructed url.\n    private _url: string = null;\n  \n    //the request type.\n    private _requestType: HttpMethod;\n  \n    //response formats.\n    private _responseFormats: IFormatConverter[];\n\n    //response formats.\n    private _requestFormat: IFormatConverter;\n\n    //data mapper to be used to map the response into db actions.\n    private _dataMapper: IDataMapper;\n\n    /**\n     * get the response formats that this request can parse.\n     */\n    get responseFormats() : IFormatConverter[]\n    {\n       return this._responseFormats;\n    }\n\n    /**\n     * get the format converter to parse the request body in the case of POST and PUT.\n     */\n    get requestFormat() : IFormatConverter\n    {\n       return this._requestFormat;\n    }\n\n    /**\n     * get the request type asociated with this provider.\n     */\n    get requestType(): HttpMethod {\n      return this._requestType;\n    }\n  \n    /**\n     * get the request body or null if is not available.\n     */\n    get body(): any {\n      return this._body;\n    }\n\n    /**\n     * get the data mapper asociated with this request.\n     */\n    get dataMapper() : IDataMapper\n    {\n      return this._dataMapper;\n    }\n  \n    /**\n    * get the url generated by this provider\n    */\n    get url(): string {\n  \n      if (!this._url) {\n        //create the url\n        let url = this.route.join('/');\n        let parsedParams: string[] = [];\n  \n        this.params.forEach((v) => {\n          parsedParams.push([v.name, v.value].join('='));\n        });\n  \n        this._url = encodeURI(url + '?' + parsedParams.join('&'));\n      }\n      \n      return this._url;\n  \n    }\n  \n    constructor(route: string[], params: NameValue[], requestType: HttpMethod, body: any, responseFormats: IFormatConverter[], requestFormat: IFormatConverter, dataMapper: IDataMapper) {\n  \n      //clone arrays\n      this.route = route.slice(0);\n      this.params = params.slice(0);\n      \n      this._requestType = requestType;\n      this._body = body;\n      this._responseFormats = responseFormats;\n      this._requestFormat = requestFormat;\n      this._dataMapper = dataMapper;\n    }\n\n    //Start of the fluent api\n    //-------------------------------------------------------------------------------------------------------\n  \n    /**\n     * add a path param to the url.\n     * @param param the param to add to the url.\n     */\n    at(param: string): RequestProvider {\n      return new RequestProvider(this.route.concat(param), this.params, this._requestType, this._body, this._responseFormats, this._requestFormat, this._dataMapper);\n    }\n  \n    /**\n     * Add a query param to the url (only valid for GET and DELETE requests)\n     * @param name the name of the parameter.\n     * @param value the value of the parameter.\n     */\n    withParam(name: string, value: string): RequestProvider {\n      if (this._requestType != 'GET' && this._requestType != 'DELETE' )\n        throw \"query params are only valid for GET and DELETE requests.\";\n  \n      return new RequestProvider(this.route, this.params.concat(new NameValue(name, value)), this._requestType, this._body, this._responseFormats, this._requestFormat, this._dataMapper);\n    }\n  \n    /**\n     * add body to the request (only valid for POST and PUT requests)\n     * @param body the body to add\n     */\n    withBody(body: any): RequestProvider {\n      if (this._requestType != 'POST' && this._requestType != 'PUT')\n        throw \"request body is only valid for POST and PUT requests.\";\n  \n      if (this._body != null)\n        throw \"request body can only be assigned one time.\";\n  \n      return new RequestProvider(this.route, this.params, this._requestType, body, this._responseFormats, this._requestFormat, this._dataMapper);\n    }\n\n    withRequestFormat(format: IFormatConverter) : RequestProvider\n    {\n      if (this._requestType != 'POST' && this._requestType != 'PUT')\n        throw \"request format is only valid for POST and PUT requests.\";\n\n      return new RequestProvider(this.route, this.params, this._requestType, this._body, this._responseFormats, format, this._dataMapper); \n    }\n\n    /**\n     * set the data mapper to be used in this request.\n     * @param mapper data mapper to be used.\n     */\n    withDataMapper(mapper: IDataMapper)\n    {\n      return new RequestProvider(this.route, this.params, this._requestType, this._body, this._responseFormats, this.requestFormat, mapper); \n    } \n  \n  }\n  \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestSuccess.html":{"url":"classes/RequestSuccess.html","title":"class - RequestSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                providerUid\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providerUid: string, data: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providerUid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            providerUid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.RequestSuccess\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError',\n    SuccessMapping = '[Request] SuccessMapping',\n    EndRequest = '[Request] EndRequest',\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public providerUid: string, public data: any, public uniqueName: string ){}\n}\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport class SuccessMapping implements Action\n{\n   readonly type = ActionTypes.SuccessMapping;   \n   constructor(public uniqueName: string){}\n}\n\nexport class EndRequest implements Action\n{\n   readonly type = ActionTypes.EndRequest;   \n   constructor(public uniqueName: string){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError |\nSuccessMapping |\nEndRequest\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectEntity.html":{"url":"classes/SelectEntity.html","title":"class - SelectEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SelectEntity\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessMapping.html":{"url":"classes/SuccessMapping.html","title":"class - SuccessMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/request-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SuccessMapping\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/request-actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestProvider } from '../http/request-provider';\nimport { HttpMethod } from '../http/http-method';\n\nexport enum ActionTypes\n{\n    MakeRequest = '[Request] MakeRequest',\n    RequestSuccess = '[Request] RequestSuccess',\n    RequestError = '[Request] RequestError',\n    SuccessMapping = '[Request] SuccessMapping',\n    EndRequest = '[Request] EndRequest',\n}\n\n\nexport class MakeRequest implements Action\n{\n   readonly type = ActionTypes.MakeRequest;   \n   constructor( public providerUid: string, public baseUrl: string, public uniqueName: string ){}\n}\n\nexport class RequestSuccess implements Action\n{\n   readonly type = ActionTypes.RequestSuccess;   \n   constructor( public providerUid: string, public data: any, public uniqueName: string ){}\n}\n\nexport class RequestError implements Action\n{\n   readonly type = ActionTypes.RequestError;   \n   constructor( public errors: string[], public uniqueName: string ){}\n}\n\nexport class SuccessMapping implements Action\n{\n   readonly type = ActionTypes.SuccessMapping;   \n   constructor(public uniqueName: string){}\n}\n\nexport class EndRequest implements Action\n{\n   readonly type = ActionTypes.EndRequest;   \n   constructor(public uniqueName: string){}\n}\n\nexport type RequestActions = \nMakeRequest |\nRequestSuccess |\nRequestError |\nSuccessMapping |\nEndRequest\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextFormatConverter.html":{"url":"classes/TextFormatConverter.html","title":"class - TextFormatConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextFormatConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IFormatConverter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToData\n                            \n                            \n                                convertToObject\n                            \n                            \n                                getCharset\n                            \n                            \n                                getMediaType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToData\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToData(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ArrayBuffer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToObject\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToObject(data: ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCharset\n                        \n                        \n                    \n                \n            \n            \n                \ngetCharset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMediaType\n                        \n                        \n                    \n                \n            \n            \n                \ngetMediaType()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IFormatConverter } from './format-converter';\nimport { FormatDataType } from '../http/response-type';\nimport { uintToString, stringToUint } from './tools';\n\n\nexport class TextFormatConverter implements IFormatConverter\n{\n    getMediaType(): string {\n        return 'text/plain'\n    }\n\n    getCharset(): string {\n        return 'utf-8';\n    }\n\n    convertToObject(data: ArrayBuffer) : any {\n        let str = uintToString(new Uint8Array(data));\n        return JSON.parse(str);\n    }\n\n    convertToData(obj: any) : ArrayBuffer {\n        let str = JSON.stringify(obj);\n        return stringToUint(str).buffer as ArrayBuffer;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Update.html":{"url":"classes/Update.html","title":"class - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: any, uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.Update\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMany.html":{"url":"classes/UpdateMany.html","title":"class - UpdateMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngrx-data-lib/src/lib/state/db-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entities: any[], uniqueName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entities\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uniqueName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UpdateMany\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uniqueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngrx-data-lib/src/lib/state/db-actions.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum ActionTypes\n{\n    //actions that affect the database\n    CreateEntityState = '[DataEntitiesDB] CreateEntityState',\n    DeleteEntityState = '[DataEntitiesDB] DeleteEntityState',\n    DeleteAllEntityStates = '[DataEntitiesDB] DeleteAllEntityStates',\n    \n    //actions that affect only specific entity\n    AddEntityToState = '[DataEntitiesDB] AddEntityToState',\n    AddMany = '[DataEntitiesDB] AddMany',\n    DeleteEntityFromState = '[DataEntitiesDB] DeleteEntityFromState',\n    DeleteAll = '[DataEntitiesDB] DeleteAll',\n    DeleteMany = '[DataEntitiesDB] DeleteMany',\n    Update = '[DataEntitiesDB] Update',\n    UpdateMany = '[DataEntitiesDB] UpdateMany',    \n    SelectEntity = '[DataEntitiesDB] SelectEntity',\n}\n\n//actions that affect the database\nexport class CreateEntityState implements Action\n{\n   readonly type = ActionTypes.CreateEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteEntityState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityState;   \n   constructor( public uniqueName: string ){}\n}\n\nexport class DeleteAllEntityStates implements Action\n{\n   readonly type = ActionTypes.DeleteAllEntityStates;   \n    constructor(){} \n}\n\n\n//actions that affect only specific entity\nexport class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\n\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   \n   constructor( public id: string, public uniqueName: string ){}\n}\n\n\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   \n   constructor( public uniqueName: string ){}\n}\n\n\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   \n   constructor( public ids: string[], public uniqueName: string ){}\n}\n\n\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   \n   constructor( public entity: any, public uniqueName: string ){}\n}\n\n\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   \n   constructor( public entities: any[], public uniqueName: string ){}\n}\n\nexport class SelectEntity implements Action\n{\n   readonly type = ActionTypes.SelectEntity;   \n   constructor( public id: string | number, public uniqueName: string ){}\n}\n\nexport type DBActions = \n//actions that affect the database\nCreateEntityState |\nDeleteEntityState |\nDeleteAllEntityStates |\n\n//actions that affect only specific entity\nAddEntityToState | \nAddMany |\nDeleteEntityFromState |\nDeleteAll |\nDeleteMany |\nUpdate |\nUpdateMany |\nSelectEntity\n;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/format-converter.ts\n            \n            interface\n            IFormatConverter\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/json-format-converter.ts\n            \n            class\n            JsonFormatConverter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/text-format-converter.ts\n            \n            class\n            TextFormatConverter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/tools.ts\n            \n            function\n            stringToUint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-format/tools.ts\n            \n            function\n            uintToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/datamapper.ts\n            \n            interface\n            IDataMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n            \n            interface\n            DataWrapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n            \n            function\n            entityArrayMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            class\n            ImmutableObservable\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            function\n            makeArrayCopy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            function\n            makeShadowCopy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n            \n            variable\n            makeImmutable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/helpers/static-constructor.decorator.ts\n            \n            function\n            StaticConstructed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            deleteRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            extractCharset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            getRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            makeRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            postRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/http-communication.ts\n            \n            function\n            putRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/http/request-provider.ts\n            \n            class\n            RequestProvider\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/models/configuration.ts\n            \n            interface\n            NgrxDataConfiguration\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/models/name-value.ts\n            \n            class\n            NameValue\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/configuaration.service.ts\n            \n            injectable\n            NgrxDataConfigurationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity-data.service.ts\n            \n            injectable\n            DataService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity.service.ts\n            \n            class\n            EntityService\n            \n                37 %\n                (14/37)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity.service.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity.service.ts\n            \n            variable\n            isLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/services/entity.service.ts\n            \n            variable\n            selectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            AddEntityToState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            AddMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            CreateEntityState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteAll\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteAllEntityStates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteEntityFromState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteEntityState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            DeleteMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            SelectEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            Update\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/db-actions.ts\n            \n            class\n            UpdateMany\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/effects.ts\n            \n            injectable\n            NgrxDataEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            class\n            EntityStateCollectionAdapter\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            interface\n            EntityStatesCollection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            interface\n            ExtendedEntityState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            variable\n            entityAdapter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            EndRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            MakeRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            RequestError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            RequestSuccess\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/request-actions.ts\n            \n            class\n            SuccessMapping\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            variable\n            getDB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngrx-data-lib/src/lib/state/state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            @ngrx/effects : ^7.3.0\n        \n            @ngrx/entity : ^7.3.0\n        \n            @ngrx/store : ^7.3.0\n        \n            @ngrx/store-devtools : ^7.3.0\n        \n            @types/uuid : ^3.4.4\n        \n            class-transformer : ^0.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            uuid : ^3.3.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionTypes   (projects/.../db-actions.ts)\n                        \n                        \n                            ActionTypes   (projects/.../request-actions.ts)\n                        \n                        \n                            FormatDataType   (projects/.../response-type.ts)\n                        \n                        \n                            HttpMethod   (projects/.../http-method.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/db-actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionTypes\n                    \n                \n                        \n                            \n                                 CreateEntityState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] CreateEntityState\n                            \n                        \n                        \n                            \n                                 DeleteEntityState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteEntityState\n                            \n                        \n                        \n                            \n                                 DeleteAllEntityStates\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteAllEntityStates\n                            \n                        \n                        \n                            \n                                 AddEntityToState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] AddEntityToState\n                            \n                        \n                        \n                            \n                                 AddMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] AddMany\n                            \n                        \n                        \n                            \n                                 DeleteEntityFromState\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteEntityFromState\n                            \n                        \n                        \n                            \n                                 DeleteAll\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteAll\n                            \n                        \n                        \n                            \n                                 DeleteMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] DeleteMany\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] Update\n                            \n                        \n                        \n                            \n                                 UpdateMany\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] UpdateMany\n                            \n                        \n                        \n                            \n                                 SelectEntity\n                            \n                        \n                        \n                            \n                                Value : [DataEntitiesDB] SelectEntity\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/state/request-actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionTypes\n                    \n                \n                        \n                            \n                                 MakeRequest\n                            \n                        \n                        \n                            \n                                Value : [Request] MakeRequest\n                            \n                        \n                        \n                            \n                                 RequestSuccess\n                            \n                        \n                        \n                            \n                                Value : [Request] RequestSuccess\n                            \n                        \n                        \n                            \n                                 RequestError\n                            \n                        \n                        \n                            \n                                Value : [Request] RequestError\n                            \n                        \n                        \n                            \n                                 SuccessMapping\n                            \n                        \n                        \n                            \n                                Value : [Request] SuccessMapping\n                            \n                        \n                        \n                            \n                                 EndRequest\n                            \n                        \n                        \n                            \n                                Value : [Request] EndRequest\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/http/response-type.ts\n    \n        \n            \n                \n                    \n                        \n                        FormatDataType\n                    \n                \n                    \n                        \n                            The response type that HttpRequest support.\n\n                        \n                    \n                        \n                            \n                                 ArrayBuffer\n                            \n                        \n                        \n                            \n                                Value : arraybuffer\n                            \n                        \n                        \n                            \n                                 Blob\n                            \n                        \n                        \n                            \n                                Value : blob\n                            \n                        \n                        \n                            \n                                 Document\n                            \n                        \n                        \n                            \n                                Value : document\n                            \n                        \n                        \n                            \n                                 Json\n                            \n                        \n                        \n                            \n                                Value : json\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n            \n        \n\n    projects/ngrx-data-lib/src/lib/http/http-method.ts\n    \n        \n            \n                \n                    \n                        \n                        HttpMethod\n                    \n                \n                    \n                        \n                            Supported http methods\n\n                        \n                    \n                        \n                            \n                                 get\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 delete\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 post\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 put\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deleteRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            entityArrayMapper   (projects/.../entity-array-mapper.ts)\n                        \n                        \n                            extractCharset   (projects/.../http-communication.ts)\n                        \n                        \n                            getRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            makeArrayCopy   (projects/.../immutable-observable.ts)\n                        \n                        \n                            makeRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            makeShadowCopy   (projects/.../immutable-observable.ts)\n                        \n                        \n                            postRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            putRequest   (projects/.../http-communication.ts)\n                        \n                        \n                            reducer   (projects/.../state.ts)\n                        \n                        \n                            StaticConstructed   (projects/.../static-constructor.decorator.ts)\n                        \n                        \n                            stringToUint   (projects/.../tools.ts)\n                        \n                        \n                            uintToString   (projects/.../tools.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/http/http-communication.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deleteRequest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteRequest(http, url, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a delete request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractCharset\n                        \n                        \n                    \n                \n            \n            \n                \nextractCharset(charset)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    charset\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(http, url, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a get request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \nmakeRequest(http, baseUrl, provider)\n                \n            \n\n\n\n\n            \n                \n                    make http request using a request provider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the http client to be use.\n\n                                    \n                                \n                                \n                                    baseUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base url for this request.\n\n                                    \n                                \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request provider to be use for this http request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postRequest\n                        \n                        \n                    \n                \n            \n            \n                \npostRequest(http, url, body: any, requestFormat, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a post request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body of the request.\n\n                                    \n                                \n                                \n                                    requestFormat\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the format to use to parse the body request.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \nputRequest(http, url, body: any, requestFormat, formatsAcepted)\n                \n            \n\n\n\n\n            \n                \n                    make a put request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the angular http client.\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url of the endpoint.\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the body of the request.\n\n                                    \n                                \n                                \n                                    requestFormat\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the format to use to parse the body request.\n\n                                    \n                                \n                                \n                                    formatsAcepted\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of the formats that can parse the response. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/data-mapping/entity-array-mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            entityArrayMapper\n                        \n                        \n                    \n                \n            \n            \n                \nentityArrayMapper(data: any, uniqueName, requestType, dbState)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uniqueName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dbState\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DBActions[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeArrayCopy\n                        \n                        \n                    \n                \n            \n            \n                \nmakeArrayCopy(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeShadowCopy\n                        \n                        \n                    \n                \n            \n            \n                \nmakeShadowCopy(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityStatesCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/helpers/static-constructor.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StaticConstructed\n                        \n                        \n                    \n                \n            \n            \n                \nStaticConstructed(target: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/data-format/tools.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            stringToUint\n                        \n                        \n                    \n                \n            \n            \n                \nstringToUint(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uintToString\n                        \n                        \n                    \n                \n            \n            \n                \nuintToString(uintArray)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uintArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngrx-data\nManage entities in ngrx without writing boilerplate code!!\nngrx-data is a library that take care of the entity management of the state.\nWith easy to use functionalities as:\n1. Entities Services that can be injected and has all the logic to manage the entities.\n2. Fluent API to make http requests to retrive the data from external resources.\n3. Support for multiple data formats.\n4. Predictable and custom data mapping.\n5. Built-in mutation protection.\n6. Rich filtering system to retrive the data.\n7. Built-in actions to make CRUD operations on the state.\nGetting Started\nFollow this instructions to get a demo of a prject running ngrx-data.\nPrerequisites\nTODO\nInstalling\nTODO\nHow to use it\nAfter you have ngrx-data installed you are ready to start using it.\nFirst Import the module and apply the configuration\napp.module.ts\n```typescript\nimport { NgrxDataLibModule, JsonFormatConverter, entityArrayMapper } from 'ngrx-data-lib';\n//-----------------------\nimports: [\n//Add NgrxDataLibModule.Reducer to your reducers\nStoreModule.forRoot(NgrxDataLibModule.Reducer),\n\n//Call the forRoot method to add the module\nNgrxDataLibModule.forRoot({      \n  //converter to use to convert the body of the http requests\n  deafaultRequestFormat: new JsonFormatConverter(),\n  //formats supported in the responses\n  deafaultResponseFormats: [new JsonFormatConverter()],\n  //default data mapper to use to map the data(explained down)\n  dataMapper: entityArrayMapper      \n}),\n\n//---------------------------------------  ],\n```\nCreate the services\nCreate services that manage the entities in the state. When the service is first constructed, it will call the necesary actions to initialize the state.\nex: user.service.ts\n```typescript\nimport { EntityService } from 'ngrx-data-lib'\n//-------------------------------------------------------------\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService extends EntityService \n{\n    constructor()\n    {\n        super('users', 'https://my-json-server.typicode.com/insurance-technologies/fake-crud-server/users');\n    }\n}\n```\nProvide in super() a unique key for the entity state and the endpoint to retrive the data related with this entity.\nConsume the services\nCreate services that manage the entities in the state. When the service is first constructed, it will call the necesary actions to initialize the state.\nex: app.component.ts.ts\n```typescript\n//---------------------------------------------------\n@Component({\n  selector: 'root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit {\n  title = 'ngrx-data';\n  users$: ImmutableObservable;\n  //add the service in the constructor to be injected\n  constructor(private userService: UserService)\n  {\n  } \n  ngOnInit(): void {   \n //.select() will return an immutableObservable(explained down) that \n //can be used to retrive the data subscribing to it or using the async pipe\n //in the html template( users$ | async ).\n this.users$ = this.userService.select();  }\n  onGetUsers()\n  {\n     //this function will make an http request to retrive the entities,\n     //will save the entities in the state and the store will notify the the \n     //ImmutableObservable with the users.\n     this.userService.dispatchGet();\n  }\n}\n```\nFor testing you can use https://my-json-server.typicode.com/insurance-technologies/fake-crud-server/users for the user endpoint.\nData-mapping\nWhen sending and getting data the server has to follow a protocol in order to the client to understand it. Returning back to the configuration there is a property called dataMapper. A data mapper in ngrx-data is a function that translate the data received from the server into the correspondent actions to update the state.\n```typescript\nimports: [    //----------------------------------------\n    NgrxDataLibModule.forRoot({      //-------------------------------------- \n      dataMapper: entityArrayMapper    }),\n//---------------------------------------  ],\n```\nIn this case (entityArrayMapper) is used, that it is a built in data mapper where the data has to follow some rules:\njson\n{\n    \"unique name of the entity\": {\n        \"action\":[\n            {\n                //entity 1\n            },\n            {\n                //entity 2\n            }\n        ]\n    }\n}\nan example is the the endpoint used by this guide: https://my-json-server.typicode.com/insurance-technologies/fake-crud-server/users\njson\n{\n  \"users\": {\n    \"add\": [\n      {\n        \"id\": \"0\",\n        \"name\": \"Alejandro\",\n        \"lastName\": \"Swager\"\n      },\n      {\n        \"id\": \"1\",\n        \"name\": \"Porfirio\",\n        \"lastName\": \"Jay\"\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Martini\",\n        \"lastName\": \"Bonet\"\n      },\n      {\n        \"id\": \"3\",\n        \"name\": \"Muhamed\",\n        \"lastName\": \"Guardiola\"\n      },\n      {\n        \"id\": \"4\",\n        \"name\": \"Adam\",\n        \"lastName\": \"Sirvi\"\n      }\n    ]\n  }\n}\nThe valid actions are:\n* add\n* update\n* delete\nCustom data mapper\nIt is possible to use a custom data mapper. In ngrx-data data mappers are simple typescript functions with the signature (data: any) : DBActions[];.* data -> is the data recieved from the server as a javascript object\n* DBActions -> is a Union of Actions to make CRUD operations in the state.\nan example of a simple data mapper:\n```typescript\n// expecting data to be an array of entities ( [{...}, {...}, {...}] )\n// this data mapper will put those entities in the entity state posts\nexport function postsArrayMapper(data: any): DBActions[]\n{\n    return [\n      new AddMany(data, 'posts')\n    ];\n}\n//app.module\nimports: [    //----------------------------------------\n    NgrxDataLibModule.forRoot({      //-------------------------------------- \n      //now this data mapper can be used as the default data mapper.\n      dataMapper: postsArrayMapper    }),    //---------------------------------------\n  ],\nThe posible actions to make CRUD operations are:typescript\n   export class AddEntityToState implements Action\n{\n   readonly type = ActionTypes.AddEntityToState;   constructor( public entity: any, public uniqueName: string ){}\n}\nexport class AddMany implements Action\n{\n   readonly type = ActionTypes.AddMany;   constructor( public entities: any[], public uniqueName: string ){}\n}\nexport class DeleteEntityFromState implements Action\n{\n   readonly type = ActionTypes.DeleteEntityFromState;   constructor( public id: string, public uniqueName: string ){}\n}\nexport class DeleteAll implements Action\n{\n   readonly type = ActionTypes.DeleteAll;   constructor( public uniqueName: string ){}\n}\nexport class DeleteMany implements Action\n{\n   readonly type = ActionTypes.DeleteMany;   constructor( public ids: string[], public uniqueName: string ){}\n}\nexport class Update implements Action\n{\n   readonly type = ActionTypes.Update;   constructor( public entity: any, public uniqueName: string ){}\n}\nexport class UpdateMany implements Action\n{\n   readonly type = ActionTypes.UpdateMany;   constructor( public entities: any[], public uniqueName: string ){}\n}\n```\nBuilt With\n\nNgrx - Reactive State for Angular\nNgrx-entity - small lib to create manage entities in ngrx\n\nContributing\nPlease read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.\nVersioning\nTODO\nAuthors\n\nAll the team of Insurance Technologies\n\nSee also the list of contributors who participated in this project.\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md file for details\nAcknowledgments\nInspiration:\n  Ngrx is an awesome library to manage state in angular but it can be very easy to \n  not follow the best practices and at the end you end writing a lot of boilerplate code like copy and paste the name of the entities and creating\n  actions for every single one, effects etc.. and you end with a really big\n  state object. This library handle all the boring part for you, just concentrate\n  in the business logic of your angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Insurance Technologies\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgrxDataLibModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllActions   (projects/.../all-actions.ts)\n                        \n                        \n                            DBActions   (projects/.../db-actions.ts)\n                        \n                        \n                            RequestActions   (projects/.../request-actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/all-actions.ts\n    \n    \n        \n            \n                \n                    \n                    AllActions\n                \n            \n            \n                \n                        DBActions | RequestActions\n\n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/db-actions.ts\n    \n    \n        \n            \n                \n                    \n                    DBActions\n                \n            \n            \n                \n                        CreateEntityState | DeleteEntityState | DeleteAllEntityStates | AddEntityToState | AddMany | DeleteEntityFromState | DeleteAll | DeleteMany | Update | UpdateMany | SelectEntity\n\n                \n            \n        \n    \n    projects/ngrx-data-lib/src/lib/state/request-actions.ts\n    \n    \n        \n            \n                \n                    \n                    RequestActions\n                \n            \n            \n                \n                        MakeRequest | RequestSuccess | RequestError | SuccessMapping | EndRequest\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adapter   (projects/.../state.ts)\n                        \n                        \n                            entityAdapter   (projects/.../entity-states-collection-adapter.ts)\n                        \n                        \n                            errors   (projects/.../entity.service.ts)\n                        \n                        \n                            getDB   (projects/.../state.ts)\n                        \n                        \n                            initialState   (projects/.../state.ts)\n                        \n                        \n                            isLoading   (projects/.../entity.service.ts)\n                        \n                        \n                            makeImmutable   (projects/.../immutable-observable.ts)\n                        \n                        \n                            selectedId   (projects/.../entity.service.ts)\n                        \n                        \n                               (projects/.../entity-states-collection-adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngrx-data-lib/src/lib/state/state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EntityStateCollectionAdapter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('entityDb')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : adapter.getInitialState()\n                        \n                    \n\n\n            \n        \n\n    projects/ngrx-data-lib/src/lib/state/entity-states-collection-adapter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            entityAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEntityAdapter()\n                        \n                    \n\n                \n                    \n                        the adapter to manage the entity changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : entityAdapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    projects/ngrx-data-lib/src/lib/services/entity.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ExtendedEntityState) => state.errors\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ExtendedEntityState) => state.loadingTasks > 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ExtendedEntityState) => state.selectedId\n                        \n                    \n\n\n            \n        \n\n    projects/ngrx-data-lib/src/lib/helpers/immutable-observable.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            makeImmutable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => (source: Observable) => \n    {     \n       return new ImmutableObservable(source);\n    }\n                        \n                    \n\n                \n                    \n                        convert to an inmutable observable.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
